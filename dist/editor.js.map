{"version":3,"file":"editor.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/prop-types/checkPropTypes.js","webpack:///./node_modules/prop-types/factoryWithTypeCheckers.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/react-is/cjs/react-is.development.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/react-sortable-hoc/dist/react-sortable-hoc.esm.js","webpack:///./node_modules/react/cjs/react.development.js","webpack:///./node_modules/react/index.js","webpack:///./src/blocks/block-assets/font-family.js","webpack:///./src/blocks/block-assets/icons.js","webpack:///./src/blocks/icon-block/editor.scss","webpack:///./src/blocks/icon-block/index.js","webpack:///./src/blocks/pricing-table/editor.scss","webpack:///./src/blocks/pricing-table/index.js","webpack:///./src/blocks/pricing-table/parent.js","webpack:///./src/blocks/progress-bar-pie/editor.scss","webpack:///./src/blocks/progress-bar-pie/index.js","webpack:///./src/blocks/progress-bar/editor.scss","webpack:///./src/blocks/progress-bar/index.js","webpack:///./src/blocks/service-section/editor.scss","webpack:///./src/blocks/service-section/index.js","webpack:///./src/blocks/service-section/parent.js","webpack:///./src/blocks/zita-block-slider/edit.js","webpack:///./src/blocks/zita-block-slider/editor.scss","webpack:///./src/blocks/zita-block-slider/index.js","webpack:///./src/blocks/zita-post-slider/edit.js","webpack:///./src/blocks/zita-post-slider/editor.scss","webpack:///./src/blocks/zita-post-slider/index.js","webpack:///./src/blocks/zita-post-tc/edit.js","webpack:///./src/blocks/zita-post-tc/editor.scss","webpack:///./src/blocks/zita-post-tc/index.js","webpack:///./src/blocks/zita-post/edit.js","webpack:///./src/blocks/zita-post/editor.scss","webpack:///./src/blocks/zita-post/index.js","webpack:///./src/editor.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"htmlEntities\"]"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/editor.js\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { createElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport invariant from 'invariant';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\n\nvar Manager = function () {\n  function Manager() {\n    _classCallCheck(this, Manager);\n\n    _defineProperty(this, \"refs\", {});\n  }\n\n  _createClass(Manager, [{\n    key: \"add\",\n    value: function add(collection, ref) {\n      if (!this.refs[collection]) {\n        this.refs[collection] = [];\n      }\n\n      this.refs[collection].push(ref);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(collection, ref) {\n      var index = this.getIndex(collection, ref);\n\n      if (index !== -1) {\n        this.refs[collection].splice(index, 1);\n      }\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }, {\n    key: \"getActive\",\n    value: function getActive() {\n      var _this = this;\n\n      return this.refs[this.active.collection].find(function (_ref) {\n        var node = _ref.node;\n        return node.sortableInfo.index == _this.active.index;\n      });\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(collection, ref) {\n      return this.refs[collection].indexOf(ref);\n    }\n  }, {\n    key: \"getOrderedRefs\",\n    value: function getOrderedRefs() {\n      var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.active.collection;\n      return this.refs[collection].sort(sortByIndex);\n    }\n  }]);\n\n  return Manager;\n}();\n\nfunction sortByIndex(_ref2, _ref3) {\n  var index1 = _ref2.node.sortableInfo.index;\n  var index2 = _ref3.node.sortableInfo.index;\n  return index1 - index2;\n}\n\nfunction arrayMove(array, from, to) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof console !== 'undefined') {\n      console.warn(\"Deprecation warning: arrayMove will no longer be exported by 'react-sortable-hoc' in the next major release. Please install the `array-move` package locally instead. https://www.npmjs.com/package/array-move\");\n    }\n  }\n\n  array = array.slice();\n  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n  return array;\n}\nfunction omit(obj, keysToOmit) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (keysToOmit.indexOf(key) === -1) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\nvar events = {\n  end: ['touchend', 'touchcancel', 'mouseup'],\n  move: ['touchmove', 'mousemove'],\n  start: ['touchstart', 'mousedown']\n};\nvar vendorPrefix = function () {\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    return '';\n  }\n\n  var styles = window.getComputedStyle(document.documentElement, '') || ['-moz-hidden-iframe'];\n  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\n\n  switch (pre) {\n    case 'ms':\n      return 'ms';\n\n    default:\n      return pre && pre.length ? pre[0].toUpperCase() + pre.substr(1) : '';\n  }\n}();\nfunction setInlineStyles(node, styles) {\n  Object.keys(styles).forEach(function (key) {\n    node.style[key] = styles[key];\n  });\n}\nfunction setTranslate3d(node, translate) {\n  node.style[\"\".concat(vendorPrefix, \"Transform\")] = translate == null ? '' : \"translate3d(\".concat(translate.x, \"px,\").concat(translate.y, \"px,0)\");\n}\nfunction setTransitionDuration(node, duration) {\n  node.style[\"\".concat(vendorPrefix, \"TransitionDuration\")] = duration == null ? '' : \"\".concat(duration, \"ms\");\n}\nfunction closest(el, fn) {\n  while (el) {\n    if (fn(el)) {\n      return el;\n    }\n\n    el = el.parentNode;\n  }\n\n  return null;\n}\nfunction limit(min, max, value) {\n  return Math.max(min, Math.min(value, max));\n}\n\nfunction getPixelValue(stringValue) {\n  if (stringValue.substr(-2) === 'px') {\n    return parseFloat(stringValue);\n  }\n\n  return 0;\n}\n\nfunction getElementMargin(element) {\n  var style = window.getComputedStyle(element);\n  return {\n    bottom: getPixelValue(style.marginBottom),\n    left: getPixelValue(style.marginLeft),\n    right: getPixelValue(style.marginRight),\n    top: getPixelValue(style.marginTop)\n  };\n}\nfunction provideDisplayName(prefix, Component$$1) {\n  var componentName = Component$$1.displayName || Component$$1.name;\n  return componentName ? \"\".concat(prefix, \"(\").concat(componentName, \")\") : prefix;\n}\nfunction getScrollAdjustedBoundingClientRect(node, scrollDelta) {\n  var boundingClientRect = node.getBoundingClientRect();\n  return {\n    top: boundingClientRect.top + scrollDelta.top,\n    left: boundingClientRect.left + scrollDelta.left\n  };\n}\nfunction getPosition(event) {\n  if (event.touches && event.touches.length) {\n    return {\n      x: event.touches[0].pageX,\n      y: event.touches[0].pageY\n    };\n  } else if (event.changedTouches && event.changedTouches.length) {\n    return {\n      x: event.changedTouches[0].pageX,\n      y: event.changedTouches[0].pageY\n    };\n  } else {\n    return {\n      x: event.pageX,\n      y: event.pageY\n    };\n  }\n}\nfunction isTouchEvent(event) {\n  return event.touches && event.touches.length || event.changedTouches && event.changedTouches.length;\n}\nfunction getEdgeOffset(node, parent) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    left: 0,\n    top: 0\n  };\n\n  if (!node) {\n    return undefined;\n  }\n\n  var nodeOffset = {\n    left: offset.left + node.offsetLeft,\n    top: offset.top + node.offsetTop\n  };\n\n  if (node.parentNode === parent) {\n    return nodeOffset;\n  }\n\n  return getEdgeOffset(node.parentNode, parent, nodeOffset);\n}\nfunction getTargetIndex(newIndex, prevIndex, oldIndex) {\n  if (newIndex < oldIndex && newIndex > prevIndex) {\n    return newIndex - 1;\n  } else if (newIndex > oldIndex && newIndex < prevIndex) {\n    return newIndex + 1;\n  } else {\n    return newIndex;\n  }\n}\nfunction getLockPixelOffset(_ref) {\n  var lockOffset = _ref.lockOffset,\n      width = _ref.width,\n      height = _ref.height;\n  var offsetX = lockOffset;\n  var offsetY = lockOffset;\n  var unit = 'px';\n\n  if (typeof lockOffset === 'string') {\n    var match = /^[+-]?\\d*(?:\\.\\d*)?(px|%)$/.exec(lockOffset);\n    invariant(match !== null, 'lockOffset value should be a number or a string of a ' + 'number followed by \"px\" or \"%\". Given %s', lockOffset);\n    offsetX = parseFloat(lockOffset);\n    offsetY = parseFloat(lockOffset);\n    unit = match[1];\n  }\n\n  invariant(isFinite(offsetX) && isFinite(offsetY), 'lockOffset value should be a finite. Given %s', lockOffset);\n\n  if (unit === '%') {\n    offsetX = offsetX * width / 100;\n    offsetY = offsetY * height / 100;\n  }\n\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\nfunction getLockPixelOffsets(_ref2) {\n  var height = _ref2.height,\n      width = _ref2.width,\n      lockOffset = _ref2.lockOffset;\n  var offsets = Array.isArray(lockOffset) ? lockOffset : [lockOffset, lockOffset];\n  invariant(offsets.length === 2, 'lockOffset prop of SortableContainer should be a single ' + 'value or an array of exactly two values. Given %s', lockOffset);\n\n  var _offsets = _slicedToArray(offsets, 2),\n      minLockOffset = _offsets[0],\n      maxLockOffset = _offsets[1];\n\n  return [getLockPixelOffset({\n    height: height,\n    lockOffset: minLockOffset,\n    width: width\n  }), getLockPixelOffset({\n    height: height,\n    lockOffset: maxLockOffset,\n    width: width\n  })];\n}\n\nfunction isScrollable(el) {\n  var computedStyle = window.getComputedStyle(el);\n  var overflowRegex = /(auto|scroll)/;\n  var properties = ['overflow', 'overflowX', 'overflowY'];\n  return properties.find(function (property) {\n    return overflowRegex.test(computedStyle[property]);\n  });\n}\n\nfunction getScrollingParent(el) {\n  if (!(el instanceof HTMLElement)) {\n    return null;\n  } else if (isScrollable(el)) {\n    return el;\n  } else {\n    return getScrollingParent(el.parentNode);\n  }\n}\nfunction getContainerGridGap(element) {\n  var style = window.getComputedStyle(element);\n\n  if (style.display === 'grid') {\n    return {\n      x: getPixelValue(style.gridColumnGap),\n      y: getPixelValue(style.gridRowGap)\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n}\nvar KEYCODE = {\n  TAB: 9,\n  ESC: 27,\n  SPACE: 32,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\nvar NodeType = {\n  Anchor: 'A',\n  Button: 'BUTTON',\n  Canvas: 'CANVAS',\n  Input: 'INPUT',\n  Option: 'OPTION',\n  Textarea: 'TEXTAREA',\n  Select: 'SELECT'\n};\nfunction cloneNode(node) {\n  var selector = 'input, textarea, select, canvas, [contenteditable]';\n  var fields = node.querySelectorAll(selector);\n  var clonedNode = node.cloneNode(true);\n\n  var clonedFields = _toConsumableArray(clonedNode.querySelectorAll(selector));\n\n  clonedFields.forEach(function (field, i) {\n    if (field.type !== 'file') {\n      field.value = fields[i].value;\n    }\n\n    if (field.type === 'radio' && field.name) {\n      field.name = \"__sortableClone__\".concat(field.name);\n    }\n\n    if (field.tagName === NodeType.Canvas && fields[i].width > 0 && fields[i].height > 0) {\n      var destCtx = field.getContext('2d');\n      destCtx.drawImage(fields[i], 0, 0);\n    }\n  });\n  return clonedNode;\n}\n\nfunction sortableHandle(WrappedComponent) {\n  var _class, _temp;\n\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    withRef: false\n  };\n  return _temp = _class = function (_React$Component) {\n    _inherits(WithSortableHandle, _React$Component);\n\n    function WithSortableHandle() {\n      _classCallCheck(this, WithSortableHandle);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(WithSortableHandle).apply(this, arguments));\n    }\n\n    _createClass(WithSortableHandle, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var node = findDOMNode(this);\n        node.sortableHandle = true;\n      }\n    }, {\n      key: \"getWrappedInstance\",\n      value: function getWrappedInstance() {\n        invariant(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call');\n        return this.refs.wrappedInstance;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var ref = config.withRef ? 'wrappedInstance' : null;\n        return createElement(WrappedComponent, _extends({\n          ref: ref\n        }, this.props));\n      }\n    }]);\n\n    return WithSortableHandle;\n  }(Component), _defineProperty(_class, \"displayName\", provideDisplayName('sortableHandle', WrappedComponent)), _temp;\n}\nfunction isSortableHandle(node) {\n  return node.sortableHandle != null;\n}\n\nvar AutoScroller = function () {\n  function AutoScroller(container, onScrollCallback) {\n    _classCallCheck(this, AutoScroller);\n\n    this.container = container;\n    this.onScrollCallback = onScrollCallback;\n  }\n\n  _createClass(AutoScroller, [{\n    key: \"clear\",\n    value: function clear() {\n      if (this.interval == null) {\n        return;\n      }\n\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  }, {\n    key: \"update\",\n    value: function update(_ref) {\n      var _this = this;\n\n      var translate = _ref.translate,\n          minTranslate = _ref.minTranslate,\n          maxTranslate = _ref.maxTranslate,\n          width = _ref.width,\n          height = _ref.height;\n      var direction = {\n        x: 0,\n        y: 0\n      };\n      var speed = {\n        x: 1,\n        y: 1\n      };\n      var acceleration = {\n        x: 10,\n        y: 10\n      };\n      var _this$container = this.container,\n          scrollTop = _this$container.scrollTop,\n          scrollLeft = _this$container.scrollLeft,\n          scrollHeight = _this$container.scrollHeight,\n          scrollWidth = _this$container.scrollWidth,\n          clientHeight = _this$container.clientHeight,\n          clientWidth = _this$container.clientWidth;\n      var isTop = scrollTop === 0;\n      var isBottom = scrollHeight - scrollTop - clientHeight === 0;\n      var isLeft = scrollLeft === 0;\n      var isRight = scrollWidth - scrollLeft - clientWidth === 0;\n\n      if (translate.y >= maxTranslate.y - height / 2 && !isBottom) {\n        direction.y = 1;\n        speed.y = acceleration.y * Math.abs((maxTranslate.y - height / 2 - translate.y) / height);\n      } else if (translate.x >= maxTranslate.x - width / 2 && !isRight) {\n        direction.x = 1;\n        speed.x = acceleration.x * Math.abs((maxTranslate.x - width / 2 - translate.x) / width);\n      } else if (translate.y <= minTranslate.y + height / 2 && !isTop) {\n        direction.y = -1;\n        speed.y = acceleration.y * Math.abs((translate.y - height / 2 - minTranslate.y) / height);\n      } else if (translate.x <= minTranslate.x + width / 2 && !isLeft) {\n        direction.x = -1;\n        speed.x = acceleration.x * Math.abs((translate.x - width / 2 - minTranslate.x) / width);\n      }\n\n      if (this.interval) {\n        this.clear();\n        this.isAutoScrolling = false;\n      }\n\n      if (direction.x !== 0 || direction.y !== 0) {\n        this.interval = setInterval(function () {\n          _this.isAutoScrolling = true;\n          var offset = {\n            left: speed.x * direction.x,\n            top: speed.y * direction.y\n          };\n          _this.container.scrollTop += offset.top;\n          _this.container.scrollLeft += offset.left;\n\n          _this.onScrollCallback(offset);\n        }, 5);\n      }\n    }\n  }]);\n\n  return AutoScroller;\n}();\n\nfunction defaultGetHelperDimensions(_ref) {\n  var node = _ref.node;\n  return {\n    height: node.offsetHeight,\n    width: node.offsetWidth\n  };\n}\n\nfunction defaultShouldCancelStart(event) {\n  var interactiveElements = [NodeType.Input, NodeType.Textarea, NodeType.Select, NodeType.Option, NodeType.Button];\n\n  if (interactiveElements.indexOf(event.target.tagName) !== -1) {\n    return true;\n  }\n\n  if (closest(event.target, function (el) {\n    return el.contentEditable === 'true';\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nvar propTypes = {\n  axis: PropTypes.oneOf(['x', 'y', 'xy']),\n  contentWindow: PropTypes.any,\n  disableAutoscroll: PropTypes.bool,\n  distance: PropTypes.number,\n  getContainer: PropTypes.func,\n  getHelperDimensions: PropTypes.func,\n  helperClass: PropTypes.string,\n  helperContainer: PropTypes.oneOfType([PropTypes.func, typeof HTMLElement === 'undefined' ? PropTypes.any : PropTypes.instanceOf(HTMLElement)]),\n  hideSortableGhost: PropTypes.bool,\n  keyboardSortingTransitionDuration: PropTypes.number,\n  lockAxis: PropTypes.string,\n  lockOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))]),\n  lockToContainerEdges: PropTypes.bool,\n  onSortEnd: PropTypes.func,\n  onSortMove: PropTypes.func,\n  onSortOver: PropTypes.func,\n  onSortStart: PropTypes.func,\n  pressDelay: PropTypes.number,\n  pressThreshold: PropTypes.number,\n  keyCodes: PropTypes.shape({\n    lift: PropTypes.arrayOf(PropTypes.number),\n    drop: PropTypes.arrayOf(PropTypes.number),\n    cancel: PropTypes.arrayOf(PropTypes.number),\n    up: PropTypes.arrayOf(PropTypes.number),\n    down: PropTypes.arrayOf(PropTypes.number)\n  }),\n  shouldCancelStart: PropTypes.func,\n  transitionDuration: PropTypes.number,\n  updateBeforeSortStart: PropTypes.func,\n  useDragHandle: PropTypes.bool,\n  useWindowAsScrollContainer: PropTypes.bool\n};\nvar defaultKeyCodes = {\n  lift: [KEYCODE.SPACE],\n  drop: [KEYCODE.SPACE],\n  cancel: [KEYCODE.ESC],\n  up: [KEYCODE.UP, KEYCODE.LEFT],\n  down: [KEYCODE.DOWN, KEYCODE.RIGHT]\n};\nvar defaultProps = {\n  axis: 'y',\n  disableAutoscroll: false,\n  distance: 0,\n  getHelperDimensions: defaultGetHelperDimensions,\n  hideSortableGhost: true,\n  lockOffset: '50%',\n  lockToContainerEdges: false,\n  pressDelay: 0,\n  pressThreshold: 5,\n  keyCodes: defaultKeyCodes,\n  shouldCancelStart: defaultShouldCancelStart,\n  transitionDuration: 300,\n  useWindowAsScrollContainer: false\n};\nvar omittedProps = Object.keys(propTypes);\nfunction validateProps(props) {\n  invariant(!(props.distance && props.pressDelay), 'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.');\n}\n\nfunction _finallyRethrows(body, finalizer) {\n  try {\n    var result = body();\n  } catch (e) {\n    return finalizer(true, e);\n  }\n\n  if (result && result.then) {\n    return result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n  }\n\n  return finalizer(false, value);\n}\nfunction sortableContainer(WrappedComponent) {\n  var _class, _temp;\n\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    withRef: false\n  };\n  return _temp = _class = function (_React$Component) {\n    _inherits(WithSortableContainer, _React$Component);\n\n    function WithSortableContainer(props) {\n      var _this;\n\n      _classCallCheck(this, WithSortableContainer);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithSortableContainer).call(this, props));\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleStart\", function (event) {\n        var _this$props = _this.props,\n            distance = _this$props.distance,\n            shouldCancelStart = _this$props.shouldCancelStart;\n\n        if (event.button === 2 || shouldCancelStart(event)) {\n          return;\n        }\n\n        _this.touched = true;\n        _this.position = getPosition(event);\n        var node = closest(event.target, function (el) {\n          return el.sortableInfo != null;\n        });\n\n        if (node && node.sortableInfo && _this.nodeIsChild(node) && !_this.state.sorting) {\n          var useDragHandle = _this.props.useDragHandle;\n          var _node$sortableInfo = node.sortableInfo,\n              index = _node$sortableInfo.index,\n              collection = _node$sortableInfo.collection,\n              disabled = _node$sortableInfo.disabled;\n\n          if (disabled) {\n            return;\n          }\n\n          if (useDragHandle && !closest(event.target, isSortableHandle)) {\n            return;\n          }\n\n          _this.manager.active = {\n            collection: collection,\n            index: index\n          };\n\n          if (!isTouchEvent(event) && event.target.tagName === NodeType.Anchor) {\n            event.preventDefault();\n          }\n\n          if (!distance) {\n            if (_this.props.pressDelay === 0) {\n              _this.handlePress(event);\n            } else {\n              _this.pressTimer = setTimeout(function () {\n                return _this.handlePress(event);\n              }, _this.props.pressDelay);\n            }\n          }\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"nodeIsChild\", function (node) {\n        return node.sortableInfo.manager === _this.manager;\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleMove\", function (event) {\n        var _this$props2 = _this.props,\n            distance = _this$props2.distance,\n            pressThreshold = _this$props2.pressThreshold;\n\n        if (!_this.state.sorting && _this.touched && !_this._awaitingUpdateBeforeSortStart) {\n          var position = getPosition(event);\n          var delta = {\n            x: _this.position.x - position.x,\n            y: _this.position.y - position.y\n          };\n          var combinedDelta = Math.abs(delta.x) + Math.abs(delta.y);\n          _this.delta = delta;\n\n          if (!distance && (!pressThreshold || combinedDelta >= pressThreshold)) {\n            clearTimeout(_this.cancelTimer);\n            _this.cancelTimer = setTimeout(_this.cancel, 0);\n          } else if (distance && combinedDelta >= distance && _this.manager.isActive()) {\n            _this.handlePress(event);\n          }\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleEnd\", function () {\n        _this.touched = false;\n\n        _this.cancel();\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"cancel\", function () {\n        var distance = _this.props.distance;\n        var sorting = _this.state.sorting;\n\n        if (!sorting) {\n          if (!distance) {\n            clearTimeout(_this.pressTimer);\n          }\n\n          _this.manager.active = null;\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handlePress\", function (event) {\n        try {\n          var active = _this.manager.getActive();\n\n          var _temp6 = function () {\n            if (active) {\n              var _temp7 = function _temp7() {\n                var index = _node.sortableInfo.index;\n                var margin = getElementMargin(_node);\n                var gridGap = getContainerGridGap(_this.container);\n\n                var containerBoundingRect = _this.scrollContainer.getBoundingClientRect();\n\n                var dimensions = _getHelperDimensions({\n                  index: index,\n                  node: _node,\n                  collection: _collection\n                });\n\n                _this.node = _node;\n                _this.margin = margin;\n                _this.gridGap = gridGap;\n                _this.width = dimensions.width;\n                _this.height = dimensions.height;\n                _this.marginOffset = {\n                  x: _this.margin.left + _this.margin.right + _this.gridGap.x,\n                  y: Math.max(_this.margin.top, _this.margin.bottom, _this.gridGap.y)\n                };\n                _this.boundingClientRect = _node.getBoundingClientRect();\n                _this.containerBoundingRect = containerBoundingRect;\n                _this.index = index;\n                _this.newIndex = index;\n                _this.axis = {\n                  x: _axis.indexOf('x') >= 0,\n                  y: _axis.indexOf('y') >= 0\n                };\n                _this.offsetEdge = getEdgeOffset(_node, _this.container);\n\n                if (_isKeySorting) {\n                  _this.initialOffset = getPosition(_objectSpread({}, event, {\n                    pageX: _this.boundingClientRect.left,\n                    pageY: _this.boundingClientRect.top\n                  }));\n                } else {\n                  _this.initialOffset = getPosition(event);\n                }\n\n                _this.initialScroll = {\n                  left: _this.scrollContainer.scrollLeft,\n                  top: _this.scrollContainer.scrollTop\n                };\n                _this.initialWindowScroll = {\n                  left: window.pageXOffset,\n                  top: window.pageYOffset\n                };\n                _this.helper = _this.helperContainer.appendChild(cloneNode(_node));\n                setInlineStyles(_this.helper, {\n                  boxSizing: 'border-box',\n                  height: \"\".concat(_this.height, \"px\"),\n                  left: \"\".concat(_this.boundingClientRect.left - margin.left, \"px\"),\n                  pointerEvents: 'none',\n                  position: 'fixed',\n                  top: \"\".concat(_this.boundingClientRect.top - margin.top, \"px\"),\n                  width: \"\".concat(_this.width, \"px\")\n                });\n\n                if (_isKeySorting) {\n                  _this.helper.focus();\n                }\n\n                if (_hideSortableGhost) {\n                  _this.sortableGhost = _node;\n                  setInlineStyles(_node, {\n                    opacity: 0,\n                    visibility: 'hidden'\n                  });\n                }\n\n                _this.minTranslate = {};\n                _this.maxTranslate = {};\n\n                if (_isKeySorting) {\n                  var _ref = _useWindowAsScrollContainer ? {\n                    top: 0,\n                    left: 0,\n                    width: _this.contentWindow.innerWidth,\n                    height: _this.contentWindow.innerHeight\n                  } : _this.containerBoundingRect,\n                      containerTop = _ref.top,\n                      containerLeft = _ref.left,\n                      containerWidth = _ref.width,\n                      containerHeight = _ref.height;\n\n                  var containerBottom = containerTop + containerHeight;\n                  var containerRight = containerLeft + containerWidth;\n\n                  if (_this.axis.x) {\n                    _this.minTranslate.x = containerLeft - _this.boundingClientRect.left;\n                    _this.maxTranslate.x = containerRight - (_this.boundingClientRect.left + _this.width);\n                  }\n\n                  if (_this.axis.y) {\n                    _this.minTranslate.y = containerTop - _this.boundingClientRect.top;\n                    _this.maxTranslate.y = containerBottom - (_this.boundingClientRect.top + _this.height);\n                  }\n                } else {\n                  if (_this.axis.x) {\n                    _this.minTranslate.x = (_useWindowAsScrollContainer ? 0 : containerBoundingRect.left) - _this.boundingClientRect.left - _this.width / 2;\n                    _this.maxTranslate.x = (_useWindowAsScrollContainer ? _this.contentWindow.innerWidth : containerBoundingRect.left + containerBoundingRect.width) - _this.boundingClientRect.left - _this.width / 2;\n                  }\n\n                  if (_this.axis.y) {\n                    _this.minTranslate.y = (_useWindowAsScrollContainer ? 0 : containerBoundingRect.top) - _this.boundingClientRect.top - _this.height / 2;\n                    _this.maxTranslate.y = (_useWindowAsScrollContainer ? _this.contentWindow.innerHeight : containerBoundingRect.top + containerBoundingRect.height) - _this.boundingClientRect.top - _this.height / 2;\n                  }\n                }\n\n                if (_helperClass) {\n                  _helperClass.split(' ').forEach(function (className) {\n                    return _this.helper.classList.add(className);\n                  });\n                }\n\n                _this.listenerNode = event.touches ? _node : _this.contentWindow;\n\n                if (_isKeySorting) {\n                  _this.listenerNode.addEventListener('wheel', _this.handleKeyEnd, true);\n\n                  _this.listenerNode.addEventListener('mousedown', _this.handleKeyEnd, true);\n\n                  _this.listenerNode.addEventListener('keydown', _this.handleKeyDown);\n                } else {\n                  events.move.forEach(function (eventName) {\n                    return _this.listenerNode.addEventListener(eventName, _this.handleSortMove, false);\n                  });\n                  events.end.forEach(function (eventName) {\n                    return _this.listenerNode.addEventListener(eventName, _this.handleSortEnd, false);\n                  });\n                }\n\n                _this.setState({\n                  sorting: true,\n                  sortingIndex: index\n                });\n\n                if (_onSortStart) {\n                  _onSortStart({\n                    node: _node,\n                    index: index,\n                    collection: _collection,\n                    isKeySorting: _isKeySorting,\n                    nodes: _this.manager.getOrderedRefs(),\n                    helper: _this.helper\n                  }, event);\n                }\n\n                if (_isKeySorting) {\n                  _this.keyMove(0);\n                }\n              };\n\n              var _this$props3 = _this.props,\n                  _axis = _this$props3.axis,\n                  _getHelperDimensions = _this$props3.getHelperDimensions,\n                  _helperClass = _this$props3.helperClass,\n                  _hideSortableGhost = _this$props3.hideSortableGhost,\n                  updateBeforeSortStart = _this$props3.updateBeforeSortStart,\n                  _onSortStart = _this$props3.onSortStart,\n                  _useWindowAsScrollContainer = _this$props3.useWindowAsScrollContainer;\n              var _node = active.node,\n                  _collection = active.collection;\n              var _isKeySorting = _this.manager.isKeySorting;\n\n              var _temp8 = function () {\n                if (typeof updateBeforeSortStart === 'function') {\n                  _this._awaitingUpdateBeforeSortStart = true;\n\n                  var _temp9 = _finallyRethrows(function () {\n                    var index = _node.sortableInfo.index;\n                    return Promise.resolve(updateBeforeSortStart({\n                      collection: _collection,\n                      index: index,\n                      node: _node,\n                      isKeySorting: _isKeySorting\n                    }, event)).then(function () {});\n                  }, function (_wasThrown, _result) {\n                    _this._awaitingUpdateBeforeSortStart = false;\n                    if (_wasThrown) throw _result;\n                    return _result;\n                  });\n\n                  if (_temp9 && _temp9.then) return _temp9.then(function () {});\n                }\n              }();\n\n              return _temp8 && _temp8.then ? _temp8.then(_temp7) : _temp7(_temp8);\n            }\n          }();\n\n          return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(function () {}) : void 0);\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSortMove\", function (event) {\n        var onSortMove = _this.props.onSortMove;\n\n        if (typeof event.preventDefault === 'function') {\n          event.preventDefault();\n        }\n\n        _this.updateHelperPosition(event);\n\n        _this.animateNodes();\n\n        _this.autoscroll();\n\n        if (onSortMove) {\n          onSortMove(event);\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSortEnd\", function (event) {\n        var _this$props4 = _this.props,\n            hideSortableGhost = _this$props4.hideSortableGhost,\n            onSortEnd = _this$props4.onSortEnd;\n        var _this$manager = _this.manager,\n            collection = _this$manager.active.collection,\n            isKeySorting = _this$manager.isKeySorting;\n\n        var nodes = _this.manager.getOrderedRefs();\n\n        if (_this.listenerNode) {\n          if (isKeySorting) {\n            _this.listenerNode.removeEventListener('wheel', _this.handleKeyEnd, true);\n\n            _this.listenerNode.removeEventListener('mousedown', _this.handleKeyEnd, true);\n\n            _this.listenerNode.removeEventListener('keydown', _this.handleKeyDown);\n          } else {\n            events.move.forEach(function (eventName) {\n              return _this.listenerNode.removeEventListener(eventName, _this.handleSortMove);\n            });\n            events.end.forEach(function (eventName) {\n              return _this.listenerNode.removeEventListener(eventName, _this.handleSortEnd);\n            });\n          }\n        }\n\n        _this.helper.parentNode.removeChild(_this.helper);\n\n        if (hideSortableGhost && _this.sortableGhost) {\n          setInlineStyles(_this.sortableGhost, {\n            opacity: '',\n            visibility: ''\n          });\n        }\n\n        for (var i = 0, len = nodes.length; i < len; i++) {\n          var _node2 = nodes[i];\n          var el = _node2.node;\n          _node2.edgeOffset = null;\n          _node2.boundingClientRect = null;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n          _node2.translate = null;\n        }\n\n        _this.autoScroller.clear();\n\n        _this.manager.active = null;\n        _this.manager.isKeySorting = false;\n\n        _this.setState({\n          sorting: false,\n          sortingIndex: null\n        });\n\n        if (typeof onSortEnd === 'function') {\n          onSortEnd({\n            collection: collection,\n            newIndex: _this.newIndex,\n            oldIndex: _this.index,\n            isKeySorting: isKeySorting,\n            nodes: nodes\n          }, event);\n        }\n\n        _this.touched = false;\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"autoscroll\", function () {\n        var disableAutoscroll = _this.props.disableAutoscroll;\n        var isKeySorting = _this.manager.isKeySorting;\n\n        if (disableAutoscroll) {\n          _this.autoScroller.clear();\n\n          return;\n        }\n\n        if (isKeySorting) {\n          var translate = _objectSpread({}, _this.translate);\n\n          var scrollX = 0;\n          var scrollY = 0;\n\n          if (_this.axis.x) {\n            translate.x = Math.min(_this.maxTranslate.x, Math.max(_this.minTranslate.x, _this.translate.x));\n            scrollX = _this.translate.x - translate.x;\n          }\n\n          if (_this.axis.y) {\n            translate.y = Math.min(_this.maxTranslate.y, Math.max(_this.minTranslate.y, _this.translate.y));\n            scrollY = _this.translate.y - translate.y;\n          }\n\n          _this.translate = translate;\n          setTranslate3d(_this.helper, _this.translate);\n          _this.scrollContainer.scrollLeft += scrollX;\n          _this.scrollContainer.scrollTop += scrollY;\n          return;\n        }\n\n        _this.autoScroller.update({\n          height: _this.height,\n          maxTranslate: _this.maxTranslate,\n          minTranslate: _this.minTranslate,\n          translate: _this.translate,\n          width: _this.width\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onAutoScroll\", function (offset) {\n        _this.translate.x += offset.left;\n        _this.translate.y += offset.top;\n\n        _this.animateNodes();\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyDown\", function (event) {\n        var keyCode = event.keyCode;\n        var _this$props5 = _this.props,\n            shouldCancelStart = _this$props5.shouldCancelStart,\n            _this$props5$keyCodes = _this$props5.keyCodes,\n            customKeyCodes = _this$props5$keyCodes === void 0 ? {} : _this$props5$keyCodes;\n\n        var keyCodes = _objectSpread({}, defaultKeyCodes, customKeyCodes);\n\n        if (_this.manager.active && !_this.manager.isKeySorting || !_this.manager.active && (!keyCodes.lift.includes(keyCode) || shouldCancelStart(event) || !_this.isValidSortingTarget(event))) {\n          return;\n        }\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (keyCodes.lift.includes(keyCode) && !_this.manager.active) {\n          _this.keyLift(event);\n        } else if (keyCodes.drop.includes(keyCode) && _this.manager.active) {\n          _this.keyDrop(event);\n        } else if (keyCodes.cancel.includes(keyCode)) {\n          _this.newIndex = _this.manager.active.index;\n\n          _this.keyDrop(event);\n        } else if (keyCodes.up.includes(keyCode)) {\n          _this.keyMove(-1);\n        } else if (keyCodes.down.includes(keyCode)) {\n          _this.keyMove(1);\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"keyLift\", function (event) {\n        var target = event.target;\n        var node = closest(target, function (el) {\n          return el.sortableInfo != null;\n        });\n        var _node$sortableInfo2 = node.sortableInfo,\n            index = _node$sortableInfo2.index,\n            collection = _node$sortableInfo2.collection;\n        _this.initialFocusedNode = target;\n        _this.manager.isKeySorting = true;\n        _this.manager.active = {\n          index: index,\n          collection: collection\n        };\n\n        _this.handlePress(event);\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"keyMove\", function (shift) {\n        var nodes = _this.manager.getOrderedRefs();\n\n        var lastIndex = nodes[nodes.length - 1].node.sortableInfo.index;\n        var newIndex = _this.newIndex + shift;\n        var prevIndex = _this.newIndex;\n\n        if (newIndex < 0 || newIndex > lastIndex) {\n          return;\n        }\n\n        _this.prevIndex = prevIndex;\n        _this.newIndex = newIndex;\n        var targetIndex = getTargetIndex(_this.newIndex, _this.prevIndex, _this.index);\n        var target = nodes.find(function (_ref2) {\n          var node = _ref2.node;\n          return node.sortableInfo.index === targetIndex;\n        });\n        var targetNode = target.node;\n        var scrollDelta = _this.containerScrollDelta;\n        var targetBoundingClientRect = target.boundingClientRect || getScrollAdjustedBoundingClientRect(targetNode, scrollDelta);\n        var targetTranslate = target.translate || {\n          x: 0,\n          y: 0\n        };\n        var targetPosition = {\n          top: targetBoundingClientRect.top + targetTranslate.y - scrollDelta.top,\n          left: targetBoundingClientRect.left + targetTranslate.x - scrollDelta.left\n        };\n        var shouldAdjustForSize = prevIndex < newIndex;\n        var sizeAdjustment = {\n          x: shouldAdjustForSize && _this.axis.x ? targetNode.offsetWidth - _this.width : 0,\n          y: shouldAdjustForSize && _this.axis.y ? targetNode.offsetHeight - _this.height : 0\n        };\n\n        _this.handleSortMove({\n          pageX: targetPosition.left + sizeAdjustment.x,\n          pageY: targetPosition.top + sizeAdjustment.y,\n          ignoreTransition: shift === 0\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"keyDrop\", function (event) {\n        _this.handleSortEnd(event);\n\n        if (_this.initialFocusedNode) {\n          _this.initialFocusedNode.focus();\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyEnd\", function (event) {\n        if (_this.manager.active) {\n          _this.keyDrop(event);\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isValidSortingTarget\", function (event) {\n        var useDragHandle = _this.props.useDragHandle;\n        var target = event.target;\n        var node = closest(target, function (el) {\n          return el.sortableInfo != null;\n        });\n        return node && node.sortableInfo && !node.sortableInfo.disabled && (useDragHandle ? isSortableHandle(target) : target.sortableInfo);\n      });\n\n      validateProps(props);\n      _this.manager = new Manager();\n      _this.events = {\n        end: _this.handleEnd,\n        move: _this.handleMove,\n        start: _this.handleStart\n      };\n      return _this;\n    }\n\n    _createClass(WithSortableContainer, [{\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        return {\n          manager: this.manager\n        };\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        var useWindowAsScrollContainer = this.props.useWindowAsScrollContainer;\n        var container = this.getContainer();\n        Promise.resolve(container).then(function (containerNode) {\n          _this2.container = containerNode;\n          _this2.document = _this2.container.ownerDocument || document;\n          var contentWindow = _this2.props.contentWindow || _this2.document.defaultView || window;\n          _this2.contentWindow = typeof contentWindow === 'function' ? contentWindow() : contentWindow;\n          _this2.scrollContainer = useWindowAsScrollContainer ? _this2.document.scrollingElement || _this2.document.documentElement : getScrollingParent(_this2.container) || _this2.container;\n          _this2.autoScroller = new AutoScroller(_this2.scrollContainer, _this2.onAutoScroll);\n          Object.keys(_this2.events).forEach(function (key) {\n            return events[key].forEach(function (eventName) {\n              return _this2.container.addEventListener(eventName, _this2.events[key], false);\n            });\n          });\n\n          _this2.container.addEventListener('keydown', _this2.handleKeyDown);\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this3 = this;\n\n        if (this.helper && this.helper.parentNode) {\n          this.helper.parentNode.removeChild(this.helper);\n        }\n\n        if (!this.container) {\n          return;\n        }\n\n        Object.keys(this.events).forEach(function (key) {\n          return events[key].forEach(function (eventName) {\n            return _this3.container.removeEventListener(eventName, _this3.events[key]);\n          });\n        });\n        this.container.removeEventListener('keydown', this.handleKeyDown);\n      }\n    }, {\n      key: \"updateHelperPosition\",\n      value: function updateHelperPosition(event) {\n        var _this$props6 = this.props,\n            lockAxis = _this$props6.lockAxis,\n            lockOffset = _this$props6.lockOffset,\n            lockToContainerEdges = _this$props6.lockToContainerEdges,\n            transitionDuration = _this$props6.transitionDuration,\n            _this$props6$keyboard = _this$props6.keyboardSortingTransitionDuration,\n            keyboardSortingTransitionDuration = _this$props6$keyboard === void 0 ? transitionDuration : _this$props6$keyboard;\n        var isKeySorting = this.manager.isKeySorting;\n        var ignoreTransition = event.ignoreTransition;\n        var offset = getPosition(event);\n        var translate = {\n          x: offset.x - this.initialOffset.x,\n          y: offset.y - this.initialOffset.y\n        };\n        translate.y -= window.pageYOffset - this.initialWindowScroll.top;\n        translate.x -= window.pageXOffset - this.initialWindowScroll.left;\n        this.translate = translate;\n\n        if (lockToContainerEdges) {\n          var _getLockPixelOffsets = getLockPixelOffsets({\n            height: this.height,\n            lockOffset: lockOffset,\n            width: this.width\n          }),\n              _getLockPixelOffsets2 = _slicedToArray(_getLockPixelOffsets, 2),\n              minLockOffset = _getLockPixelOffsets2[0],\n              maxLockOffset = _getLockPixelOffsets2[1];\n\n          var minOffset = {\n            x: this.width / 2 - minLockOffset.x,\n            y: this.height / 2 - minLockOffset.y\n          };\n          var maxOffset = {\n            x: this.width / 2 - maxLockOffset.x,\n            y: this.height / 2 - maxLockOffset.y\n          };\n          translate.x = limit(this.minTranslate.x + minOffset.x, this.maxTranslate.x - maxOffset.x, translate.x);\n          translate.y = limit(this.minTranslate.y + minOffset.y, this.maxTranslate.y - maxOffset.y, translate.y);\n        }\n\n        if (lockAxis === 'x') {\n          translate.y = 0;\n        } else if (lockAxis === 'y') {\n          translate.x = 0;\n        }\n\n        if (isKeySorting && keyboardSortingTransitionDuration && !ignoreTransition) {\n          setTransitionDuration(this.helper, keyboardSortingTransitionDuration);\n        }\n\n        setTranslate3d(this.helper, translate);\n      }\n    }, {\n      key: \"animateNodes\",\n      value: function animateNodes() {\n        var _this$props7 = this.props,\n            transitionDuration = _this$props7.transitionDuration,\n            hideSortableGhost = _this$props7.hideSortableGhost,\n            onSortOver = _this$props7.onSortOver;\n        var containerScrollDelta = this.containerScrollDelta,\n            windowScrollDelta = this.windowScrollDelta;\n        var nodes = this.manager.getOrderedRefs();\n        var sortingOffset = {\n          left: this.offsetEdge.left + this.translate.x + containerScrollDelta.left,\n          top: this.offsetEdge.top + this.translate.y + containerScrollDelta.top\n        };\n        var isKeySorting = this.manager.isKeySorting;\n        var prevIndex = this.newIndex;\n        this.newIndex = null;\n\n        for (var i = 0, len = nodes.length; i < len; i++) {\n          var _node3 = nodes[i].node;\n          var index = _node3.sortableInfo.index;\n          var width = _node3.offsetWidth;\n          var height = _node3.offsetHeight;\n          var offset = {\n            height: this.height > height ? height / 2 : this.height / 2,\n            width: this.width > width ? width / 2 : this.width / 2\n          };\n          var mustShiftBackward = isKeySorting && index > this.index && index <= prevIndex;\n          var mustShiftForward = isKeySorting && index < this.index && index >= prevIndex;\n          var translate = {\n            x: 0,\n            y: 0\n          };\n          var edgeOffset = nodes[i].edgeOffset;\n\n          if (!edgeOffset) {\n            edgeOffset = getEdgeOffset(_node3, this.container);\n            nodes[i].edgeOffset = edgeOffset;\n\n            if (isKeySorting) {\n              nodes[i].boundingClientRect = getScrollAdjustedBoundingClientRect(_node3, containerScrollDelta);\n            }\n          }\n\n          var nextNode = i < nodes.length - 1 && nodes[i + 1];\n          var prevNode = i > 0 && nodes[i - 1];\n\n          if (nextNode && !nextNode.edgeOffset) {\n            nextNode.edgeOffset = getEdgeOffset(nextNode.node, this.container);\n\n            if (isKeySorting) {\n              nextNode.boundingClientRect = getScrollAdjustedBoundingClientRect(nextNode.node, containerScrollDelta);\n            }\n          }\n\n          if (index === this.index) {\n            if (hideSortableGhost) {\n              this.sortableGhost = _node3;\n              setInlineStyles(_node3, {\n                opacity: 0,\n                visibility: 'hidden'\n              });\n            }\n\n            continue;\n          }\n\n          if (transitionDuration) {\n            setTransitionDuration(_node3, transitionDuration);\n          }\n\n          if (this.axis.x) {\n            if (this.axis.y) {\n              if (mustShiftForward || index < this.index && (sortingOffset.left + windowScrollDelta.left - offset.width <= edgeOffset.left && sortingOffset.top + windowScrollDelta.top <= edgeOffset.top + offset.height || sortingOffset.top + windowScrollDelta.top + offset.height <= edgeOffset.top)) {\n                translate.x = this.width + this.marginOffset.x;\n\n                if (edgeOffset.left + translate.x > this.containerBoundingRect.width - offset.width) {\n                  if (nextNode) {\n                    translate.x = nextNode.edgeOffset.left - edgeOffset.left;\n                    translate.y = nextNode.edgeOffset.top - edgeOffset.top;\n                  }\n                }\n\n                if (this.newIndex === null) {\n                  this.newIndex = index;\n                }\n              } else if (mustShiftBackward || index > this.index && (sortingOffset.left + windowScrollDelta.left + offset.width >= edgeOffset.left && sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top || sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top + height)) {\n                translate.x = -(this.width + this.marginOffset.x);\n\n                if (edgeOffset.left + translate.x < this.containerBoundingRect.left + offset.width) {\n                  if (prevNode) {\n                    translate.x = prevNode.edgeOffset.left - edgeOffset.left;\n                    translate.y = prevNode.edgeOffset.top - edgeOffset.top;\n                  }\n                }\n\n                this.newIndex = index;\n              }\n            } else {\n              if (mustShiftBackward || index > this.index && sortingOffset.left + windowScrollDelta.left + offset.width >= edgeOffset.left) {\n                translate.x = -(this.width + this.marginOffset.x);\n                this.newIndex = index;\n              } else if (mustShiftForward || index < this.index && sortingOffset.left + windowScrollDelta.left <= edgeOffset.left + offset.width) {\n                translate.x = this.width + this.marginOffset.x;\n\n                if (this.newIndex == null) {\n                  this.newIndex = index;\n                }\n              }\n            }\n          } else if (this.axis.y) {\n            if (mustShiftBackward || index > this.index && sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top) {\n              translate.y = -(this.height + this.marginOffset.y);\n              this.newIndex = index;\n            } else if (mustShiftForward || index < this.index && sortingOffset.top + windowScrollDelta.top <= edgeOffset.top + offset.height) {\n              translate.y = this.height + this.marginOffset.y;\n\n              if (this.newIndex == null) {\n                this.newIndex = index;\n              }\n            }\n          }\n\n          setTranslate3d(_node3, translate);\n          nodes[i].translate = translate;\n        }\n\n        if (this.newIndex == null) {\n          this.newIndex = this.index;\n        }\n\n        if (isKeySorting) {\n          this.newIndex = prevIndex;\n        }\n\n        var oldIndex = isKeySorting ? this.prevIndex : prevIndex;\n\n        if (onSortOver && this.newIndex !== oldIndex) {\n          onSortOver({\n            collection: this.manager.active.collection,\n            index: this.index,\n            newIndex: this.newIndex,\n            oldIndex: oldIndex,\n            isKeySorting: isKeySorting,\n            nodes: nodes,\n            helper: this.helper\n          });\n        }\n      }\n    }, {\n      key: \"getWrappedInstance\",\n      value: function getWrappedInstance() {\n        invariant(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call');\n        return this.refs.wrappedInstance;\n      }\n    }, {\n      key: \"getContainer\",\n      value: function getContainer() {\n        var getContainer = this.props.getContainer;\n\n        if (typeof getContainer !== 'function') {\n          return findDOMNode(this);\n        }\n\n        return getContainer(config.withRef ? this.getWrappedInstance() : undefined);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var ref = config.withRef ? 'wrappedInstance' : null;\n        return createElement(WrappedComponent, _extends({\n          ref: ref\n        }, omit(this.props, omittedProps)));\n      }\n    }, {\n      key: \"helperContainer\",\n      get: function get() {\n        var helperContainer = this.props.helperContainer;\n\n        if (typeof helperContainer === 'function') {\n          return helperContainer();\n        }\n\n        return this.props.helperContainer || this.document.body;\n      }\n    }, {\n      key: \"containerScrollDelta\",\n      get: function get() {\n        var useWindowAsScrollContainer = this.props.useWindowAsScrollContainer;\n\n        if (useWindowAsScrollContainer) {\n          return {\n            left: 0,\n            top: 0\n          };\n        }\n\n        return {\n          left: this.scrollContainer.scrollLeft - this.initialScroll.left,\n          top: this.scrollContainer.scrollTop - this.initialScroll.top\n        };\n      }\n    }, {\n      key: \"windowScrollDelta\",\n      get: function get() {\n        return {\n          left: this.contentWindow.pageXOffset - this.initialWindowScroll.left,\n          top: this.contentWindow.pageYOffset - this.initialWindowScroll.top\n        };\n      }\n    }]);\n\n    return WithSortableContainer;\n  }(Component), _defineProperty(_class, \"displayName\", provideDisplayName('sortableList', WrappedComponent)), _defineProperty(_class, \"defaultProps\", defaultProps), _defineProperty(_class, \"propTypes\", propTypes), _defineProperty(_class, \"childContextTypes\", {\n    manager: PropTypes.object.isRequired\n  }), _temp;\n}\n\nvar propTypes$1 = {\n  index: PropTypes.number.isRequired,\n  collection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  disabled: PropTypes.bool\n};\nvar omittedProps$1 = Object.keys(propTypes$1);\nfunction sortableElement(WrappedComponent) {\n  var _class, _temp;\n\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    withRef: false\n  };\n  return _temp = _class = function (_React$Component) {\n    _inherits(WithSortableElement, _React$Component);\n\n    function WithSortableElement() {\n      _classCallCheck(this, WithSortableElement);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(WithSortableElement).apply(this, arguments));\n    }\n\n    _createClass(WithSortableElement, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.register();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (this.node) {\n          if (prevProps.index !== this.props.index) {\n            this.node.sortableInfo.index = this.props.index;\n          }\n\n          if (prevProps.disabled !== this.props.disabled) {\n            this.node.sortableInfo.disabled = this.props.disabled;\n          }\n        }\n\n        if (prevProps.collection !== this.props.collection) {\n          this.unregister(prevProps.collection);\n          this.register();\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.unregister();\n      }\n    }, {\n      key: \"register\",\n      value: function register() {\n        var _this$props = this.props,\n            collection = _this$props.collection,\n            disabled = _this$props.disabled,\n            index = _this$props.index;\n        var node = findDOMNode(this);\n        node.sortableInfo = {\n          collection: collection,\n          disabled: disabled,\n          index: index,\n          manager: this.context.manager\n        };\n        this.node = node;\n        this.ref = {\n          node: node\n        };\n        this.context.manager.add(collection, this.ref);\n      }\n    }, {\n      key: \"unregister\",\n      value: function unregister() {\n        var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.collection;\n        this.context.manager.remove(collection, this.ref);\n      }\n    }, {\n      key: \"getWrappedInstance\",\n      value: function getWrappedInstance() {\n        invariant(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call');\n        return this.refs.wrappedInstance;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var ref = config.withRef ? 'wrappedInstance' : null;\n        return createElement(WrappedComponent, _extends({\n          ref: ref\n        }, omit(this.props, omittedProps$1)));\n      }\n    }]);\n\n    return WithSortableElement;\n  }(Component), _defineProperty(_class, \"displayName\", provideDisplayName('sortableElement', WrappedComponent)), _defineProperty(_class, \"contextTypes\", {\n    manager: PropTypes.object.isRequired\n  }), _defineProperty(_class, \"propTypes\", propTypes$1), _defineProperty(_class, \"defaultProps\", {\n    collection: 0\n  }), _temp;\n}\n\nexport { sortableContainer as SortableContainer, sortableContainer, sortableElement as SortableElement, sortableElement, sortableHandle as SortableHandle, sortableHandle, arrayMove };\n","/** @license React v16.13.1\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\nvar ReactVersion = '16.13.1';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  suspense: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\nvar currentlyValidatingElement = null;\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\\n    in') === 0;\n\n    if (!hasExistingStack) {\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n      if (stack !== '') {\n        format += '%s';\n        args = args.concat([stack]);\n      }\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\n\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \").\" + addendum );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  setCurrentlyValidatingElement(element);\n\n  {\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var name = getComponentName(type);\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    setCurrentlyValidatingElement(fragment);\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    var testMap = new Map([[frozenObject, null]]);\n    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","const fontFmily = \n[\"ABeeZee\",\n\"Abel\",\n\"Aclonica\",\n\"Acme\",\n\"Aguafina Script\",\n\"Akronim\",\n\"Aladin\",\n\"Alegreya SC\",\n\"Alex Brush\",\n\"Allura\",\n\"Almendra\",\n\"Almendra Display\",\n\"Amatic SC\",\n\"Amita\",\n\"Arizonia\",\n\"Arimo\",\n\"Arvo\",\n\"Asap Condensed\",\n\"Bad Script\",\n\"Balsamiq Sans\",\n\"Barrio\",\n\"Berkshire Swash\",\n\"Bubblegum Sans\",\n\"Bungee Hairline\",\n\"Butcherman\",\n\"Catamaran\",\n\"Dancing Script\",\n\"Do Hyeon\",\n\"Dokdo\",\n\"Dosis\",\n\"Dr Sugiyama\",\n\"Eater\",\n\"Ewert\",\n\"Fascinate Inline\",\n\"Faster One\",\n\"Finger Paint\",\n\"Gorditas\",\n\"Great Vibes\",\n\"Habibi\",\n\"Hanuman\",\n\"Hanalei\",\n\"IM Fell Great Primer SC\",\n\"Iceberg\",\n\"Iceland\",\n\"Indie Flower\",\n\"Inter\",\n\"Irish Grover\",\n\"Italianno\",\n\"Itim\",\n\"Jacques Francois\",\n\"Jacques Francois Shadow\",\n\"Jim Nightshade\",\n\"Joti One\",\n\"Julius Sans One\",\n\"Just Me Again Down Here\",\n\"Kaushan Script\",\n\"Keania One\",\n\"Kirang Haerang\",\n\"Kite One\",\n\"Kristi\",\n\"Kumar One Outline\",\n\"Lakki Reddy\",\n\"Leckerli One\",\n\"Lily Script One\",\n\"Liu Jian Mao Cao\",\n\"Londrina Shadow\",\n\"Love Ya Like A Sister\",\n\"Major Mono Display\",\n\"Mandali\",\n\"Marck Script\",\n\"Merienda\",\n\"Merienda One\",\n\"Merriweather Sans\",\n\"Michroma\",\n\"Miltonian Tattoo\",\n\"Mountains of Christmas\",\n\"Mukta Vaani\",\n\"Niramit\",\n\"Nosifer\",\n\"Nova Script\",\n\"Norican\",\n\"Offside\",\n\"Orbitron\",\n\"PT Sans Caption\",\n\"Pacifico\",\n\"Palanquin Dark\",\n\"Piedra\",\n\"Playfair Display\",\n\"Poiret One\",\n\"Princess Sofia\",\n\"Zilla Slab\",\n\"Zhi Mang Xing\",\n\"Zeyada\",\n\"ZCOOL XiaoWei\",\n\"ZCOOL KuaiLe\",\n\"Yeon Sung\",\n\"Yellowtail\",\n\"Yatra One\",\n\"Yanone Kaffeesatz\",\n\"Yesteryear\",\n\"Wire One\",\n\"Wendy One\",\n\"Wellfleet\",\n\"Warnes\",\n\"Walter Turncoat\",\n\"Wallpoet\",\n\"Waiting for the Sunrise\",\n\"Volkhov\",\n\"Viga\",\n\"Vibur\",\n\"Vibes\",\n\"Vast Shadow\",\n\"Vampiro One\",\n\"VT323\",\n\"Unlock\",\n\"Unkempt\",\n\"UnifrakturMaguntia\",\n\"Unica One\",\n\"Underdog\",\n\"Uncial Antiqua\",\n\"Ultra\",\n\"Ubuntu\",\n\"Ubuntu Mono\",\n\"Turret Road\",\n\"Turret Road\",\n\"Tulpen One\",\n\"Trochut\",\n\"Trocchi\",\n\"Trade Winds\",\n\"Tomorrow\",\n\"Titan One\",\n\"Timmana\",\n\"Tillana\",\n\"The Girl Next Door\",\n\"Text Me One\",\n\"Tenali Ramakrishna\",\n\"Tauri\",\n\"Tangerine\",\n\"Syncopate\",\n\"Swanky and Moo Moo\",\n\"Suravaram\",\n\"Supermercado One\",\n\"Sunshiney\",\n\"Sulphur Point\",\n\"Sue Ellen Francisco\",\n\"Stylish\",\n\"Stint Ultra Expanded\",\n\"Stardos Stencil\",\n\"Stalinist One\",\n\"Stalemate\",\n\"Srisakdi\",\n\"Sriracha\",\n\"Spirax\",\n\"Spicy Rice\",\n\"Special Elite\",\n\"Space Mono\",\n\"Source Code Pro\",\n\"Sonsie One\",\n\"Sofia\",\n\"Sofadi One\",\n\"Snowburst One\",\n\"Snippet\",\n\"Sniglet\",\n\"Smokum\",\n\"Slackey\",\n\"Skranji\",\n\"Six Caps\",\n\"Sirin Stencil\",\n\"Simonetta\",\n\"Sigmar One\",\n\"Shrikhand\",\n\"Short Stack\",\n\"Shojumaru\",\n\"Shadows Into Light Two\",\n\"Shadows Into Light\",\n\"Seymour One\",\n\"Sevillana\",\n\"Sedgwick Ave Display\",\n\"Sedgwick Ave\",\n\"Seaweed Script\",\n\"Satisfy\",\n\"Sarina\",\n\"Sancreek\",\n\"Saira Stencil One\",\n\"Sail\",\n\"Sacramento\",\n\"Rye\",\n\"Ruthie\",\n\"Ruslan Display\",\n\"Rum Raisin\",\n\"Ruge Boogie\",\n\"Rubik Mono One\",\n\"Rouge Script\",\n\"Rosarivo\",\n\"Romanesco\",\n\"Rock Salt\",\n\"Rochester\",\n\"Roboto\",\n\"Risque\",\n\"Ribeye Marrow\",\n\"Ribeye\",\n\"Revalia\",\n\"Reenie Beanie\",\n\"Redressed\",\n\"Red Rose\",\n\"Ravi Prakash\",\n\"Ranga\",\n\"Rancho\",\n\"Ranchers\",\n\"Raleway Dots\",\n\"Rakkas\",\n\"Rajdhani\",\n\"Racing Sans One\",\n\"Quintessential\",\n\"Qwigley\",\n\"Quicksand\"];\nexport default fontFmily;\n","let icons_ = [\n    \"fas fa-ad\",\n    \"fas fa-address-book\",\n    \"fas fa-address-card\",\n    \"fas fa-adjust\",\n    \"fas fa-air-freshener\",\n    \"fas fa-align-center\",\n    \"fas fa-align-justify\",\n    \"fas fa-align-left\",\n    \"fas fa-align-right\",\n    \"fas fa-allergies\",\n    \"fas fa-ambulance\",\n    \"fas fa-american-sign-language-interpreting\",\n    \"fas fa-anchor\",\n    \"fas fa-angle-double-down\",\n    \"fas fa-angle-double-left\",\n    \"fas fa-angle-double-right\",\n    \"fas fa-angle-double-up\",\n    \"fas fa-angle-down\",\n    \"fas fa-angle-left\",\n    \"fas fa-angle-right\",\n    \"fas fa-angle-up\",\n    \"fas fa-angry\",\n    \"fas fa-ankh\",\n    \"fas fa-apple-alt\",\n    \"fas fa-archive\",\n    \"fas fa-archway\",\n    \"fas fa-arrow-alt-circle-down\",\n    \"fas fa-arrow-alt-circle-left\",\n    \"fas fa-arrow-alt-circle-right\",\n    \"fas fa-arrow-alt-circle-up\",\n    \"fas fa-arrow-circle-down\",\n    \"fas fa-arrow-circle-left\",\n    \"fas fa-arrow-circle-right\",\n    \"fas fa-arrow-circle-up\",\n    \"fas fa-arrow-down\",\n    \"fas fa-arrow-left\",\n    \"fas fa-arrow-right\",\n    \"fas fa-arrow-up\",\n    \"fas fa-arrows-alt\",\n    \"fas fa-arrows-alt-h\",\n    \"fas fa-arrows-alt-v\",\n    \"fas fa-assistive-listening-systems\",\n    \"fas fa-asterisk\",\n    \"fas fa-at\",\n    \"fas fa-atlas\",\n    \"fas fa-atom\",\n    \"fas fa-audio-description\",\n    \"fas fa-award\",\n    \"fas fa-baby\",\n    \"fas fa-baby-carriage\",\n    \"fas fa-backspace\",\n    \"fas fa-backward\",\n    \"fas fa-balance-scale\",\n    \"fas fa-ban\",\n    \"fas fa-band-aid\",\n    \"fas fa-barcode\",\n    \"fas fa-bars\",\n    \"fas fa-baseball-ball\",\n    \"fas fa-basketball-ball\",\n    \"fas fa-bath\",\n    \"fas fa-battery-empty\",\n    \"fas fa-battery-full\",\n    \"fas fa-battery-half\",\n    \"fas fa-battery-quarter\",\n    \"fas fa-battery-three-quarters\",\n    \"fas fa-bed\",\n    \"fas fa-beer\",\n    \"fas fa-bell\",\n    \"fas fa-bell-slash\",\n    \"fas fa-bezier-curve\",\n    \"fas fa-bible\",\n    \"fas fa-bicycle\",\n    \"fas fa-binoculars\",\n    \"fas fa-biohazard\",\n    \"fas fa-birthday-cake\",\n    \"fas fa-blender\",\n    \"fas fa-blender-phone\",\n    \"fas fa-blind\",\n    \"fas fa-blog\",\n    \"fas fa-bold\",\n    \"fas fa-bolt\",\n    \"fas fa-bomb\",\n    \"fas fa-bone\",\n    \"fas fa-bong\",\n    \"fas fa-book\",\n    \"fas fa-book-dead\",\n    \"fas fa-book-open\",\n    \"fas fa-book-reader\",\n    \"fas fa-bookmark\",\n    \"fas fa-bowling-ball\",\n    \"fas fa-box\",\n    \"fas fa-box-open\",\n    \"fas fa-boxes\",\n    \"fas fa-braille\",\n    \"fas fa-brain\",\n    \"fas fa-briefcase\",\n    \"fas fa-briefcase-medical\",\n    \"fas fa-broadcast-tower\",\n    \"fas fa-broom\",\n    \"fas fa-brush\",\n    \"fas fa-bug\",\n    \"fas fa-building\",\n    \"fas fa-bullhorn\",\n    \"fas fa-bullseye\",\n    \"fas fa-burn\",\n    \"fas fa-bus\",\n    \"fas fa-bus-alt\",\n    \"fas fa-business-time\",\n    \"fas fa-calculator\",\n    \"fas fa-calendar\",\n    \"fas fa-calendar-alt\",\n    \"fas fa-calendar-check\",\n    \"fas fa-calendar-day\",\n    \"fas fa-calendar-minus\",\n    \"fas fa-calendar-plus\",\n    \"fas fa-calendar-times\",\n    \"fas fa-calendar-week\",\n    \"fas fa-camera\",\n    \"fas fa-camera-retro\",\n    \"fas fa-campground\",\n    \"fas fa-candy-cane\",\n    \"fas fa-cannabis\",\n    \"fas fa-capsules\",\n    \"fas fa-car\",\n    \"fas fa-car-alt\",\n    \"fas fa-car-battery\",\n    \"fas fa-car-crash\",\n    \"fas fa-car-side\",\n    \"fas fa-caret-down\",\n    \"fas fa-caret-left\",\n    \"fas fa-caret-right\",\n    \"fas fa-caret-square-down\",\n    \"fas fa-caret-square-left\",\n    \"fas fa-caret-square-right\",\n    \"fas fa-caret-square-up\",\n    \"fas fa-caret-up\",\n    \"fas fa-carrot\",\n    \"fas fa-cart-arrow-down\",\n    \"fas fa-cart-plus\",\n    \"fas fa-cash-register\",\n    \"fas fa-cat\",\n    \"fas fa-certificate\",\n    \"fas fa-chair\",\n    \"fas fa-chalkboard\",\n    \"fas fa-chalkboard-teacher\",\n    \"fas fa-charging-station\",\n    \"fas fa-chart-area\",\n    \"fas fa-chart-bar\",\n    \"fas fa-chart-line\",\n    \"fas fa-chart-pie\",\n    \"fas fa-check\",\n    \"fas fa-check-circle\",\n    \"fas fa-check-double\",\n    \"fas fa-check-square\",\n    \"fas fa-chess\",\n    \"fas fa-chess-bishop\",\n    \"fas fa-chess-board\",\n    \"fas fa-chess-king\",\n    \"fas fa-chess-knight\",\n    \"fas fa-chess-pawn\",\n    \"fas fa-chess-queen\",\n    \"fas fa-chess-rook\",\n    \"fas fa-chevron-circle-down\",\n    \"fas fa-chevron-circle-left\",\n    \"fas fa-chevron-circle-right\",\n    \"fas fa-chevron-circle-up\",\n    \"fas fa-chevron-down\",\n    \"fas fa-chevron-left\",\n    \"fas fa-chevron-right\",\n    \"fas fa-chevron-up\",\n    \"fas fa-child\",\n    \"fas fa-church\",\n    \"fas fa-circle\",\n    \"fas fa-circle-notch\",\n    \"fas fa-city\",\n    \"fas fa-clipboard\",\n    \"fas fa-clipboard-check\",\n    \"fas fa-clipboard-list\",\n    \"fas fa-clock\",\n    \"fas fa-clone\",\n    \"fas fa-closed-captioning\",\n    \"fas fa-cloud\",\n    \"fas fa-cloud-download-alt\",\n    \"fas fa-cloud-meatball\",\n    \"fas fa-cloud-moon\",\n    \"fas fa-cloud-moon-rain\",\n    \"fas fa-cloud-rain\",\n    \"fas fa-cloud-showers-heavy\",\n    \"fas fa-cloud-sun\",\n    \"fas fa-cloud-sun-rain\",\n    \"fas fa-cloud-upload-alt\",\n    \"fas fa-cocktail\",\n    \"fas fa-code\",\n    \"fas fa-code-branch\",\n    \"fas fa-coffee\",\n    \"fas fa-cog\",\n    \"fas fa-cogs\",\n    \"fas fa-coins\",\n    \"fas fa-columns\",\n    \"fas fa-comment\",\n    \"fas fa-comment-alt\",\n    \"fas fa-comment-dollar\",\n    \"fas fa-comment-dots\",\n    \"fas fa-comment-slash\",\n    \"fas fa-comments\",\n    \"fas fa-comments-dollar\",\n    \"fas fa-compact-disc\",\n    \"fas fa-compass\",\n    \"fas fa-compress\",\n    \"fas fa-compress-arrows-alt\",\n    \"fas fa-concierge-bell\",\n    \"fas fa-cookie\",\n    \"fas fa-cookie-bite\",\n    \"fas fa-copy\",\n    \"fas fa-copyright\",\n    \"fas fa-couch\",\n    \"fas fa-credit-card\",\n    \"fas fa-crop\",\n    \"fas fa-crop-alt\",\n    \"fas fa-cross\",\n    \"fas fa-crosshairs\",\n    \"fas fa-crow\",\n    \"fas fa-crown\",\n    \"fas fa-cube\",\n    \"fas fa-cubes\",\n    \"fas fa-cut\",\n    \"fas fa-database\",\n    \"fas fa-deaf\",\n    \"fas fa-democrat\",\n    \"fas fa-desktop\",\n    \"fas fa-dharmachakra\",\n    \"fas fa-diagnoses\",\n    \"fas fa-dice\",\n    \"fas fa-dice-d20\",\n    \"fas fa-dice-d6\",\n    \"fas fa-dice-five\",\n    \"fas fa-dice-four\",\n    \"fas fa-dice-one\",\n    \"fas fa-dice-six\",\n    \"fas fa-dice-three\",\n    \"fas fa-dice-two\",\n    \"fas fa-digital-tachograph\",\n    \"fas fa-directions\",\n    \"fas fa-divide\",\n    \"fas fa-dizzy\",\n    \"fas fa-dna\",\n    \"fas fa-dog\",\n    \"fas fa-dollar-sign\",\n    \"fas fa-dolly\",\n    \"fas fa-dolly-flatbed\",\n    \"fas fa-donate\",\n    \"fas fa-door-closed\",\n    \"fas fa-door-open\",\n    \"fas fa-dot-circle\",\n    \"fas fa-dove\",\n    \"fas fa-download\",\n    \"fas fa-drafting-compass\",\n    \"fas fa-dragon\",\n    \"fas fa-draw-polygon\",\n    \"fas fa-drum\",\n    \"fas fa-drum-steelpan\",\n    \"fas fa-drumstick-bite\",\n    \"fas fa-dumbbell\",\n    \"fas fa-dumpster\",\n    \"fas fa-dumpster-fire\",\n    \"fas fa-dungeon\",\n    \"fas fa-edit\",\n    \"fas fa-eject\",\n    \"fas fa-ellipsis-h\",\n    \"fas fa-ellipsis-v\",\n    \"fas fa-envelope\",\n    \"fas fa-envelope-open\",\n    \"fas fa-envelope-open-text\",\n    \"fas fa-envelope-square\",\n    \"fas fa-equals\",\n    \"fas fa-eraser\",\n    \"fas fa-ethernet\",\n    \"fas fa-euro-sign\",\n    \"fas fa-exchange-alt\",\n    \"fas fa-exclamation\",\n    \"fas fa-exclamation-circle\",\n    \"fas fa-exclamation-triangle\",\n    \"fas fa-expand\",\n    \"fas fa-expand-arrows-alt\",\n    \"fas fa-external-link-alt\",\n    \"fas fa-external-link-square-alt\",\n    \"fas fa-eye\",\n    \"fas fa-eye-dropper\",\n    \"fas fa-eye-slash\",\n    \"fas fa-fast-backward\",\n    \"fas fa-fast-forward\",\n    \"fas fa-fax\",\n    \"fas fa-feather\",\n    \"fas fa-feather-alt\",\n    \"fas fa-female\",\n    \"fas fa-fighter-jet\",\n    \"fas fa-file\",\n    \"fas fa-file-alt\",\n    \"fas fa-file-archive\",\n    \"fas fa-file-audio\",\n    \"fas fa-file-code\",\n    \"fas fa-file-contract\",\n    \"fas fa-file-csv\",\n    \"fas fa-file-download\",\n    \"fas fa-file-excel\",\n    \"fas fa-file-export\",\n    \"fas fa-file-image\",\n    \"fas fa-file-import\",\n    \"fas fa-file-invoice\",\n    \"fas fa-file-invoice-dollar\",\n    \"fas fa-file-medical\",\n    \"fas fa-file-medical-alt\",\n    \"fas fa-file-pdf\",\n    \"fas fa-file-powerpoint\",\n    \"fas fa-file-prescription\",\n    \"fas fa-file-signature\",\n    \"fas fa-file-upload\",\n    \"fas fa-file-video\",\n    \"fas fa-file-word\",\n    \"fas fa-fill\",\n    \"fas fa-fill-drip\",\n    \"fas fa-film\",\n    \"fas fa-filter\",\n    \"fas fa-fingerprint\",\n    \"fas fa-fire\",\n    \"fas fa-fire-alt\",\n    \"fas fa-fire-extinguisher\",\n    \"fas fa-first-aid\",\n    \"fas fa-fish\",\n    \"fas fa-fist-raised\",\n    \"fas fa-flag\",\n    \"fas fa-flag-checkered\",\n    \"fas fa-flag-usa\",\n    \"fas fa-flask\",\n    \"fas fa-flushed\",\n    \"fas fa-folder\",\n    \"fas fa-folder-minus\",\n    \"fas fa-folder-open\",\n    \"fas fa-folder-plus\",\n    \"fas fa-font\",\n    \"fas fa-football-ball\",\n    \"fas fa-forward\",\n    \"fas fa-frog\",\n    \"fas fa-frown\",\n    \"fas fa-frown-open\",\n    \"fas fa-funnel-dollar\",\n    \"fas fa-futbol\",\n    \"fas fa-gamepad\",\n    \"fas fa-gas-pump\",\n    \"fas fa-gavel\",\n    \"fas fa-gem\",\n    \"fas fa-genderless\",\n    \"fas fa-ghost\",\n    \"fas fa-gift\",\n    \"fas fa-gifts\",\n    \"fas fa-glass-cheers\",\n    \"fas fa-glass-martini\",\n    \"fas fa-glass-martini-alt\",\n    \"fas fa-glass-whiskey\",\n    \"fas fa-glasses\",\n    \"fas fa-globe\",\n    \"fas fa-globe-africa\",\n    \"fas fa-globe-americas\",\n    \"fas fa-globe-asia\",\n    \"fas fa-globe-europe\",\n    \"fas fa-golf-ball\",\n    \"fas fa-gopuram\",\n    \"fas fa-graduation-cap\",\n    \"fas fa-greater-than\",\n    \"fas fa-greater-than-equal\",\n    \"fas fa-grimace\",\n    \"fas fa-grin\",\n    \"fas fa-grin-alt\",\n    \"fas fa-grin-beam\",\n    \"fas fa-grin-beam-sweat\",\n    \"fas fa-grin-hearts\",\n    \"fas fa-grin-squint\",\n    \"fas fa-grin-squint-tears\",\n    \"fas fa-grin-stars\",\n    \"fas fa-grin-tears\",\n    \"fas fa-grin-tongue\",\n    \"fas fa-grin-tongue-squint\",\n    \"fas fa-grin-tongue-wink\",\n    \"fas fa-grin-wink\",\n    \"fas fa-grip-horizontal\",\n    \"fas fa-grip-lines\",\n    \"fas fa-grip-lines-vertical\",\n    \"fas fa-grip-vertical\",\n    \"fas fa-guitar\",\n    \"fas fa-h-square\",\n    \"fas fa-hammer\",\n    \"fas fa-hamsa\",\n    \"fas fa-hand-holding\",\n    \"fas fa-hand-holding-heart\",\n    \"fas fa-hand-holding-usd\",\n    \"fas fa-hand-lizard\",\n    \"fas fa-hand-paper\",\n    \"fas fa-hand-peace\",\n    \"fas fa-hand-point-down\",\n    \"fas fa-hand-point-left\",\n    \"fas fa-hand-point-right\",\n    \"fas fa-hand-point-up\",\n    \"fas fa-hand-pointer\",\n    \"fas fa-hand-rock\",\n    \"fas fa-hand-scissors\",\n    \"fas fa-hand-spock\",\n    \"fas fa-hands\",\n    \"fas fa-hands-helping\",\n    \"fas fa-handshake\",\n    \"fas fa-hanukiah\",\n    \"fas fa-hashtag\",\n    \"fas fa-hat-wizard\",\n    \"fas fa-haykal\",\n    \"fas fa-hdd\",\n    \"fas fa-heading\",\n    \"fas fa-headphones\",\n    \"fas fa-headphones-alt\",\n    \"fas fa-headset\",\n    \"fas fa-heart\",\n    \"fas fa-heart-broken\",\n    \"fas fa-heartbeat\",\n    \"fas fa-helicopter\",\n    \"fas fa-highlighter\",\n    \"fas fa-hiking\",\n    \"fas fa-hippo\",\n    \"fas fa-history\",\n    \"fas fa-hockey-puck\",\n    \"fas fa-holly-berry\",\n    \"fas fa-home\",\n    \"fas fa-horse\",\n    \"fas fa-horse-head\",\n    \"fas fa-hospital\",\n    \"fas fa-hospital-alt\",\n    \"fas fa-hospital-symbol\",\n    \"fas fa-hot-tub\",\n    \"fas fa-hotel\",\n    \"fas fa-hourglass\",\n    \"fas fa-hourglass-end\",\n    \"fas fa-hourglass-half\",\n    \"fas fa-hourglass-start\",\n    \"fas fa-house-damage\",\n    \"fas fa-hryvnia\",\n    \"fas fa-i-cursor\",\n    \"fas fa-icicles\",\n    \"fas fa-id-badge\",\n    \"fas fa-id-card\",\n    \"fas fa-id-card-alt\",\n    \"fas fa-igloo\",\n    \"fas fa-image\",\n    \"fas fa-images\",\n    \"fas fa-inbox\",\n    \"fas fa-indent\",\n    \"fas fa-industry\",\n    \"fas fa-infinity\",\n    \"fas fa-info\",\n    \"fas fa-info-circle\",\n    \"fas fa-italic\",\n    \"fas fa-jedi\",\n    \"fas fa-joint\",\n    \"fas fa-journal-whills\",\n    \"fas fa-kaaba\",\n    \"fas fa-key\",\n    \"fas fa-keyboard\",\n    \"fas fa-khanda\",\n    \"fas fa-kiss\",\n    \"fas fa-kiss-beam\",\n    \"fas fa-kiss-wink-heart\",\n    \"fas fa-kiwi-bird\",\n    \"fas fa-landmark\",\n    \"fas fa-language\",\n    \"fas fa-laptop\",\n    \"fas fa-laptop-code\",\n    \"fas fa-laugh\",\n    \"fas fa-laugh-beam\",\n    \"fas fa-laugh-squint\",\n    \"fas fa-laugh-wink\",\n    \"fas fa-layer-group\",\n    \"fas fa-leaf\",\n    \"fas fa-lemon\",\n    \"fas fa-less-than\",\n    \"fas fa-less-than-equal\",\n    \"fas fa-level-down-alt\",\n    \"fas fa-level-up-alt\",\n    \"fas fa-life-ring\",\n    \"fas fa-lightbulb\",\n    \"fas fa-link\",\n    \"fas fa-lira-sign\",\n    \"fas fa-list\",\n    \"fas fa-list-alt\",\n    \"fas fa-list-ol\",\n    \"fas fa-list-ul\",\n    \"fas fa-location-arrow\",\n    \"fas fa-lock\",\n    \"fas fa-lock-open\",\n    \"fas fa-long-arrow-alt-down\",\n    \"fas fa-long-arrow-alt-left\",\n    \"fas fa-long-arrow-alt-right\",\n    \"fas fa-long-arrow-alt-up\",\n    \"fas fa-low-vision\",\n    \"fas fa-luggage-cart\",\n    \"fas fa-magic\",\n    \"fas fa-magnet\",\n    \"fas fa-mail-bulk\",\n    \"fas fa-male\",\n    \"fas fa-map\",\n    \"fas fa-map-marked\",\n    \"fas fa-map-marked-alt\",\n    \"fas fa-map-marker\",\n    \"fas fa-map-marker-alt\",\n    \"fas fa-map-pin\",\n    \"fas fa-map-signs\",\n    \"fas fa-marker\",\n    \"fas fa-mars\",\n    \"fas fa-mars-double\",\n    \"fas fa-mars-stroke\",\n    \"fas fa-mars-stroke-h\",\n    \"fas fa-mars-stroke-v\",\n    \"fas fa-mask\",\n    \"fas fa-medal\",\n    \"fas fa-medkit\",\n    \"fas fa-meh\",\n    \"fas fa-meh-blank\",\n    \"fas fa-meh-rolling-eyes\",\n    \"fas fa-memory\",\n    \"fas fa-menorah\",\n    \"fas fa-mercury\",\n    \"fas fa-meteor\",\n    \"fas fa-microchip\",\n    \"fas fa-microphone\",\n    \"fas fa-microphone-alt\",\n    \"fas fa-microphone-alt-slash\",\n    \"fas fa-microphone-slash\",\n    \"fas fa-microscope\",\n    \"fas fa-minus\",\n    \"fas fa-minus-circle\",\n    \"fas fa-minus-square\",\n    \"fas fa-mitten\",\n    \"fas fa-mobile\",\n    \"fas fa-mobile-alt\",\n    \"fas fa-money-bill\",\n    \"fas fa-money-bill-alt\",\n    \"fas fa-money-bill-wave\",\n    \"fas fa-money-bill-wave-alt\",\n    \"fas fa-money-check\",\n    \"fas fa-money-check-alt\",\n    \"fas fa-monument\",\n    \"fas fa-moon\",\n    \"fas fa-mortar-pestle\",\n    \"fas fa-mosque\",\n    \"fas fa-motorcycle\",\n    \"fas fa-mountain\",\n    \"fas fa-mouse-pointer\",\n    \"fas fa-mug-hot\",\n    \"fas fa-music\",\n    \"fas fa-network-wired\",\n    \"fas fa-neuter\",\n    \"fas fa-newspaper\",\n    \"fas fa-not-equal\",\n    \"fas fa-notes-medical\",\n    \"fas fa-object-group\",\n    \"fas fa-object-ungroup\",\n    \"fas fa-oil-can\",\n    \"fas fa-om\",\n    \"fas fa-otter\",\n    \"fas fa-outdent\",\n    \"fas fa-paint-brush\",\n    \"fas fa-paint-roller\",\n    \"fas fa-palette\",\n    \"fas fa-pallet\",\n    \"fas fa-paper-plane\",\n    \"fas fa-paperclip\",\n    \"fas fa-parachute-box\",\n    \"fas fa-paragraph\",\n    \"fas fa-parking\",\n    \"fas fa-passport\",\n    \"fas fa-pastafarianism\",\n    \"fas fa-paste\",\n    \"fas fa-pause\",\n    \"fas fa-pause-circle\",\n    \"fas fa-paw\",\n    \"fas fa-peace\",\n    \"fas fa-pen\",\n    \"fas fa-pen-alt\",\n    \"fas fa-pen-fancy\",\n    \"fas fa-pen-nib\",\n    \"fas fa-pen-square\",\n    \"fas fa-pencil-alt\",\n    \"fas fa-pencil-ruler\",\n    \"fas fa-people-carry\",\n    \"fas fa-percent\",\n    \"fas fa-percentage\",\n    \"fas fa-person-booth\",\n    \"fas fa-phone\",\n    \"fas fa-phone-slash\",\n    \"fas fa-phone-square\",\n    \"fas fa-phone-volume\",\n    \"fas fa-piggy-bank\",\n    \"fas fa-pills\",\n    \"fas fa-place-of-worship\",\n    \"fas fa-plane\",\n    \"fas fa-plane-arrival\",\n    \"fas fa-plane-departure\",\n    \"fas fa-play\",\n    \"fas fa-play-circle\",\n    \"fas fa-plug\",\n    \"fas fa-plus\",\n    \"fas fa-plus-circle\",\n    \"fas fa-plus-square\",\n    \"fas fa-podcast\",\n    \"fas fa-poll\",\n    \"fas fa-poll-h\",\n    \"fas fa-poo\",\n    \"fas fa-poo-storm\",\n    \"fas fa-poop\",\n    \"fas fa-portrait\",\n    \"fas fa-pound-sign\",\n    \"fas fa-power-off\",\n    \"fas fa-pray\",\n    \"fas fa-praying-hands\",\n    \"fas fa-prescription\",\n    \"fas fa-prescription-bottle\",\n    \"fas fa-prescription-bottle-alt\",\n    \"fas fa-print\",\n    \"fas fa-procedures\",\n    \"fas fa-project-diagram\",\n    \"fas fa-puzzle-piece\",\n    \"fas fa-qrcode\",\n    \"fas fa-question\",\n    \"fas fa-question-circle\",\n    \"fas fa-quidditch\",\n    \"fas fa-quote-left\",\n    \"fas fa-quote-right\",\n    \"fas fa-quran\",\n    \"fas fa-radiation\",\n    \"fas fa-radiation-alt\",\n    \"fas fa-rainbow\",\n    \"fas fa-random\",\n    \"fas fa-receipt\",\n    \"fas fa-recycle\",\n    \"fas fa-redo\",\n    \"fas fa-redo-alt\",\n    \"fas fa-registered\",\n    \"fas fa-reply\",\n    \"fas fa-reply-all\",\n    \"fas fa-republican\",\n    \"fas fa-restroom\",\n    \"fas fa-retweet\",\n    \"fas fa-ribbon\",\n    \"fas fa-ring\",\n    \"fas fa-road\",\n    \"fas fa-robot\",\n    \"fas fa-rocket\",\n    \"fas fa-route\",\n    \"fas fa-rss\",\n    \"fas fa-rss-square\",\n    \"fas fa-ruble-sign\",\n    \"fas fa-ruler\",\n    \"fas fa-ruler-combined\",\n    \"fas fa-ruler-horizontal\",\n    \"fas fa-ruler-vertical\",\n    \"fas fa-running\",\n    \"fas fa-rupee-sign\",\n    \"fas fa-sad-cry\",\n    \"fas fa-sad-tear\",\n    \"fas fa-satellite\",\n    \"fas fa-satellite-dish\",\n    \"fas fa-save\",\n    \"fas fa-school\",\n    \"fas fa-screwdriver\",\n    \"fas fa-scroll\",\n    \"fas fa-sd-card\",\n    \"fas fa-search\",\n    \"fas fa-search-dollar\",\n    \"fas fa-search-location\",\n    \"fas fa-search-minus\",\n    \"fas fa-search-plus\",\n    \"fas fa-seedling\",\n    \"fas fa-server\",\n    \"fas fa-shapes\",\n    \"fas fa-share\",\n    \"fas fa-share-alt\",\n    \"fas fa-share-alt-square\",\n    \"fas fa-share-square\",\n    \"fas fa-shekel-sign\",\n    \"fas fa-shield-alt\",\n    \"fas fa-ship\",\n    \"fas fa-shipping-fast\",\n    \"fas fa-shoe-prints\",\n    \"fas fa-shopping-bag\",\n    \"fas fa-shopping-basket\",\n    \"fas fa-shopping-cart\",\n    \"fas fa-shower\",\n    \"fas fa-shuttle-van\",\n    \"fas fa-sign\",\n    \"fas fa-sign-in-alt\",\n    \"fas fa-sign-language\",\n    \"fas fa-sign-out-alt\",\n    \"fas fa-signal\",\n    \"fas fa-signature\",\n    \"fas fa-sim-card\",\n    \"fas fa-sitemap\",\n    \"fas fa-skating\",\n    \"fas fa-skiing\",\n    \"fas fa-skiing-nordic\",\n    \"fas fa-skull\",\n    \"fas fa-skull-crossbones\",\n    \"fas fa-slash\",\n    \"fas fa-sleigh\",\n    \"fas fa-sliders-h\",\n    \"fas fa-smile\",\n    \"fas fa-smile-beam\",\n    \"fas fa-smile-wink\",\n    \"fas fa-smog\",\n    \"fas fa-smoking\",\n    \"fas fa-smoking-ban\",\n    \"fas fa-sms\",\n    \"fas fa-snowboarding\",\n    \"fas fa-snowflake\",\n    \"fas fa-snowman\",\n    \"fas fa-snowplow\",\n    \"fas fa-socks\",\n    \"fas fa-solar-panel\",\n    \"fas fa-sort\",\n    \"fas fa-sort-alpha-down\",\n    \"fas fa-sort-alpha-up\",\n    \"fas fa-sort-amount-down\",\n    \"fas fa-sort-amount-up\",\n    \"fas fa-sort-down\",\n    \"fas fa-sort-numeric-down\",\n    \"fas fa-sort-numeric-up\",\n    \"fas fa-sort-up\",\n    \"fas fa-spa\",\n    \"fas fa-space-shuttle\",\n    \"fas fa-spider\",\n    \"fas fa-spinner\",\n    \"fas fa-splotch\",\n    \"fas fa-spray-can\",\n    \"fas fa-square\",\n    \"fas fa-square-full\",\n    \"fas fa-square-root-alt\",\n    \"fas fa-stamp\",\n    \"fas fa-star\",\n    \"fas fa-star-and-crescent\",\n    \"fas fa-star-half\",\n    \"fas fa-star-half-alt\",\n    \"fas fa-star-of-david\",\n    \"fas fa-star-of-life\",\n    \"fas fa-step-backward\",\n    \"fas fa-step-forward\",\n    \"fas fa-stethoscope\",\n    \"fas fa-sticky-note\",\n    \"fas fa-stop\",\n    \"fas fa-stop-circle\",\n    \"fas fa-stopwatch\",\n    \"fas fa-store\",\n    \"fas fa-store-alt\",\n    \"fas fa-stream\",\n    \"fas fa-street-view\",\n    \"fas fa-strikethrough\",\n    \"fas fa-stroopwafel\",\n    \"fas fa-subscript\",\n    \"fas fa-subway\",\n    \"fas fa-suitcase\",\n    \"fas fa-suitcase-rolling\",\n    \"fas fa-sun\",\n    \"fas fa-superscript\",\n    \"fas fa-surprise\",\n    \"fas fa-swatchbook\",\n    \"fas fa-swimmer\",\n    \"fas fa-swimming-pool\",\n    \"fas fa-synagogue\",\n    \"fas fa-sync\",\n    \"fas fa-sync-alt\",\n    \"fas fa-syringe\",\n    \"fas fa-table\",\n    \"fas fa-table-tennis\",\n    \"fas fa-tablet\",\n    \"fas fa-tablet-alt\",\n    \"fas fa-tablets\",\n    \"fas fa-tachometer-alt\",\n    \"fas fa-tag\",\n    \"fas fa-tags\",\n    \"fas fa-tape\",\n    \"fas fa-tasks\",\n    \"fas fa-taxi\",\n    \"fas fa-teeth\",\n    \"fas fa-teeth-open\",\n    \"fas fa-temperature-high\",\n    \"fas fa-temperature-low\",\n    \"fas fa-tenge\",\n    \"fas fa-terminal\",\n    \"fas fa-text-height\",\n    \"fas fa-text-width\",\n    \"fas fa-th\",\n    \"fas fa-th-large\",\n    \"fas fa-th-list\",\n    \"fas fa-theater-masks\",\n    \"fas fa-thermometer\",\n    \"fas fa-thermometer-empty\",\n    \"fas fa-thermometer-full\",\n    \"fas fa-thermometer-half\",\n    \"fas fa-thermometer-quarter\",\n    \"fas fa-thermometer-three-quarters\",\n    \"fas fa-thumbs-down\",\n    \"fas fa-thumbs-up\",\n    \"fas fa-thumbtack\",\n    \"fas fa-ticket-alt\",\n    \"fas fa-times\",\n    \"fas fa-times-circle\",\n    \"fas fa-tint\",\n    \"fas fa-tint-slash\",\n    \"fas fa-tired\",\n    \"fas fa-toggle-off\",\n    \"fas fa-toggle-on\",\n    \"fas fa-toilet\",\n    \"fas fa-toilet-paper\",\n    \"fas fa-toolbox\",\n    \"fas fa-tools\",\n    \"fas fa-tooth\",\n    \"fas fa-torah\",\n    \"fas fa-torii-gate\",\n    \"fas fa-tractor\",\n    \"fas fa-trademark\",\n    \"fas fa-traffic-light\",\n    \"fas fa-train\",\n    \"fas fa-tram\",\n    \"fas fa-transgender\",\n    \"fas fa-transgender-alt\",\n    \"fas fa-trash\",\n    \"fas fa-trash-alt\",\n    \"fas fa-tree\",\n    \"fas fa-trophy\",\n    \"fas fa-truck\",\n    \"fas fa-truck-loading\",\n    \"fas fa-truck-monster\",\n    \"fas fa-truck-moving\",\n    \"fas fa-truck-pickup\",\n    \"fas fa-tshirt\",\n    \"fas fa-tty\",\n    \"fas fa-tv\",\n    \"fas fa-umbrella\",\n    \"fas fa-umbrella-beach\",\n    \"fas fa-underline\",\n    \"fas fa-undo\",\n    \"fas fa-undo-alt\",\n    \"fas fa-universal-access\",\n    \"fas fa-university\",\n    \"fas fa-unlink\",\n    \"fas fa-unlock\",\n    \"fas fa-unlock-alt\",\n    \"fas fa-upload\",\n    \"fas fa-user\",\n    \"fas fa-user-alt\",\n    \"fas fa-user-alt-slash\",\n    \"fas fa-user-astronaut\",\n    \"fas fa-user-check\",\n    \"fas fa-user-circle\",\n    \"fas fa-user-clock\",\n    \"fas fa-user-cog\",\n    \"fas fa-user-edit\",\n    \"fas fa-user-friends\",\n    \"fas fa-user-graduate\",\n    \"fas fa-user-injured\",\n    \"fas fa-user-lock\",\n    \"fas fa-user-md\",\n    \"fas fa-user-minus\",\n    \"fas fa-user-ninja\",\n    \"fas fa-user-plus\",\n    \"fas fa-user-secret\",\n    \"fas fa-user-shield\",\n    \"fas fa-user-slash\",\n    \"fas fa-user-tag\",\n    \"fas fa-user-tie\",\n    \"fas fa-user-times\",\n    \"fas fa-users\",\n    \"fas fa-users-cog\",\n    \"fas fa-utensil-spoon\",\n    \"fas fa-utensils\",\n    \"fas fa-vector-square\",\n    \"fas fa-venus\",\n    \"fas fa-venus-double\",\n    \"fas fa-venus-mars\",\n    \"fas fa-vial\",\n    \"fas fa-vials\",\n    \"fas fa-video\",\n    \"fas fa-video-slash\",\n    \"fas fa-vihara\",\n    \"fas fa-volleyball-ball\",\n    \"fas fa-volume-down\",\n    \"fas fa-volume-mute\",\n    \"fas fa-volume-off\",\n    \"fas fa-volume-up\",\n    \"fas fa-vote-yea\",\n    \"fas fa-vr-cardboard\",\n    \"fas fa-walking\",\n    \"fas fa-wallet\",\n    \"fas fa-warehouse\",\n    \"fas fa-water\",\n    \"fas fa-weight\",\n    \"fas fa-weight-hanging\",\n    \"fas fa-wheelchair\",\n    \"fas fa-wifi\",\n    \"fas fa-wind\",\n    \"fas fa-window-close\",\n    \"fas fa-window-maximize\",\n    \"fas fa-window-minimize\",\n    \"fas fa-window-restore\",\n    \"fas fa-wine-bottle\",\n    \"fas fa-wine-glass\",\n    \"fas fa-wine-glass-alt\",\n    \"fas fa-won-sign\",\n    \"fas fa-wrench\",\n    \"fas fa-x-ray\",\n    \"fas fa-yen-sign\",\n    \"fas fa-yin-yang\",\n    \"far fa-address-book\",\n    \"far fa-address-card\",\n    \"far fa-angry\",\n    \"far fa-arrow-alt-circle-down\",\n    \"far fa-arrow-alt-circle-left\",\n    \"far fa-arrow-alt-circle-right\",\n    \"far fa-arrow-alt-circle-up\",\n    \"far fa-bell\",\n    \"far fa-bell-slash\",\n    \"far fa-bookmark\",\n    \"far fa-building\",\n    \"far fa-calendar\",\n    \"far fa-calendar-alt\",\n    \"far fa-calendar-check\",\n    \"far fa-calendar-minus\",\n    \"far fa-calendar-plus\",\n    \"far fa-calendar-times\",\n    \"far fa-caret-square-down\",\n    \"far fa-caret-square-left\",\n    \"far fa-caret-square-right\",\n    \"far fa-caret-square-up\",\n    \"far fa-chart-bar\",\n    \"far fa-check-circle\",\n    \"far fa-check-square\",\n    \"far fa-circle\",\n    \"far fa-clipboard\",\n    \"far fa-clock\",\n    \"far fa-clone\",\n    \"far fa-closed-captioning\",\n    \"far fa-comment\",\n    \"far fa-comment-alt\",\n    \"far fa-comment-dots\",\n    \"far fa-comments\",\n    \"far fa-compass\",\n    \"far fa-copy\",\n    \"far fa-copyright\",\n    \"far fa-credit-card\",\n    \"far fa-dizzy\",\n    \"far fa-dot-circle\",\n    \"far fa-edit\",\n    \"far fa-envelope\",\n    \"far fa-envelope-open\",\n    \"far fa-eye\",\n    \"far fa-eye-slash\",\n    \"far fa-file\",\n    \"far fa-file-alt\",\n    \"far fa-file-archive\",\n    \"far fa-file-audio\",\n    \"far fa-file-code\",\n    \"far fa-file-excel\",\n    \"far fa-file-image\",\n    \"far fa-file-pdf\",\n    \"far fa-file-powerpoint\",\n    \"far fa-file-video\",\n    \"far fa-file-word\",\n    \"far fa-flag\",\n    \"far fa-flushed\",\n    \"far fa-folder\",\n    \"far fa-folder-open\",\n    \"far fa-frown\",\n    \"far fa-frown-open\",\n    \"far fa-futbol\",\n    \"far fa-gem\",\n    \"far fa-grimace\",\n    \"far fa-grin\",\n    \"far fa-grin-alt\",\n    \"far fa-grin-beam\",\n    \"far fa-grin-beam-sweat\",\n    \"far fa-grin-hearts\",\n    \"far fa-grin-squint\",\n    \"far fa-grin-squint-tears\",\n    \"far fa-grin-stars\",\n    \"far fa-grin-tears\",\n    \"far fa-grin-tongue\",\n    \"far fa-grin-tongue-squint\",\n    \"far fa-grin-tongue-wink\",\n    \"far fa-grin-wink\",\n    \"far fa-hand-lizard\",\n    \"far fa-hand-paper\",\n    \"far fa-hand-peace\",\n    \"far fa-hand-point-down\",\n    \"far fa-hand-point-left\",\n    \"far fa-hand-point-right\",\n    \"far fa-hand-point-up\",\n    \"far fa-hand-pointer\",\n    \"far fa-hand-rock\",\n    \"far fa-hand-scissors\",\n    \"far fa-hand-spock\",\n    \"far fa-handshake\",\n    \"far fa-hdd\",\n    \"far fa-heart\",\n    \"far fa-hospital\",\n    \"far fa-hourglass\",\n    \"far fa-id-badge\",\n    \"far fa-id-card\",\n    \"far fa-image\",\n    \"far fa-images\",\n    \"far fa-keyboard\",\n    \"far fa-kiss\",\n    \"far fa-kiss-beam\",\n    \"far fa-kiss-wink-heart\",\n    \"far fa-laugh\",\n    \"far fa-laugh-beam\",\n    \"far fa-laugh-squint\",\n    \"far fa-laugh-wink\",\n    \"far fa-lemon\",\n    \"far fa-life-ring\",\n    \"far fa-lightbulb\",\n    \"far fa-list-alt\",\n    \"far fa-map\",\n    \"far fa-meh\",\n    \"far fa-meh-blank\",\n    \"far fa-meh-rolling-eyes\",\n    \"far fa-minus-square\",\n    \"far fa-money-bill-alt\",\n    \"far fa-moon\",\n    \"far fa-newspaper\",\n    \"far fa-object-group\",\n    \"far fa-object-ungroup\",\n    \"far fa-paper-plane\",\n    \"far fa-pause-circle\",\n    \"far fa-play-circle\",\n    \"far fa-plus-square\",\n    \"far fa-question-circle\",\n    \"far fa-registered\",\n    \"far fa-sad-cry\",\n    \"far fa-sad-tear\",\n    \"far fa-save\",\n    \"far fa-share-square\",\n    \"far fa-smile\",\n    \"far fa-smile-beam\",\n    \"far fa-smile-wink\",\n    \"far fa-snowflake\",\n    \"far fa-square\",\n    \"far fa-star\",\n    \"far fa-star-half\",\n    \"far fa-sticky-note\",\n    \"far fa-stop-circle\",\n    \"far fa-sun\",\n    \"far fa-surprise\",\n    \"far fa-thumbs-down\",\n    \"far fa-thumbs-up\",\n    \"far fa-times-circle\",\n    \"far fa-tired\",\n    \"far fa-trash-alt\",\n    \"far fa-user\",\n    \"far fa-user-circle\",\n    \"far fa-window-close\",\n    \"far fa-window-maximize\",\n    \"far fa-window-minimize\",\n    \"far fa-window-restore\",\n    \"fab fa-500px\",\n    \"fab fa-accessible-icon\",\n    \"fab fa-accusoft\",\n    \"fab fa-acquisitions-incorporated\",\n    \"fab fa-adn\",\n    \"fab fa-adobe\",\n    \"fab fa-adversal\",\n    \"fab fa-affiliatetheme\",\n    \"fab fa-algolia\",\n    \"fab fa-alipay\",\n    \"fab fa-amazon\",\n    \"fab fa-amazon-pay\",\n    \"fab fa-amilia\",\n    \"fab fa-android\",\n    \"fab fa-angellist\",\n    \"fab fa-angrycreative\",\n    \"fab fa-angular\",\n    \"fab fa-app-store\",\n    \"fab fa-app-store-ios\",\n    \"fab fa-apper\",\n    \"fab fa-apple\",\n    \"fab fa-apple-pay\",\n    \"fab fa-artstation\",\n    \"fab fa-asymmetrik\",\n    \"fab fa-atlassian\",\n    \"fab fa-audible\",\n    \"fab fa-autoprefixer\",\n    \"fab fa-avianex\",\n    \"fab fa-aviato\",\n    \"fab fa-aws\",\n    \"fab fa-bandcamp\",\n    \"fab fa-behance\",\n    \"fab fa-behance-square\",\n    \"fab fa-bimobject\",\n    \"fab fa-bitbucket\",\n    \"fab fa-bitcoin\",\n    \"fab fa-bity\",\n    \"fab fa-black-tie\",\n    \"fab fa-blackberry\",\n    \"fab fa-blogger\",\n    \"fab fa-blogger-b\",\n    \"fab fa-bluetooth\",\n    \"fab fa-bluetooth-b\",\n    \"fab fa-btc\",\n    \"fab fa-buromobelexperte\",\n    \"fab fa-buysellads\",\n    \"fab fa-canadian-maple-leaf\",\n    \"fab fa-cc-amazon-pay\",\n    \"fab fa-cc-amex\",\n    \"fab fa-cc-apple-pay\",\n    \"fab fa-cc-diners-club\",\n    \"fab fa-cc-discover\",\n    \"fab fa-cc-jcb\",\n    \"fab fa-cc-mastercard\",\n    \"fab fa-cc-paypal\",\n    \"fab fa-cc-stripe\",\n    \"fab fa-cc-visa\",\n    \"fab fa-centercode\",\n    \"fab fa-centos\",\n    \"fab fa-chrome\",\n    \"fab fa-cloudscale\",\n    \"fab fa-cloudsmith\",\n    \"fab fa-cloudversify\",\n    \"fab fa-codepen\",\n    \"fab fa-codiepie\",\n    \"fab fa-confluence\",\n    \"fab fa-connectdevelop\",\n    \"fab fa-contao\",\n    \"fab fa-cpanel\",\n    \"fab fa-creative-commons\",\n    \"fab fa-creative-commons-by\",\n    \"fab fa-creative-commons-nc\",\n    \"fab fa-creative-commons-nc-eu\",\n    \"fab fa-creative-commons-nc-jp\",\n    \"fab fa-creative-commons-nd\",\n    \"fab fa-creative-commons-pd\",\n    \"fab fa-creative-commons-pd-alt\",\n    \"fab fa-creative-commons-remix\",\n    \"fab fa-creative-commons-sa\",\n    \"fab fa-creative-commons-sampling\",\n    \"fab fa-creative-commons-sampling-plus\",\n    \"fab fa-creative-commons-share\",\n    \"fab fa-creative-commons-zero\",\n    \"fab fa-critical-role\",\n    \"fab fa-css3\",\n    \"fab fa-css3-alt\",\n    \"fab fa-cuttlefish\",\n    \"fab fa-d-and-d\",\n    \"fab fa-d-and-d-beyond\",\n    \"fab fa-dashcube\",\n    \"fab fa-delicious\",\n    \"fab fa-deploydog\",\n    \"fab fa-deskpro\",\n    \"fab fa-dev\",\n    \"fab fa-deviantart\",\n    \"fab fa-dhl\",\n    \"fab fa-diaspora\",\n    \"fab fa-digg\",\n    \"fab fa-digital-ocean\",\n    \"fab fa-discord\",\n    \"fab fa-discourse\",\n    \"fab fa-dochub\",\n    \"fab fa-docker\",\n    \"fab fa-draft2digital\",\n    \"fab fa-dribbble\",\n    \"fab fa-dribbble-square\",\n    \"fab fa-dropbox\",\n    \"fab fa-drupal\",\n    \"fab fa-dyalog\",\n    \"fab fa-earlybirds\",\n    \"fab fa-ebay\",\n    \"fab fa-edge\",\n    \"fab fa-elementor\",\n    \"fab fa-ello\",\n    \"fab fa-ember\",\n    \"fab fa-empire\",\n    \"fab fa-envira\",\n    \"fab fa-erlang\",\n    \"fab fa-ethereum\",\n    \"fab fa-etsy\",\n    \"fab fa-expeditedssl\",\n    \"fab fa-facebook\",\n    \"fab fa-facebook-f\",\n    \"fab fa-facebook-messenger\",\n    \"fab fa-facebook-square\",\n    \"fab fa-fantasy-flight-games\",\n    \"fab fa-fedex\",\n    \"fab fa-fedora\",\n    \"fab fa-figma\",\n    \"fab fa-firefox\",\n    \"fab fa-first-order\",\n    \"fab fa-first-order-alt\",\n    \"fab fa-firstdraft\",\n    \"fab fa-flickr\",\n    \"fab fa-flipboard\",\n    \"fab fa-fly\",\n    \"fab fa-font-awesome\",\n    \"fab fa-font-awesome-alt\",\n    \"fab fa-font-awesome-flag\",\n    \"fab fa-fonticons\",\n    \"fab fa-fonticons-fi\",\n    \"fab fa-fort-awesome\",\n    \"fab fa-fort-awesome-alt\",\n    \"fab fa-forumbee\",\n    \"fab fa-foursquare\",\n    \"fab fa-free-code-camp\",\n    \"fab fa-freebsd\",\n    \"fab fa-fulcrum\",\n    \"fab fa-galactic-republic\",\n    \"fab fa-galactic-senate\",\n    \"fab fa-get-pocket\",\n    \"fab fa-gg\",\n    \"fab fa-gg-circle\",\n    \"fab fa-git\",\n    \"fab fa-git-square\",\n    \"fab fa-github\",\n    \"fab fa-github-alt\",\n    \"fab fa-github-square\",\n    \"fab fa-gitkraken\",\n    \"fab fa-gitlab\",\n    \"fab fa-gitter\",\n    \"fab fa-glide\",\n    \"fab fa-glide-g\",\n    \"fab fa-gofore\",\n    \"fab fa-goodreads\",\n    \"fab fa-goodreads-g\",\n    \"fab fa-google\",\n    \"fab fa-google-drive\",\n    \"fab fa-google-play\",\n    \"fab fa-google-plus\",\n    \"fab fa-google-plus-g\",\n    \"fab fa-google-plus-square\",\n    \"fab fa-google-wallet\",\n    \"fab fa-gratipay\",\n    \"fab fa-grav\",\n    \"fab fa-gripfire\",\n    \"fab fa-grunt\",\n    \"fab fa-gulp\",\n    \"fab fa-hacker-news\",\n    \"fab fa-hacker-news-square\",\n    \"fab fa-hackerrank\",\n    \"fab fa-hips\",\n    \"fab fa-hire-a-helper\",\n    \"fab fa-hooli\",\n    \"fab fa-hornbill\",\n    \"fab fa-hotjar\",\n    \"fab fa-houzz\",\n    \"fab fa-html5\",\n    \"fab fa-hubspot\",\n    \"fab fa-imdb\",\n    \"fab fa-instagram\",\n    \"fab fa-intercom\",\n    \"fab fa-internet-explorer\",\n    \"fab fa-invision\",\n    \"fab fa-ioxhost\",\n    \"fab fa-itunes\",\n    \"fab fa-itunes-note\",\n    \"fab fa-java\",\n    \"fab fa-jedi-order\",\n    \"fab fa-jenkins\",\n    \"fab fa-jira\",\n    \"fab fa-joget\",\n    \"fab fa-joomla\",\n    \"fab fa-js\",\n    \"fab fa-js-square\",\n    \"fab fa-jsfiddle\",\n    \"fab fa-kaggle\",\n    \"fab fa-keybase\",\n    \"fab fa-keycdn\",\n    \"fab fa-kickstarter\",\n    \"fab fa-kickstarter-k\",\n    \"fab fa-korvue\",\n    \"fab fa-laravel\",\n    \"fab fa-lastfm\",\n    \"fab fa-lastfm-square\",\n    \"fab fa-leanpub\",\n    \"fab fa-less\",\n    \"fab fa-line\",\n    \"fab fa-linkedin\",\n    \"fab fa-linkedin-in\",\n    \"fab fa-linode\",\n    \"fab fa-linux\",\n    \"fab fa-lyft\",\n    \"fab fa-magento\",\n    \"fab fa-mailchimp\",\n    \"fab fa-mandalorian\",\n    \"fab fa-markdown\",\n    \"fab fa-mastodon\",\n    \"fab fa-maxcdn\",\n    \"fab fa-medapps\",\n    \"fab fa-medium\",\n    \"fab fa-medium-m\",\n    \"fab fa-medrt\",\n    \"fab fa-meetup\",\n    \"fab fa-megaport\",\n    \"fab fa-mendeley\",\n    \"fab fa-microsoft\",\n    \"fab fa-mix\",\n    \"fab fa-mixcloud\",\n    \"fab fa-mizuni\",\n    \"fab fa-modx\",\n    \"fab fa-monero\",\n    \"fab fa-napster\",\n    \"fab fa-neos\",\n    \"fab fa-nimblr\",\n    \"fab fa-nintendo-switch\",\n    \"fab fa-node\",\n    \"fab fa-node-js\",\n    \"fab fa-npm\",\n    \"fab fa-ns8\",\n    \"fab fa-nutritionix\",\n    \"fab fa-odnoklassniki\",\n    \"fab fa-odnoklassniki-square\",\n    \"fab fa-old-republic\",\n    \"fab fa-opencart\",\n    \"fab fa-openid\",\n    \"fab fa-opera\",\n    \"fab fa-optin-monster\",\n    \"fab fa-osi\",\n    \"fab fa-page4\",\n    \"fab fa-pagelines\",\n    \"fab fa-palfed\",\n    \"fab fa-patreon\",\n    \"fab fa-paypal\",\n    \"fab fa-penny-arcade\",\n    \"fab fa-periscope\",\n    \"fab fa-phabricator\",\n    \"fab fa-phoenix-framework\",\n    \"fab fa-phoenix-squadron\",\n    \"fab fa-php\",\n    \"fab fa-pied-piper\",\n    \"fab fa-pied-piper-alt\",\n    \"fab fa-pied-piper-hat\",\n    \"fab fa-pied-piper-pp\",\n    \"fab fa-pinterest\",\n    \"fab fa-pinterest-p\",\n    \"fab fa-pinterest-square\",\n    \"fab fa-playstation\",\n    \"fab fa-product-hunt\",\n    \"fab fa-pushed\",\n    \"fab fa-python\",\n    \"fab fa-qq\",\n    \"fab fa-quinscape\",\n    \"fab fa-quora\",\n    \"fab fa-r-project\",\n    \"fab fa-raspberry-pi\",\n    \"fab fa-ravelry\",\n    \"fab fa-react\",\n    \"fab fa-reacteurope\",\n    \"fab fa-readme\",\n    \"fab fa-rebel\",\n    \"fab fa-red-river\",\n    \"fab fa-reddit\",\n    \"fab fa-reddit-alien\",\n    \"fab fa-reddit-square\",\n    \"fab fa-redhat\",\n    \"fab fa-renren\",\n    \"fab fa-replyd\",\n    \"fab fa-researchgate\",\n    \"fab fa-resolving\",\n    \"fab fa-rev\",\n    \"fab fa-rocketchat\",\n    \"fab fa-rockrms\",\n    \"fab fa-safari\",\n    \"fab fa-sass\",\n    \"fab fa-schlix\",\n    \"fab fa-scribd\",\n    \"fab fa-searchengin\",\n    \"fab fa-sellcast\",\n    \"fab fa-sellsy\",\n    \"fab fa-servicestack\",\n    \"fab fa-shirtsinbulk\",\n    \"fab fa-shopware\",\n    \"fab fa-simplybuilt\",\n    \"fab fa-sistrix\",\n    \"fab fa-sith\",\n    \"fab fa-sketch\",\n    \"fab fa-skyatlas\",\n    \"fab fa-skype\",\n    \"fab fa-slack\",\n    \"fab fa-slack-hash\",\n    \"fab fa-slideshare\",\n    \"fab fa-snapchat\",\n    \"fab fa-snapchat-ghost\",\n    \"fab fa-snapchat-square\",\n    \"fab fa-soundcloud\",\n    \"fab fa-sourcetree\",\n    \"fab fa-speakap\",\n    \"fab fa-spotify\",\n    \"fab fa-squarespace\",\n    \"fab fa-stack-exchange\",\n    \"fab fa-stack-overflow\",\n    \"fab fa-staylinked\",\n    \"fab fa-steam\",\n    \"fab fa-steam-square\",\n    \"fab fa-steam-symbol\",\n    \"fab fa-sticker-mule\",\n    \"fab fa-strava\",\n    \"fab fa-stripe\",\n    \"fab fa-stripe-s\",\n    \"fab fa-studiovinari\",\n    \"fab fa-stumbleupon\",\n    \"fab fa-stumbleupon-circle\",\n    \"fab fa-superpowers\",\n    \"fab fa-supple\",\n    \"fab fa-suse\",\n    \"fab fa-teamspeak\",\n    \"fab fa-telegram\",\n    \"fab fa-telegram-plane\",\n    \"fab fa-tencent-weibo\",\n    \"fab fa-the-red-yeti\",\n    \"fab fa-themeco\",\n    \"fab fa-themeisle\",\n    \"fab fa-think-peaks\",\n    \"fab fa-trade-federation\",\n    \"fab fa-trello\",\n    \"fab fa-tripadvisor\",\n    \"fab fa-tumblr\",\n    \"fab fa-tumblr-square\",\n    \"fab fa-twitch\",\n    \"fab fa-twitter\",\n    \"fab fa-twitter-square\",\n    \"fab fa-typo3\",\n    \"fab fa-uber\",\n    \"fab fa-ubuntu\",\n    \"fab fa-uikit\",\n    \"fab fa-uniregistry\",\n    \"fab fa-untappd\",\n    \"fab fa-ups\",\n    \"fab fa-usb\",\n    \"fab fa-usps\",\n    \"fab fa-ussunnah\",\n    \"fab fa-vaadin\",\n    \"fab fa-viacoin\",\n    \"fab fa-viadeo\",\n    \"fab fa-viadeo-square\",\n    \"fab fa-viber\",\n    \"fab fa-vimeo\",\n    \"fab fa-vimeo-square\",\n    \"fab fa-vimeo-v\",\n    \"fab fa-vine\",\n    \"fab fa-vk\",\n    \"fab fa-vnv\",\n    \"fab fa-vuejs\",\n    \"fab fa-weebly\",\n    \"fab fa-weibo\",\n    \"fab fa-weixin\",\n    \"fab fa-whatsapp\",\n    \"fab fa-whatsapp-square\",\n    \"fab fa-whmcs\",\n    \"fab fa-wikipedia-w\",\n    \"fab fa-windows\",\n    \"fab fa-wix\",\n    \"fab fa-wizards-of-the-coast\",\n    \"fab fa-wolf-pack-battalion\",\n    \"fab fa-wordpress\",\n    \"fab fa-wordpress-simple\",\n    \"fab fa-wpbeginner\",\n    \"fab fa-wpexplorer\",\n    \"fab fa-wpforms\",\n    \"fab fa-wpressr\",\n    \"fab fa-xbox\",\n    \"fab fa-xing\",\n    \"fab fa-xing-square\",\n    \"fab fa-y-combinator\",\n    \"fab fa-yahoo\",\n    \"fab fa-yandex\",\n    \"fab fa-yandex-international\",\n    \"fab fa-yarn\",\n    \"fab fa-yelp\",\n    \"fab fa-yoast\",\n    \"fab fa-youtube\",\n    \"fab fa-youtube-square\",\n    \"fab fa-zhihu\",\n];\nexport default icons_;","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\nimport icons_ from \"../block-assets/icons\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport {\n  RichText,\n  InspectorControls,\n  ColorPalette,\n  BlockControls,\n  AlignmentToolbar,\n} from \"@wordpress/block-editor\";\nimport { useState, useRef, useEffect } from \"@wordpress/element\";\nimport {\n  PanelBody,\n  RangeControl,\n  ToggleControl,\n  ColorPicker,\n  SelectControl,\n} from \"@wordpress/components\";\nimport fontFamily from \"../block-assets/font-family\";\nregisterBlockType(\"zita-blocks/icon-block\", {\n  title: \"Icon\",\n  icon: \"star-empty\",\n  description: \"Use a slide title for your main title for the slide.\",\n  category: \"zita-category\",\n  keywords: [\"icon\", \"iconbox\"],\n  attributes: {\n    iconClass: {\n      type: \"string\",\n      default: \"fab fa-wordpress-simple\",\n    },\n    iconColor: {\n      type: \"string\",\n      default: \"#0693e3\",\n    },\n    iconBgColor: {\n      type: \"string\",\n      default: \"#EEF6F9\",\n    },\n    titleColor: {\n      type: \"string\",\n      default: \"#0693e3\",\n    },\n    iconFontsize: {\n      type: \"number\",\n      default: 55,\n    },\n    titleFontsize: {\n      type: \"number\",\n      default: 24,\n    },\n    titleTxt: {\n      type: \"string\",\n      default: \"Icon Title\",\n    },\n    titleArrenge: {\n      type: \"string\",\n      default: \"column\",\n    },\n    itemAlign: {\n      type: \"text\",\n      default: \"center\",\n    },\n    titleMarginTop: {\n      type: \"number\",\n      defalut: 18,\n    },\n    titleMarginRight: {\n      type: \"number\",\n    },\n    titleMarginBottom: {\n      type: \"number\",\n    },\n    titleMarginLeft: {\n      type: \"number\",\n      default: 11,\n    },\n    titleOnOff: {\n      type: \"boolean\",\n      default: true,\n    },\n    iconPaddingTop: {\n      type: \"number\",\n      default: 16,\n    },\n    iconPaddingRight: {\n      type: \"number\",\n      default: 20,\n    },\n    titleTag: {\n      type: \"string\",\n      default: \"p\",\n    },\n    titleFF: {\n      type: \"string\",\n      default: \"Ubuntu Mono\",\n    },\n    iconBorder: {\n      type: \"boolean\",\n      default: false,\n    },\n    iconBorderWidth: {\n      type: \"number\",\n      default: 2,\n    },\n    iconBorderRadius: {\n      type: \"number\",\n      default: 50,\n    },\n    iconBorderColor: {\n      type: \"string\",\n      default: \"#ffa600\",\n    },\n    iconSpace: {\n      type: \"number\",\n      default: 79,\n    },\n  },\n  edit: ({ attributes, setAttributes }) => {\n    const {\n      iconClass,\n      iconColor,\n      iconBgColor,\n      titleColor,\n      iconFontsize,\n      titleFF,\n      titleFontsize,\n      titleMarginTop,\n      titleMarginRight,\n      titleMarginBottom,\n      titleMarginLeft,\n      titleTxt,\n      titleArrenge,\n      itemAlign,\n      titleOnOff,\n      iconPaddingTop,\n      iconPaddingRight,\n      titleTag,\n      iconBorder,\n      iconBorderWidth,\n      iconBorderRadius,\n      iconBorderColor,\n      iconSpace,\n    } = attributes;\n\n    let borderStyle = iconBorder\n      ? {\n          borderWidth: iconBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: iconBorderColor,\n          borderRadius: iconBorderRadius + \"%\",\n          width: iconSpace + \"px\",\n          height: iconSpace + \"px\",\n        }\n      : null;\n\n    const [activeIconContainer, activeIconContainerSet] = useState(false);\n    const [iconList, setIconList] = useState(icons_);\n    let iconReff = useRef();\n    useEffect(() => {\n      let handler = (event) => {\n        if (!iconReff.current.contains(event.target)) {\n          activeIconContainerSet(false);\n        }\n      };\n\n      if (activeIconContainer) document.addEventListener(\"mousedown\", handler);\n      return () => {\n        document.removeEventListener(\"mousedown\", handler);\n      };\n    });\n    const [activeFamilyContainer2, activeFamilyDrop2] = useState(false);\n    let familyRef2 = useRef();\n    useEffect(() => {\n      let handler = (event) => {\n        if (!familyRef2.current.contains(event.target)) {\n          activeFamilyDrop2(false);\n        }\n      };\n\n      if (activeFamilyContainer2) document.addEventListener(\"mouseup\", handler);\n      return () => {\n        document.removeEventListener(\"mouseup\", handler);\n      };\n    });\n\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Icon Setting\"} initialOpen={false}>\n          <p>\n            <strong>Choose Icon</strong>\n          </p>\n\n          <div\n            ref={iconReff}\n            className={`wpgt-radio-wrap ${activeIconContainer ? \"active\" : \"\"}`}\n          >\n            <div\n              className=\"selected-icon\"\n              onClick={(e) => {\n                // let set__container = !activeIconContainer;\n                activeIconContainerSet(true);\n              }}\n            >\n              <i className={iconClass}></i>\n              <div className=\"search-container\">\n                <i className=\"fas fa-search\"></i>\n                <input\n                  type=\"text\"\n                  onChange={(e) => {\n                    let value_ = e.target.value;\n                    if (value_ != \"\") {\n                      let newAr = icons_.filter(\n                        (checkStr) => checkStr.search(value_) != -1\n                      );\n                      if (newAr.length) {\n                        setIconList(newAr);\n                      }\n                    } else {\n                      setIconList(icons_);\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            <div\n              className=\"wpgt-radio-container\"\n              onChange={(e) => {\n                setAttributes({ iconClass: e.target.value });\n              }}\n            >\n              {iconList.map((iconValue) => {\n                return (\n                  <div className=\"wpgt-radio-wrapper\">\n                    <input\n                      id={\"wpgt-Radio-\" + iconValue}\n                      type=\"radio\"\n                      name=\"wpgt-choose-icon\"\n                      className=\"radio-input\"\n                      value={iconValue}\n                    />\n                    <label htmlFor={\"wpgt-Radio-\" + iconValue}>\n                      <i className={iconValue}></i>\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <p>\n            <strong>Icon Position</strong>\n          </p>\n          <SelectControl\n            value={titleArrenge} // e.g: value = [ 'a', 'c' ]\n            onChange={(e) => {\n              setAttributes({\n                titleArrenge: e,\n                titleMarginTop: 0,\n                titleMarginRight: 0,\n                titleMarginBottom: 0,\n                titleMarginLeft: 0,\n              });\n            }}\n            options={[\n              { value: null, label: \"Select a User\", disabled: true },\n              { value: \"unset\", label: \"Left\" },\n              { value: \"row-reverse\", label: \"Right\" },\n              { value: \"column\", label: \"Top\" },\n              { value: \"column-reverse\", label: \"Bottom\" },\n            ]}\n          />\n          <p>\n            <strong>Space Between Icon and Title</strong>\n          </p>\n          {titleArrenge == \"column\" && (\n            <RangeControl\n              label={\"Top\"}\n              value={titleMarginTop}\n              min={0}\n              max={200}\n              onChange={(e) => setAttributes({ titleMarginTop: e })}\n            />\n          )}\n          {titleArrenge == \"row-reverse\" && (\n            <RangeControl\n              label={\"Right\"}\n              value={titleMarginRight}\n              min={0}\n              max={200}\n              onChange={(e) => setAttributes({ titleMarginRight: e })}\n            />\n          )}\n          {titleArrenge == \"column-reverse\" && (\n            <RangeControl\n              label={\"Bottom\"}\n              value={titleMarginBottom}\n              min={0}\n              max={200}\n              onChange={(e) => setAttributes({ titleMarginBottom: e })}\n            />\n          )}\n          {titleArrenge == \"unset\" && (\n            <RangeControl\n              label={\"Left\"}\n              value={titleMarginLeft}\n              min={0}\n              max={200}\n              onChange={(e) => setAttributes({ titleMarginLeft: e })}\n            />\n          )}\n\n          <p>\n            <strong>Font Size</strong>\n          </p>\n          <RangeControl\n            value={iconFontsize}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ iconFontsize: e })}\n          />\n          <p>\n            <strong>Border</strong>\n          </p>\n          <ToggleControl\n            label={iconBorder ? \"Disable\" : \"Enable\"}\n            checked={iconBorder}\n            onChange={(e) => setAttributes({ iconBorder: e })}\n          />\n          {iconBorder && (\n            <div className=\"icon-border-setting\">\n              <RangeControl\n                label=\"Border Width\"\n                value={iconBorderWidth}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ iconBorderWidth: e })}\n              />\n              <RangeControl\n                label=\"Border Radius\"\n                value={iconBorderRadius}\n                min={0}\n                max={50}\n                onChange={(e) => setAttributes({ iconBorderRadius: e })}\n              />\n              <p>Border Color</p>\n              <ColorPalette\n                onChange={(color) => setAttributes({ iconBorderColor: color })}\n              />\n              <RangeControl\n                label=\"Icon Space\"\n                value={iconSpace}\n                min={0}\n                max={200}\n                onChange={(e) => setAttributes({ iconSpace: e })}\n              />\n            </div>\n          )}\n        </PanelBody>\n        <PanelBody title={\"Title Setting\"} initialOpen={false}>\n          <ToggleControl\n            label={titleOnOff ? \"Hide\" : \"Show\"}\n            checked={titleOnOff}\n            onChange={(e) => setAttributes({ titleOnOff: e })}\n          />\n          <p>\n            <strong>Choose Tag</strong>\n          </p>\n          <SelectControl\n            value={titleTag} // e.g: value = [ 'a', 'c' ]\n            onChange={(e) => setAttributes({ titleTag: e })}\n            options={[\n              { value: null, label: \"Choose Tag\", disabled: true },\n              { value: \"h1\", label: \"h1\" },\n              { value: \"h2\", label: \"h2\" },\n              { value: \"h3\", label: \"h3\" },\n              { value: \"p\", label: \"p\" },\n            ]}\n          />\n          <p>\n            <strong>Font Size</strong>\n          </p>\n          <RangeControl\n            value={titleFontsize}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ titleFontsize: e })}\n          />\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef2}\n              className={`font-family-drop-down ${\n                activeFamilyContainer2 ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer2;\n                  activeFamilyDrop2(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: titleFF }}>\n                  {titleFF ? titleFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ titleFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n        </PanelBody>\n        <PanelBody title={\"Color Setting\"} initialOpen={false}>\n          <p>\n            <strong>Background Color</strong>\n          </p>\n          <ColorPicker\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ iconBgColor: color });\n            }}\n          />\n          <p>\n            <strong>Icon Color</strong>\n          </p>\n          <ColorPalette\n            onChange={(color) => setAttributes({ iconColor: color })}\n          />\n          <p>\n            <strong>Title Color</strong>\n          </p>\n          <ColorPalette onChange={(e) => setAttributes({ titleColor: e })} />\n        </PanelBody>\n\n        <PanelBody title={\"Container Setting\"} initialOpen={false}>\n          <p>\n            <strong>Padding</strong>\n          </p>\n          <RangeControl\n            label={\"Top & Bottom\"}\n            value={iconPaddingTop}\n            min={0}\n            max={200}\n            onChange={(e) => setAttributes({ iconPaddingTop: e })}\n          />\n          <RangeControl\n            label={\"Left & Right\"}\n            value={iconPaddingRight}\n            min={0}\n            max={200}\n            onChange={(e) => setAttributes({ iconPaddingRight: e })}\n          />\n        </PanelBody>\n      </InspectorControls>,\n      <>\n        <BlockControls>\n          <AlignmentToolbar\n            value={itemAlign}\n            onChange={(e) => {\n              let side =\n                e == \"left\" ? \"left\" : e == \"right\" ? \"flex-end\" : \"center\";\n              setAttributes({ itemAlign: side });\n            }}\n          />\n        </BlockControls>\n        <div\n          className=\"themehunk-icon-block\"\n          style={{\n            \"justify-content\": itemAlign,\n          }}\n        >\n          <div\n            style={{\n              \"flex-direction\": titleArrenge,\n              backgroundColor: iconBgColor,\n              paddingTop: iconPaddingTop + \"px\",\n              paddingRight: iconPaddingRight + \"px\",\n              paddingBottom: iconPaddingTop + \"px\",\n              paddingLeft: iconPaddingRight + \"px\",\n            }}\n          >\n            <div className=\"icon-container\" style={borderStyle}>\n              <i\n                style={{\n                  color: iconColor,\n                  fontSize: iconFontsize + \"px\",\n                }}\n                className={iconClass}\n              ></i>\n            </div>\n            {titleOnOff && (\n              <div className=\"text-container\">\n                <RichText\n                  key=\"editable\"\n                  tagName={titleTag}\n                  placeholder=\"Icon Title\"\n                  value={titleTxt}\n                  onChange={(e) => setAttributes({ titleTxt: e })}\n                  style={{\n                    color: titleColor,\n                    fontSize: titleFontsize + \"px\",\n                    marginTop: titleMarginTop + \"px\",\n                    marginRight: titleMarginRight + \"px\",\n                    marginBottom: titleMarginBottom + \"px\",\n                    marginLeft: titleMarginLeft + \"px\",\n                    fontFamily: titleFF,\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </>,\n    ];\n  },\n  save: ({ attributes }) => {\n    const {\n      iconClass,\n      iconColor,\n      iconBgColor,\n      titleColor,\n      iconFontsize,\n      titleFontsize,\n      titleMarginTop,\n      titleMarginRight,\n      titleMarginBottom,\n      titleMarginLeft,\n      titleTxt,\n      titleArrenge,\n      titleFF,\n      itemAlign,\n      titleOnOff,\n      titleTag,\n      iconBorder,\n      iconBorderWidth,\n      iconBorderRadius,\n      iconBorderColor,\n      iconSpace,\n      iconPaddingTop,\n      iconPaddingRight,\n    } = attributes;\n    let borderStyle = iconBorder\n      ? {\n          borderWidth: iconBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: iconBorderColor,\n          borderRadius: iconBorderRadius + \"%\",\n          width: iconSpace + \"px\",\n          height: iconSpace + \"px\",\n        }\n      : null;\n    // console.log(borderStyle);\n\n    return (\n      <div\n        className=\"themehunk-icon-block\"\n        style={{\n          \"justify-content\": itemAlign,\n        }}\n      >\n        <div\n          style={{\n            \"flex-direction\": titleArrenge,\n            backgroundColor: iconBgColor,\n            paddingTop: iconPaddingTop + \"px\",\n            paddingRight: iconPaddingRight + \"px\",\n            paddingBottom: iconPaddingTop + \"px\",\n            paddingLeft: iconPaddingRight + \"px\",\n          }}\n        >\n          <div className=\"icon-container\" style={borderStyle}>\n            <i\n              style={{\n                color: iconColor,\n                fontSize: iconFontsize + \"px\",\n              }}\n              className={iconClass}\n            ></i>\n          </div>\n          {titleOnOff && (\n            <div className=\"text-container\">\n              <RichText.Content\n                tagName={titleTag}\n                value={titleTxt}\n                style={{\n                  color: titleColor,\n                  fontSize: titleFontsize + \"px\",\n                  marginTop: titleMarginTop + \"px\",\n                  marginRight: titleMarginRight + \"px\",\n                  marginBottom: titleMarginBottom + \"px\",\n                  marginLeft: titleMarginLeft + \"px\",\n                  fontFamily: titleFF,\n                }}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  },\n});\n","// extracted by mini-css-extract-plugin","import \"./parent\";\nimport \"./editor.scss\";\nimport fontFamily from \"../block-assets/font-family\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport {\n  RichText,\n  InspectorControls,\n  ColorPalette,\n} from \"@wordpress/block-editor\";\n\nimport { useState, useRef, useEffect } from \"@wordpress/element\";\nimport {\n  PanelBody,\n  RangeControl,\n  ColorPicker,\n  ToggleControl,\n} from \"@wordpress/components\";\nconst attrS = {\n  headingTxt: {\n    type: \"string\",\n    default: \"Basic\",\n  },\n  headingFontSize: {\n    type: \"number\",\n    default: 29,\n  },\n  headingColor: {\n    type: \"string\",\n    default: \"#ffffff\",\n  },\n  headingFF: {\n    type: \"string\",\n  },\n  headingDescription: {\n    type: \"string\",\n  },\n  headerBackground: {\n    type: \"string\",\n    default: \"#5f5f5f\",\n  },\n  descriptionColor: {\n    type: \"string\",\n    default: \"grey\",\n  },\n  descriptionFontSize: {\n    type: \"number\",\n  },\n  descriptionFF: {\n    type: \"string\",\n  },\n  middleTxt: {\n    type: \"string\",\n    default:\n      \"<p>Email Marketing</p><p>Email Builder</p><p>Client Testing</p><p>2 User Free</p><p>Multiple Email Support</p>\",\n  },\n  pointsColor: {\n    type: \"string\",\n    default: \"white\",\n  },\n  middleBgColor: {\n    type: \"string\",\n    default: \"#2B2B2B\",\n  },\n  pointsFontSize: {\n    type: \"number\",\n    default: 16,\n  },\n  pointsSpaceBw: {\n    type: \"number\",\n    default: 24,\n  },\n  pointAlign: {\n    type: \"string\",\n    default: \"center\",\n  },\n  pointsFF: {\n    type: \"string\",\n  },\n  currencyC: { type: \"string\", default: \"$\" },\n  // currencyColor: { type: \"string\" },\n  currencyFs: { type: \"number\", default: 16 },\n  priceMonth: {\n    type: \"string\",\n    default: \"99\",\n  },\n  currencyFormate: {\n    type: \"boolean\",\n    default: true,\n  },\n  currencyFontWeight: { type: \"string\" },\n  priceMonthPrice: {\n    type: \"string\",\n    default: \"/ month\",\n  },\n  priceMonthPriceFs: {\n    type: \"string\",\n  },\n  priceMonthPriceColor: {\n    type: \"string\",\n    default: \"#c2c4c4\",\n  },\n  pricePosition: {\n    type: \"string\",\n    default: \"top\",\n  },\n  priceFontSize: {\n    type: \"number\",\n    default: 50,\n  },\n  priceColor: {\n    type: \"string\",\n    default: \"#ffffff\",\n  },\n  priceBgColor: {\n    type: \"string\",\n  },\n  priceFF: {\n    type: \"string\",\n  },\n  priceInline: { type: \"boolean\", default: true },\n  pricePadding: { type: \"number\", default: 0 },\n  priceBorder: { type: \"boolean\", default: false },\n  priceBorderWidth: {\n    type: \"number\",\n    default: 2,\n  },\n  priceBorderRadius: {\n    type: \"number\",\n    default: 50,\n  },\n  priceBorderColor: {\n    type: \"string\",\n    default: \"#ffa600\",\n  },\n  priceSpace: {\n    type: \"number\",\n    default: 100,\n  },\n  linkTxt: {\n    type: \"string\",\n    default: \"ORDER NOW\",\n  },\n  linkLink: {\n    type: \"string\",\n    default: \"#\",\n  },\n  linkTarget: {\n    type: \"boolean\",\n    default: false,\n  },\n  linkColor: {\n    type: \"string\",\n  },\n  linkBgColor: {\n    type: \"string\",\n    default: \"#f1b426\",\n  },\n  linkFontSize: {\n    type: \"number\",\n  },\n  linkBorder: { type: \"boolean\", default: false },\n  linkBorderWidth: { type: \"number\", default: 1 },\n  linkBorderRadius: { type: \"number\", default: 2 },\n  linkBorderColor: { type: \"string\" },\n  linkSpaceV: { type: \"number\", default: 14 },\n  linkSpaceH: { type: \"number\", default: 45 },\n  bottomTxt: {\n    type: \"string\",\n    default: \"Terms & Conditions\",\n  },\n  bottomTxtColor: {\n    type: \"string\",\n    default: \"white\",\n  },\n  bottomTxtFontSize: {\n    type: \"number\",\n  },\n  bottomTxtFF: {\n    type: \"string\",\n  },\n  footerBgColor: { type: \"string\", default: \"#2B2B2B\" },\n  // containerBgColor: {\n  //   type: \"string\",\n  // },\n  containerBorder: {\n    type: \"boolean\",\n    default: false,\n  },\n  containerBorderWidth: {\n    type: \"number\",\n  },\n  containerBorderRadius: {\n    type: \"number\",\n  },\n  containerBorderColor: {\n    type: \"string\",\n  },\n};\n\nregisterBlockType(\"zita-blocks/pricing-table-table\", {\n  title: \"Price Table Colomn\",\n  icon: \"table-col-before\",\n  category: \"zita-category\",\n  parent: [\"zita-blocks/pricing-table-section\"],\n  keywords: [\"price\", \"pricebox\"],\n  attributes: attrS,\n  edit: (props) => {\n    const { attributes, setAttributes } = props;\n    const {\n      headerBackground,\n      headingTxt,\n      headingFontSize,\n      headingColor,\n      headingFF,\n      headingDescription,\n      descriptionColor,\n      descriptionFontSize,\n      descriptionFF,\n      middleTxt,\n      middleBgColor,\n      pointsColor,\n      pointsFontSize,\n      pointsSpaceBw,\n      pointsFF,\n      pointAlign,\n      priceMonth,\n      priceMonthPrice,\n      priceMonthPriceFs,\n      priceMonthPriceColor,\n      pricePosition,\n      priceFontSize,\n      priceColor,\n      priceBgColor,\n      priceFF,\n      priceInline,\n      currencyFontWeight,\n      priceBorder,\n      priceBorderWidth,\n      priceBorderRadius,\n      priceBorderColor,\n      priceSpace,\n      priceSpaceV,\n      priceSpaceH,\n      currencyC,\n      // currencyColor,\n      currencyFs,\n      currencyFormate,\n\n      linkTxt,\n      linkLink,\n      linkTarget,\n      linkColor,\n      linkBgColor,\n      linkFontSize,\n      linkBorder,\n      linkBorderWidth,\n      linkBorderRadius,\n      linkBorderColor,\n      linkSpaceH,\n      linkSpaceV,\n      bottomTxt,\n      bottomTxtColor,\n      bottomTxtFontSize,\n      bottomTxtFF,\n      footerBgColor,\n      // container\n      // containerBgColor,\n      containerBorder,\n      containerBorderWidth,\n      containerBorderRadius,\n      containerBorderColor,\n    } = attributes;\n    let containerBorderStyle = containerBorder\n      ? {\n          borderWidth: containerBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: containerBorderColor,\n          borderRadius: containerBorderRadius + \"px\",\n        }\n      : {};\n    // containerBorderStyle = containerBgColor\n    //   ? {\n    //       ...containerBorderStyle,\n    //       ...{\n    //         backgroundColor: containerBgColor,\n    //       },\n    //     }\n    //   : containerBorderStyle;\n    // price style\n    let priceStyle = {\n      backgroundColor: priceBgColor,\n      fontFamily: priceFF,\n      fontWeight: currencyFontWeight,\n    };\n\n    if (priceBorder)\n      priceStyle = {\n        ...priceStyle,\n        ...{\n          borderWidth: priceBorderWidth + \"px\",\n          borderRadius: priceBorderRadius + (!priceInline ? \"%\" : \"px\"),\n          borderColor: priceBorderColor,\n          borderStyle: \"solid\",\n        },\n      };\n    if (!priceInline) {\n      priceStyle = {\n        ...priceStyle,\n        ...{\n          height: priceSpace + \"px\",\n          width: priceSpace + \"px\",\n        },\n      };\n    } else {\n      priceStyle = {\n        ...priceStyle,\n        ...{\n          paddingTop: priceSpaceV + \"px\",\n          paddingBottom: priceSpaceV + \"px\",\n          paddingLeft: priceSpaceH + \"px\",\n          paddingRight: priceSpaceH + \"px\",\n        },\n      };\n    }\n\n    let link_style = {\n      color: linkColor,\n      backgroundColor: linkBgColor,\n      fontSize: linkFontSize + \"px\",\n      paddingLeft: linkSpaceH + \"px\",\n      paddingRight: linkSpaceH + \"px\",\n      paddingTop: linkSpaceV + \"px\",\n      paddingBottom: linkSpaceV + \"px\",\n    };\n    link_style = linkBorder\n      ? {\n          ...{\n            borderWidth: linkBorderWidth + \"px\",\n            borderRadius: linkBorderRadius + \"px\",\n            borderStyle: \"solid\",\n            borderColor: linkBorderColor,\n          },\n          ...link_style,\n        }\n      : link_style;\n\n    // one\n    const [activeFamilyContainer, activeFamilyDrop] = useState(false);\n    let familyRef = useRef();\n    useEffect(() => {\n      let handler = (event) => {\n        if (!familyRef.current.contains(event.target)) {\n          activeFamilyDrop(false);\n        }\n      };\n\n      if (activeFamilyContainer) document.addEventListener(\"mouseup\", handler);\n      return () => {\n        document.removeEventListener(\"mouseup\", handler);\n      };\n    });\n    // two\n    const [activeFamilyContainer2, activeFamilyDrop2] = useState(false);\n    let familyRef2 = useRef();\n    useEffect(() => {\n      let handler = (event) => {\n        if (!familyRef2.current.contains(event.target)) {\n          activeFamilyDrop2(false);\n        }\n      };\n\n      if (activeFamilyContainer2) document.addEventListener(\"mouseup\", handler);\n      return () => {\n        document.removeEventListener(\"mouseup\", handler);\n      };\n    });\n\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Header Section\"} initialOpen={false}>\n          <p className=\"block-inside\">Header Setting</p>\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef}\n              className={`font-family-drop-down ${\n                activeFamilyContainer ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer;\n                  activeFamilyDrop(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: headingFF }}>\n                  {headingFF ? headingFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ headingFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={headingColor}\n            onChange={(color) => setAttributes({ headingColor: color })}\n          />\n          <RangeControl\n            label=\"Font Size\"\n            value={headingFontSize}\n            min={0}\n            max={60}\n            onChange={(e) => setAttributes({ headingFontSize: e })}\n          />\n          <p className=\"block-inside\">Short Description</p>\n\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef2}\n              className={`font-family-drop-down ${\n                activeFamilyContainer2 ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer2;\n                  activeFamilyDrop2(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: descriptionFF }}>\n                  {descriptionFF ? descriptionFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ descriptionFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n\n          <RangeControl\n            label=\"Font Size\"\n            value={descriptionFontSize}\n            min={0}\n            max={60}\n            onChange={(e) => setAttributes({ descriptionFontSize: e })}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={descriptionColor}\n            onChange={(color) => setAttributes({ descriptionColor: color })}\n          />\n          <p className=\"block-inside\">Background Color</p>\n          <ColorPicker\n            color={headerBackground}\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ headerBackground: color });\n            }}\n          />\n        </PanelBody>\n        <PanelBody title={\"Price Setting\"} initialOpen={false}>\n          <p className=\"block-inside\">Position</p>\n          <div className=\"column-layout-num-column text_\">\n            <div>\n              <input\n                type=\"radio\"\n                name=\"price-position\"\n                id=\"price-position-top\"\n                checked={pricePosition == \"top\" ? true : false}\n                onChange={() => setAttributes({ pricePosition: \"top\" })}\n              />\n              <label for=\"price-position-top\">Top</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                name=\"price-position\"\n                id=\"price-position-bottom\"\n                checked={pricePosition == \"bottom\" ? true : false}\n                onChange={() => setAttributes({ pricePosition: \"bottom\" })}\n              />\n              <label for=\"price-position-bottom\">Bottom</label>\n            </div>\n          </div>\n          <p className=\"block-inside\">Price</p>\n          <div className=\"flex-section\">\n            <p>Price</p>\n            <input\n              type=\"number\"\n              value={priceMonth}\n              onChange={(e) => {\n                setAttributes({ priceMonth: e.target.value });\n              }}\n            />\n          </div>\n          <p>Color</p>\n          <ColorPalette\n            value={priceColor}\n            onChange={(color) => setAttributes({ priceColor: color })}\n          />\n          <RangeControl\n            label=\"Font Size\"\n            value={priceFontSize}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ priceFontSize: e })}\n          />\n          <p className=\"block-inside\">Currency</p>\n\n          <div className=\"flex-section\">\n            <p>Currency</p>\n            <select\n              value={currencyC}\n              onChange={(e) => {\n                setAttributes({ currencyC: e.target.value });\n              }}\n            >\n              {[\n                [\"$\", \"Dollar\"],\n                [\"€\", \"Euro\"],\n                [\"฿\", \"Baht\"],\n                [\"₣\", \"Franc\"],\n                [\"ƒ\", \"Guilder\"],\n                [\"kr\", \"Krona\"],\n                [\"₤\", \"Lira\"],\n                [\"₹\", \"Rupee (Indian)\"],\n                [\"₧\", \"Peseta\"],\n                [\"₱\", \"Peso\"],\n                [\"£\", \"Pound Sterling\"],\n                [\"R$\", \"Real\"],\n                [\"₽\", \"Ruble\"],\n                [\"₨\", \"Rupee\"],\n                [\"₪\", \"Shekel\"],\n                [\"¥\", \"Yen/Yuan\"],\n                [\"₩\", \"Won\"],\n                [\"\", \"Custom\"],\n              ].map((v) => (\n                <option value={v[0]}>{v[0] + \" \" + v[1]}</option>\n              ))}\n            </select>\n          </div>\n          {/* <p>Color</p>\n          <ColorPalette\n            value={currencyColor}\n            onChange={(color) => setAttributes({ currencyColor: color })}\n          />*/}\n          <RangeControl\n            label=\"Font Size\"\n            value={currencyFs}\n            min={0}\n            max={60}\n            onChange={(e) => setAttributes({ currencyFs: e })}\n          />\n          <div className=\"flex-section\">\n            <p>Formate</p>\n            <select\n              value={currencyFormate}\n              onChange={(e) => {\n                let raised = e.target.value == 1 ? true : false;\n                setAttributes({ currencyFormate: raised });\n                if (raised) setAttributes({ currencyFs: 8 });\n              }}\n            >\n              <option value=\"0\">Normal</option>\n              <option value=\"1\">Rasied</option>\n            </select>\n          </div>\n          <p className=\"block-inside\">Text</p>\n\n          <div className=\"flex-section\">\n            <p>Enter Text</p>\n            <input\n              type=\"text\"\n              value={priceMonthPrice}\n              onChange={(e) => {\n                setAttributes({ priceMonthPrice: e.target.value });\n              }}\n            />\n          </div>\n          <p>Color</p>\n          <ColorPalette\n            value={priceMonthPriceColor}\n            onChange={(color) => setAttributes({ priceMonthPriceColor: color })}\n          />\n          <RangeControl\n            label=\"Font Size\"\n            value={priceMonthPriceFs}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ priceMonthPriceFs: e })}\n          />\n\n          <p className=\"block-inside\">Advance Setting</p>\n          <p>Layout</p>\n          <div className=\"column-layout-num-column text_\">\n            <div>\n              <input\n                type=\"radio\"\n                id=\"price-layout-rounded\"\n                name=\"price-layout\"\n                checked={!priceInline ? true : false}\n                onChange={() => setAttributes({ priceInline: false })}\n              />\n              <label for=\"price-layout-rounded\">Rounded</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                id=\"price-layout-box\"\n                name=\"price-layout\"\n                checked={priceInline ? true : false}\n                onChange={() => setAttributes({ priceInline: true })}\n              />\n              <label for=\"price-layout-box\">Box</label>\n            </div>\n          </div>\n\n          {!priceInline && (\n            <RangeControl\n              label=\"Price Space\"\n              value={priceSpace}\n              min={0}\n              max={200}\n              onChange={(e) => setAttributes({ priceSpace: e })}\n            />\n          )}\n          {priceInline && (\n            <>\n              <RangeControl\n                label=\"Top/Bottom\"\n                value={priceSpaceV}\n                min={0}\n                max={200}\n                onChange={(e) => setAttributes({ priceSpaceV: e })}\n              />\n              <RangeControl\n                label=\"Left/Right\"\n                value={priceSpaceH}\n                min={0}\n                max={200}\n                onChange={(e) => setAttributes({ priceSpaceH: e })}\n              />\n            </>\n          )}\n\n          <p>\n            <strong>Border</strong>\n          </p>\n\n          <ToggleControl\n            label={priceBorder ? \"Disable\" : \"Enable\"}\n            checked={priceBorder}\n            onChange={(e) => setAttributes({ priceBorder: e })}\n          />\n          {priceBorder && (\n            <div className=\"icon-border-setting\">\n              <RangeControl\n                label=\"Border Width\"\n                value={priceBorderWidth}\n                min={0}\n                max={20}\n                onChange={(e) => setAttributes({ priceBorderWidth: e })}\n              />\n              <RangeControl\n                label=\"Border Radius\"\n                value={priceBorderRadius}\n                min={0}\n                max={50}\n                onChange={(e) => setAttributes({ priceBorderRadius: e })}\n              />\n              <p>Border Color</p>\n              <ColorPalette\n                value={priceBorderColor}\n                onChange={(color) => setAttributes({ priceBorderColor: color })}\n              />\n            </div>\n          )}\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef}\n              className={`font-family-drop-down ${\n                activeFamilyContainer ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                ref={familyRef}\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer;\n                  activeFamilyDrop(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: priceFF }}>\n                  {priceFF ? priceFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ priceFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n          {/* font weight */}\n          <div className=\"flex-section\">\n            <p>Font Weight</p>\n            <select\n              value={currencyFontWeight}\n              onChange={(e) => {\n                setAttributes({ currencyFontWeight: e.target.value })}}\n            >\n              <option value=\"400\">400</option>\n              <option value=\"500\">500</option>\n              <option value=\"700\">700</option>\n              <option value=\"900\">900</option>\n              <option value=\"bold\">Bold</option>\n              <option value=\"bolder\">Bolder</option>\n            </select>\n          </div>\n          {/* font weight */}\n          <p>\n            <strong>Background Color</strong>\n          </p>\n          <ColorPicker\n            color={priceBgColor}\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ priceBgColor: color });\n            }}\n          />\n        </PanelBody>\n        <PanelBody title={\"Middle Section\"} initialOpen={false}>\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef}\n              className={`font-family-drop-down ${\n                activeFamilyContainer ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                ref={familyRef}\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer;\n                  activeFamilyDrop(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: pointsFF }}>\n                  {pointsFF ? pointsFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ pointsFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n\n          <RangeControl\n            label=\"Font Size\"\n            value={pointsFontSize}\n            min={0}\n            max={60}\n            onChange={(e) => setAttributes({ pointsFontSize: e })}\n          />\n          <RangeControl\n            label=\"Space Between Text\"\n            value={pointsSpaceBw}\n            min={0}\n            max={60}\n            onChange={(e) => setAttributes({ pointsSpaceBw: e })}\n          />\n          <p>\n            <strong>Text Align</strong>\n          </p>\n          <div className=\"column-layout-num-column text_\">\n            <div>\n              <input\n                type=\"radio\"\n                name=\"points-align\"\n                id=\"points-align-top\"\n                checked={pointAlign == \"left\" ? true : false}\n                onChange={() => setAttributes({ pointAlign: \"left\" })}\n              />\n              <label for=\"points-align-top\">Left</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                name=\"points-align\"\n                id=\"points-align-bottom\"\n                checked={pointAlign == \"center\" ? true : false}\n                onChange={() => setAttributes({ pointAlign: \"center\" })}\n              />\n              <label for=\"points-align-bottom\">Center</label>\n            </div>\n          </div>\n\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={pointsColor}\n            onChange={(color) => setAttributes({ pointsColor: color })}\n          />\n          <p>\n            <strong>Background Color</strong>\n          </p>\n          <ColorPicker\n            color={middleBgColor}\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ middleBgColor: color });\n            }}\n          />\n        </PanelBody>\n\n        <PanelBody title={\"Button Section\"} initialOpen={false}>\n          <p className=\"block-inside\">Button</p>\n          <RangeControl\n            label=\"Font Size\"\n            value={linkFontSize}\n            min={0}\n            max={70}\n            onChange={(e) => setAttributes({ linkFontSize: e })}\n          />\n          <p>Color</p>\n          <ColorPalette\n            value={linkColor}\n            onChange={(color) => setAttributes({ linkColor: color })}\n          />\n          <p>Background Color</p>\n          <ColorPalette\n            value={linkBgColor}\n            onChange={(color) => setAttributes({ linkBgColor: color })}\n          />\n          <RangeControl\n            label=\"Height\"\n            value={linkSpaceV}\n            min={0}\n            max={200}\n            onChange={(e) => setAttributes({ linkSpaceV: e })}\n          />\n          <RangeControl\n            label=\"Width\"\n            value={linkSpaceH}\n            min={0}\n            max={200}\n            onChange={(e) => setAttributes({ linkSpaceH: e })}\n          />\n          <p>\n            <strong>Border</strong>\n          </p>\n          <ToggleControl\n            label={linkBorder ? \"Disable\" : \"Enable\"}\n            checked={linkBorder}\n            onChange={(e) => setAttributes({ linkBorder: e })}\n          />\n          {linkBorder && (\n            <div className=\"icon-border-setting\">\n              <RangeControl\n                label=\"Border Width\"\n                value={linkBorderWidth}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ linkBorderWidth: e })}\n              />\n              <RangeControl\n                label=\"Border Radius\"\n                value={linkBorderRadius}\n                min={0}\n                max={50}\n                onChange={(e) => setAttributes({ linkBorderRadius: e })}\n              />\n              <p>Border Color</p>\n              <ColorPalette\n                value={linkBorderColor}\n                onChange={(color) => setAttributes({ linkBorderColor: color })}\n              />\n            </div>\n          )}\n\n          <p className=\"block-inside\">Small Text</p>\n          <RangeControl\n            label=\"Font Size\"\n            value={bottomTxtFontSize}\n            min={0}\n            max={70}\n            onChange={(e) => setAttributes({ bottomTxtFontSize: e })}\n          />\n          <p>Color</p>\n          <ColorPalette\n            value={bottomTxtColor}\n            onChange={(color) => setAttributes({ bottomTxtColor: color })}\n          />\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef}\n              className={`font-family-drop-down ${\n                activeFamilyContainer ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                ref={familyRef}\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer;\n                  activeFamilyDrop(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: bottomTxtFF }}>\n                  {bottomTxtFF ? bottomTxtFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ bottomTxtFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n          <p className=\"block-inside\">Background Color</p>\n          <ColorPicker\n            color={footerBgColor}\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ footerBgColor: color });\n            }}\n          />\n        </PanelBody>\n\n        <PanelBody title={\"Container Settings\"} initialOpen={false}>\n          {/* <ColorPicker\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ containerBgColor: color });\n            }}\n          /> */}\n          <p>\n            <strong>Border</strong>\n          </p>\n          <ToggleControl\n            label={containerBorder ? \"Disable\" : \"Enable\"}\n            checked={containerBorder}\n            onChange={(e) => setAttributes({ containerBorder: e })}\n          />\n          {containerBorder && (\n            <div className=\"icon-border-setting\">\n              <RangeControl\n                label=\"Border Width\"\n                value={containerBorderWidth}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ containerBorderWidth: e })}\n              />\n              <RangeControl\n                label=\"Border Radius\"\n                value={containerBorderRadius}\n                min={0}\n                max={50}\n                onChange={(e) => setAttributes({ containerBorderRadius: e })}\n              />\n              <p>Border Color</p>\n              <ColorPalette\n                value={containerBorderColor}\n                onChange={(color) =>\n                  setAttributes({ containerBorderColor: color })\n                }\n              />\n            </div>\n          )}\n        </PanelBody>\n      </InspectorControls>,\n      <div className=\"pricing-table-wrapper\" style={containerBorderStyle}>\n        <div\n          style={{ backgroundColor: headerBackground }}\n          className=\"pricing-table-top\"\n          style={{ backgroundColor: headerBackground }}\n        >\n          <RichText\n            key=\"editable\"\n            tagName=\"h3\"\n            placeholder=\"Pricing Table\"\n            value={headingTxt}\n            style={{\n              fontSize: headingFontSize + \"px\",\n              color: headingColor,\n              fontFamily: headingFF,\n            }}\n            onChange={(e) => setAttributes({ headingTxt: e })}\n          />\n          {pricePosition == \"top\" && (\n            <div\n              className={`price_ ${priceInline ? \"inline_\" : \"box_\"}`}\n              style={priceStyle}\n            >\n              <div\n                style={{ color: priceColor }}\n                className={currencyFormate ? \"rasied\" : \"\"}\n              >\n                <p style={{ fontSize: currencyFs }}>{currencyC}</p>\n                <p style={{ fontSize: priceFontSize + \"px\" }}>{priceMonth}</p>\n              </div>\n              <p\n                style={{\n                  fontSize: priceMonthPriceFs + \"px\",\n                  color: priceMonthPriceColor,\n                }}\n              >\n                {priceMonthPrice}\n              </p>\n            </div>\n          )}\n          <RichText\n            key=\"editable\"\n            tagName=\"p\"\n            style={{\n              fontSize: descriptionFontSize + \"px\",\n              color: descriptionColor,\n              fontFamily: descriptionFF,\n            }}\n            value={headingDescription}\n            onChange={(e) => setAttributes({ headingDescription: e })}\n          />\n        </div>\n        <div\n          className=\"pricing-table-middle\"\n          style={{ backgroundColor: middleBgColor }}\n        >\n          <RichText\n            key=\"editable\"\n            tagName=\"div\"\n            placeholder=\"Pricing Description\"\n            multiline=\"p\"\n            style={{\n              fontSize: pointsFontSize + \"px\",\n              color: pointsColor,\n              fontFamily: pointsFF,\n              marginTop: pointsSpaceBw + \"px\",\n              marginBottom: pointsSpaceBw + \"px\",\n              textAlign: pointAlign,\n            }}\n            value={middleTxt}\n            onChange={(e) => {\n              setAttributes({ middleTxt: e });\n            }}\n          />\n        </div>\n        <div\n          className=\"pricing-table-bottom\"\n          style={{ backgroundColor: footerBgColor }}\n        >\n          {pricePosition == \"bottom\" && (\n            <div\n              className={`price_ ${priceInline ? \"inline_\" : \"box_\"}`}\n              style={priceStyle}\n            >\n              <div\n                style={{ color: priceColor }}\n                className={currencyFormate ? \"rasied\" : \"\"}\n              >\n                <p style={{ fontSize: currencyFs }}>{currencyC}</p>\n                <p style={{ fontSize: priceFontSize + \"px\" }}>{priceMonth}</p>\n              </div>\n              <p\n                style={{\n                  fontSize: priceMonthPriceFs + \"px\",\n                  color: priceMonthPriceColor,\n                }}\n              >\n                {priceMonthPrice}\n              </p>\n            </div>\n          )}\n          <div className=\"link_button\">\n            <RichText\n              key=\"editable\"\n              tagName=\"a\"\n              placeholder=\"Click Me\"\n              value={linkTxt}\n              onChange={(e) => setAttributes({ linkTxt: e })}\n              style={link_style}\n            />\n          </div>\n          <RichText\n            className=\"bottom-text\"\n            key=\"editable\"\n            tagName=\"p\"\n            placeholder=\"Price\"\n            value={bottomTxt}\n            onChange={(e) => setAttributes({ bottomTxt: e })}\n            style={{\n              color: bottomTxtColor,\n              fontSize: bottomTxtFontSize + \"px\",\n              fontFamily: bottomTxtFF,\n            }}\n          />\n        </div>\n      </div>,\n    ];\n  },\n  save: (props) => {\n    const {\n      headerBackground,\n      headingTxt,\n      headingFontSize,\n      headingColor,\n      headingFF,\n      headingDescription,\n      descriptionColor,\n      descriptionFontSize,\n      descriptionFF,\n      middleTxt,\n      middleBgColor,\n      pointsColor,\n      pointsFontSize,\n      pointAlign,\n      pointsSpaceBw,\n      pointsFF,\n      priceMonth,\n      priceMonthPrice,\n      priceMonthPriceFs,\n      priceMonthPriceColor,\n      pricePosition,\n      priceFontSize,\n      priceColor,\n      priceBgColor,\n      priceFF,\n      priceInline,\n      currencyFontWeight,\n      priceBorder,\n      priceBorderWidth,\n      priceBorderRadius,\n      priceBorderColor,\n      priceSpace,\n      priceSpaceV,\n      priceSpaceH,\n      currencyC,\n      // currencyColor,\n      currencyFs,\n      currencyFormate,\n\n      linkTxt,\n      linkLink,\n      linkTarget,\n      linkColor,\n      linkBgColor,\n      linkFontSize,\n      linkBorder,\n      linkBorderWidth,\n      linkBorderRadius,\n      linkBorderColor,\n      linkSpaceH,\n      linkSpaceV,\n      bottomTxt,\n      bottomTxtColor,\n      bottomTxtFontSize,\n      bottomTxtFF,\n      footerBgColor,\n      // container\n      // containerBgColor,\n      containerBorder,\n      containerBorderWidth,\n      containerBorderRadius,\n      containerBorderColor,\n    } = props.attributes;\n\n    let containerBorderStyle = containerBorder\n      ? {\n          borderWidth: containerBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: containerBorderColor,\n          borderRadius: containerBorderRadius + \"px\",\n        }\n      : {};\n    // price style\n    let priceStyle = {\n      backgroundColor: priceBgColor,\n      fontFamily: priceFF,\n      fontWeight: currencyFontWeight,\n    };\n    if (priceBorder)\n      priceStyle = {\n        ...priceStyle,\n        ...{\n          borderWidth: priceBorderWidth + \"px\",\n          borderRadius: priceBorderRadius + (!priceInline ? \"%\" : \"px\"),\n          borderColor: priceBorderColor,\n          borderStyle: \"solid\",\n        },\n      };\n    if (!priceInline) {\n      priceStyle = {\n        ...priceStyle,\n        ...{\n          height: priceSpace + \"px\",\n          width: priceSpace + \"px\",\n        },\n      };\n    } else {\n      priceStyle = {\n        ...priceStyle,\n        ...{\n          paddingTop: priceSpaceV + \"px\",\n          paddingBottom: priceSpaceV + \"px\",\n          paddingLeft: priceSpaceH + \"px\",\n          paddingRight: priceSpaceH + \"px\",\n        },\n      };\n    }\n    let link_style = {\n      color: linkColor,\n      backgroundColor: linkBgColor,\n      fontSize: linkFontSize + \"px\",\n      paddingLeft: linkSpaceH + \"px\",\n      paddingRight: linkSpaceH + \"px\",\n      paddingTop: linkSpaceV + \"px\",\n      paddingBottom: linkSpaceV + \"px\",\n    };\n    link_style = linkBorder\n      ? {\n          ...{\n            borderWidth: linkBorderWidth + \"px\",\n            borderRadius: linkBorderRadius + \"px\",\n            borderStyle: \"solid\",\n            borderColor: linkBorderColor,\n          },\n          ...link_style,\n        }\n      : link_style;\n\n    return (\n      <div className=\"pricing-table-wrapper\" style={containerBorderStyle}>\n        <div\n          style={{ backgroundColor: headerBackground }}\n          className=\"pricing-table-top\"\n          style={{ backgroundColor: headerBackground }}\n        >\n          <RichText.Content\n            tagName=\"h3\"\n            value={headingTxt}\n            style={{\n              fontSize: headingFontSize + \"px\",\n              color: headingColor,\n              fontFamily: headingFF,\n            }}\n          />\n          {pricePosition == \"top\" && (\n            <div\n              className={`price_ ${priceInline ? \"inline_\" : \"box_\"}`}\n              style={priceStyle}\n            >\n              <div\n                style={{ color: priceColor }}\n                className={currencyFormate ? \"rasied\" : \"\"}\n              >\n                <p style={{ fontSize: currencyFs }}>{currencyC}</p>\n                <p style={{ fontSize: priceFontSize + \"px\" }}>{priceMonth}</p>\n              </div>\n              <p\n                style={{\n                  fontSize: priceMonthPriceFs + \"px\",\n                  color: priceMonthPriceColor,\n                }}\n              >\n                {priceMonthPrice}\n              </p>\n            </div>\n          )}\n          <RichText.Content\n            tagName=\"p\"\n            style={{\n              fontSize: descriptionFontSize + \"px\",\n              color: descriptionColor,\n              fontFamily: descriptionFF,\n            }}\n            value={headingDescription}\n          />\n        </div>\n        <div\n          className=\"pricing-table-middle\"\n          style={{ backgroundColor: middleBgColor }}\n        >\n          <RichText.Content\n            tagName=\"div\"\n            multiline=\"p\"\n            style={{\n              fontSize: pointsFontSize + \"px\",\n              color: pointsColor,\n              fontFamily: pointsFF,\n              marginTop: pointsSpaceBw + \"px\",\n              marginBottom: pointsSpaceBw + \"px\",\n              textAlign: pointAlign,\n            }}\n            value={middleTxt}\n          />\n        </div>\n        <div\n          className=\"pricing-table-bottom\"\n          style={{ backgroundColor: footerBgColor }}\n        >\n          {pricePosition == \"bottom\" && (\n            <div\n              className={`price_ ${priceInline ? \"inline_\" : \"box_\"}`}\n              style={priceStyle}\n            >\n              <div\n                style={{ color: priceColor }}\n                className={currencyFormate ? \"rasied\" : \"\"}\n              >\n                <p style={{ fontSize: currencyFs }}>{currencyC}</p>\n                <p style={{ fontSize: priceFontSize + \"px\" }}>{priceMonth}</p>\n              </div>\n              <p\n                style={{\n                  fontSize: priceMonthPriceFs + \"px\",\n                  color: priceMonthPriceColor,\n                }}\n              >\n                {priceMonthPrice}\n              </p>\n            </div>\n          )}\n          <div className=\"link_button\">\n            <RichText.Content tagName=\"a\" value={linkTxt} style={link_style} />\n          </div>\n          <RichText.Content\n            className=\"bottom-text\"\n            tagName=\"p\"\n            value={bottomTxt}\n            style={{\n              color: bottomTxtColor,\n              fontSize: bottomTxtFontSize + \"px\",\n              fontFamily: bottomTxtFF,\n            }}\n          />\n        </div>\n      </div>\n    );\n  },\n});\n","import { registerBlockType } from \"@wordpress/blocks\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl, ColorPicker } from \"@wordpress/components\";\n\nregisterBlockType(\"zita-blocks/pricing-table-section\", {\n  title: \"Pricing Table\",\n  icon: \"table-col-before\",\n  // description: \"Pricing Table\",\n  category: \"zita-category\",\n  supports: {\n    align: [\"center\", \"left\", \"right\", \"wide\", \"full\"],\n  },\n  getEditWrapperProps(attributes) {\n    // return { \"data-align\": \"wide\" };\n  },\n  attributes: {\n    align: {\n      type: \"string\",\n      default: \"wide\",\n    },\n    columns: {\n      type: \"number\",\n      default: 2,\n    },\n    fullWidth: {\n      type: \"string\",\n      default: \"\",\n    },\n  },\n  edit: (props) => {\n    // console.log(props);\n\n    const { className, attributes, setAttributes } = props;\n    const { columns, fullWidth } = attributes;\n    const MY_TEMPLATE = [\n      [\"zita-blocks/pricing-table-table\"],\n      [\n        \"zita-blocks/pricing-table-table\",\n        {\n          headingTxt: \"Advance\",\n          priceMonth: \"159\",\n          middleTxt:\n            \"<p>Email Marketing</p><p>Email Builder</p><p>Client Testing</p><p>10 User Free</p><p>Multiple Email Support</p>\",\n        },\n      ],\n    ];\n\n    return [\n      <InspectorControls>\n        <PanelBody>\n          <RangeControl\n            label=\"Number Of Column\"\n            value={columns}\n            onChange={(v) => {\n              setAttributes({ columns: v });\n            }}\n            min={1}\n            max={4}\n          />\n          <p>\n            <strong>Column Layout</strong>\n          </p>\n          <div className=\"column-layout-num-column\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"box\"\n                name=\"column-layout\"\n                id=\"column-layout-box\"\n                onChange={() => setAttributes({ fullWidth: \"\" })}\n              />\n              <label for=\"column-layout-box\">\n                <img src={plugin_url.url + \"assets/img/box-layout.png\"} />\n              </label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"full\"\n                name=\"column-layout\"\n                id=\"column-layout-full\"\n                onChange={() => setAttributes({ fullWidth: \"full-width\" })}\n              />\n              <label for=\"column-layout-full\">\n                <img src={plugin_url.url + \"assets/img/100percent.png\"} />\n              </label>\n            </div>\n          </div>\n        </PanelBody>\n      </InspectorControls>,\n      <div className={`${className} ${fullWidth} column-count-${columns} `}>\n        <InnerBlocks\n          template={MY_TEMPLATE}\n          allowedBlocks={[\"zita-blocks/pricing-table-table\"]}\n        />\n      </div>,\n    ];\n  },\n  save: (props) => {\n    // const { attributes } = props;\n    const { columns, fullWidth } = props.attributes;\n    // console.log(columns);\n    return (\n      <div className={`${fullWidth} column-count-${columns} `}>\n        <InnerBlocks.Content />\n      </div>\n    );\n  },\n});\n","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\n// import fontFamily from \"../block-assets/font-family\";\n\n// import icons_ from \"../block-assets/icons\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport {\n  InspectorControls,\n  ColorPalette,\n  RichText,\n} from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl, ToggleControl } from \"@wordpress/components\";\nconst attrs_ = {\n  circleRadius: { type: \"number\", default: 80 },\n  strokeWidth: { type: \"number\", default: 15 },\n  strokeColor: { type: \"string\", default: \"blue\" },\n  strokeBgColor: { type: \"string\", default: \"grey\" },\n  fillBgColor: { type: \"string\", default: \"pink\" },\n  animationDelay: { type: \"number\", default: 10 },\n  lineCap: { type: \"boolean\", default: false },\n  alignment: { type: \"string\", default: \"center\" },\n  text: { type: \"number\", default: 50 },\n  textFs: { type: \"number\", default: 18 },\n  textColor: { type: \"string\", default: \"black\" },\n  percentTitleE: { type: \"boolean\", default: true },\n  percentTitle: { type: \"string\", default: \"Add Title\" },\n  percentTitleFs: { type: \"number\" },\n  percentTitleColor: { type: \"string\" },\n};\nregisterBlockType(\"zita-blocks/progress-bar-pie\", {\n  title: \"Circular Progress Bar\",\n  icon: (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      enable-background=\"new 0 0 24 24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n      width=\"18px\"\n      height=\"18px\"\n    >\n      <g>\n        <rect fill=\"none\" height=\"24\" width=\"24\" />\n        <path d=\"M15.5,13.5c0,2-2.5,3.5-2.5,5h-2c0-1.5-2.5-3-2.5-5c0-1.93,1.57-3.5,3.5-3.5h0C13.93,10,15.5,11.57,15.5,13.5z M13,19.5h-2 V21h2V19.5z M19,13c0,1.68-0.59,3.21-1.58,4.42l1.42,1.42C20.18,17.27,21,15.23,21,13c0-2.74-1.23-5.19-3.16-6.84l-1.42,1.42 C17.99,8.86,19,10.82,19,13z M16,5l-4-4v3c0,0,0,0,0,0c-4.97,0-9,4.03-9,9c0,2.23,0.82,4.27,2.16,5.84l1.42-1.42 C5.59,16.21,5,14.68,5,13c0-3.86,3.14-7,7-7c0,0,0,0,0,0v3L16,5z\" />\n      </g>\n    </svg>\n  ),\n  // description: \"progress bar.\",\n  category: \"zita-category\",\n  keywords: [\"circular progress\", \"circular progress bar\"],\n  attributes: attrs_,\n  edit: ({ attributes, setAttributes }) => {\n    const {\n      circleRadius,\n      strokeWidth,\n      strokeColor,\n      strokeBgColor,\n      fillBgColor,\n      lineCap,\n      animationDelay,\n      alignment,\n      text,\n      textFs,\n      textColor,\n      percentTitleE,\n      percentTitle,\n      percentTitleColor,\n      percentTitleFs,\n    } = attributes;\n    let HW = circleRadius * 2 + strokeWidth;\n    let cxCy = HW / 2;\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Circle Setting\"} initialOpen={false}>\n          <RangeControl\n            label=\"Percent\"\n            value={text}\n            min={1}\n            max={100}\n            onChange={(e) => setAttributes({ text: e })}\n          />\n          <RangeControl\n            label=\"Width\"\n            value={circleRadius}\n            min={1}\n            max={150}\n            onChange={(e) => setAttributes({ circleRadius: e })}\n          />\n          <RangeControl\n            label=\"Stroke Width\"\n            value={strokeWidth}\n            min={1}\n            max={150}\n            onChange={(e) => setAttributes({ strokeWidth: e })}\n          />\n          <RangeControl\n            label=\"Animation Delay\"\n            value={animationDelay}\n            min={1}\n            max={100}\n            onChange={(e) => setAttributes({ animationDelay: e })}\n          />\n          <p>\n            <strong>Stroke Edges Type</strong>\n          </p>\n          <ToggleControl\n            label={lineCap ? \"Flat\" : \"Circular\"}\n            checked={lineCap}\n            onChange={(e) => setAttributes({ lineCap: e })}\n          />\n          <p>\n            <strong>Stroke Color</strong>\n          </p>\n          <ColorPalette\n            value={strokeColor}\n            onChange={(color) => setAttributes({ strokeColor: color })}\n          />\n          <p>\n            <strong>Stroke Background Color</strong>\n          </p>\n          <ColorPalette\n            value={strokeBgColor}\n            onChange={(color) => setAttributes({ strokeBgColor: color })}\n          />\n          <p>\n            <strong>Fill Background Color</strong>\n          </p>\n          <ColorPalette\n            value={fillBgColor}\n            onChange={(color) => setAttributes({ fillBgColor: color })}\n          />\n        </PanelBody>\n        <PanelBody title={\"Text Setting\"} initialOpen={false}>\n          <p className=\"block-inside\">Title Setting</p>\n          <ToggleControl\n            label={percentTitleE ? \"Hide\" : \"Show\"}\n            checked={percentTitleE}\n            onChange={(e) => setAttributes({ percentTitleE: e })}\n          />\n          {percentTitleE && (\n            <>\n              <RangeControl\n                label=\"Font Size\"\n                value={percentTitleFs}\n                min={1}\n                max={50}\n                onChange={(e) => setAttributes({ percentTitleFs: e })}\n              />\n              <p>\n                <strong>Color</strong>\n              </p>\n              <ColorPalette\n                value={percentTitleColor}\n                onChange={(color) =>\n                  setAttributes({ percentTitleColor: color })\n                }\n              />\n            </>\n          )}\n          <p className=\"block-inside\">Percent Setting</p>\n          <RangeControl\n            label=\"Font Size\"\n            value={textFs}\n            min={1}\n            max={50}\n            onChange={(e) => setAttributes({ textFs: e })}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={textColor}\n            onChange={(color) => setAttributes({ textColor: color })}\n          />\n        </PanelBody>\n      </InspectorControls>,\n      <div className=\"thk-progress-bar-wrapper-pie\">\n        <div className=\"zita-block-pie-circle\">\n          <div className=\"pie-circle_\">\n            <div className=\"text-sction\">\n              {percentTitleE && (\n                <RichText\n                  className=\"title_\"\n                  key=\"editable\"\n                  tagName=\"span\"\n                  placeholder=\"Add Title\"\n                  value={percentTitle}\n                  onChange={(e) => setAttributes({ percentTitle: e })}\n                  style={{\n                    color: percentTitleColor,\n                    fontSize: percentTitleFs + \"px\",\n                  }}\n                />\n              )}\n              <span\n                className=\"percent_\"\n                style={{ fontSize: textFs + \"px\", color: textColor }}\n              >\n                {text}%\n              </span>\n            </div>\n            <svg height={HW} width={HW}>\n              <circle cx={cxCy} cy={cxCy} r={circleRadius} fill={fillBgColor} />\n              <circle\n                cx={cxCy}\n                cy={cxCy}\n                r={circleRadius}\n                fill=\"none\"\n                stroke-width={strokeWidth}\n                stroke={strokeBgColor}\n              />\n              <circle\n                r={circleRadius}\n                cx={cxCy}\n                cy={cxCy}\n                stroke-width={strokeWidth}\n                fill=\"none\"\n                stroke={strokeColor}\n                stroke-linecap={lineCap ? \"round\" : \"flat\"}\n                stroke-dasharray={`${\n                  text * ((Math.PI * (circleRadius * 2)) / 100)\n                } ${Math.PI * (circleRadius * 2)}`}\n              />\n            </svg>\n          </div>\n        </div>\n      </div>,\n    ];\n  },\n  save: ({ attributes }) => {\n    const {\n      circleRadius,\n      strokeWidth,\n      strokeColor,\n      strokeBgColor,\n      fillBgColor,\n      animationDelay,\n      lineCap,\n      alignment,\n      text,\n      textFs,\n      textColor,\n      percentTitleE,\n      percentTitle,\n      percentTitleColor,\n      percentTitleFs,\n    } = attributes;\n    let circleData = {\n      radius: circleRadius,\n      strokeWidth: strokeWidth,\n      strokeColor: strokeColor,\n      strokeBgColor: strokeBgColor,\n      lineCap: lineCap,\n      animationDelay: animationDelay,\n      text: text,\n    };\n    circleData = JSON.stringify(circleData);\n    let HW = circleRadius * 2 + strokeWidth;\n    let cxCy = HW / 2;\n    return (\n      <div className=\"thk-progress-bar-wrapper-pie\">\n        <div className=\"zita-block-pie-circle front_\">\n          <div className=\"pie-circle_\">\n            <div className=\"text-sction\">\n              {percentTitleE && (\n                <RichText.Content\n                  className=\"title_\"\n                  tagName=\"span\"\n                  value={percentTitle}\n                  style={{\n                    color: percentTitleColor,\n                    fontSize: percentTitleFs + \"px\",\n                  }}\n                />\n              )}\n              <span\n                className=\"percent_\"\n                style={{ fontSize: textFs + \"px\", color: textColor }}\n              ></span>\n            </div>\n\n            <svg height={HW} width={HW} data={circleData}>\n              <circle cx={cxCy} cy={cxCy} r={circleRadius} fill={fillBgColor} />\n              <circle\n                cx={cxCy}\n                cy={cxCy}\n                r={circleRadius}\n                fill=\"none\"\n                stroke-width={strokeWidth}\n                stroke={strokeBgColor}\n              />\n              <circle\n                className=\"percent-apply\"\n                r={circleRadius}\n                cx={cxCy}\n                cy={cxCy}\n                fill=\"none\"\n                stroke-linecap={lineCap ? \"round\" : \"flat\"}\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport {\n  RichText,\n  InspectorControls,\n  ColorPalette,\n} from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl, ToggleControl } from \"@wordpress/components\";\nconst attrs_ = {\n  percentTitle: { type: \"string\", default: \"Percent title\" },\n  titleFs: { type: \"number\" },\n  titleFf: { type: \"string\" },\n  titleIn: { type: \"boolean\", default: false },\n  titleColor: { type: \"string\" },\n  progressHeight: { type: \"number\", default: 12 },\n  percent: { type: \"number\", default: 40 },\n  animationDelay: { type: \"number\", default: 10 },\n  percentColor: { type: \"string\", default: \"yellow\" },\n  percentBgColor: { type: \"string\" },\n  borderRadius: { type: \"number\" },\n};\nregisterBlockType(\"zita-blocks/progress-block\", {\n  title: \"Linear Progress Bar\",\n  icon: \"update\",\n  // description: \"progress bar.\",\n  category: \"zita-category\",\n  keywords: [\"progress\", \"progress bar\"],\n  attributes: attrs_,\n  edit: ({ attributes, setAttributes }) => {\n    const {\n      percent,\n      progressHeight,\n      percentTitle,\n      titleIn,\n      titleFs,\n      titleFf,\n      animationDelay,\n      titleColor,\n      percentColor,\n      percentBgColor,\n      borderRadius,\n    } = attributes;\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Title Setting\"} initialOpen={false}>\n          <ToggleControl\n            label={titleIn ? \"Outside\" : \"Inside\"}\n            checked={titleIn}\n            onChange={(e) => setAttributes({ titleIn: e })}\n          />\n          <RangeControl\n            label=\"Font Size\"\n            value={titleFs}\n            min={1}\n            max={100}\n            onChange={(e) => setAttributes({ titleFs: e })}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={titleColor}\n            onChange={(color) => setAttributes({ titleColor: color })}\n          />\n        </PanelBody>\n        <PanelBody title={\"Progress Bar Setting\"} initialOpen={false}>\n          <RangeControl\n            label=\"Height\"\n            value={progressHeight}\n            min={1}\n            max={50}\n            onChange={(e) => setAttributes({ progressHeight: e })}\n          />\n          <RangeControl\n            label=\"Percent\"\n            value={percent}\n            min={1}\n            max={100}\n            onChange={(e) => setAttributes({ percent: e })}\n          />\n\n          <RangeControl\n            label=\"Border Radius\"\n            value={borderRadius}\n            min={1}\n            max={60}\n            onChange={(e) => setAttributes({ borderRadius: e })}\n          />\n          <RangeControl\n            label=\"Animation Delay\"\n            value={animationDelay}\n            min={1}\n            max={100}\n            onChange={(e) => setAttributes({ animationDelay: e })}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={percentColor}\n            onChange={(color) => setAttributes({ percentColor: color })}\n          />\n          <p>\n            <strong>Background Color</strong>\n          </p>\n          <ColorPalette\n            value={percentBgColor}\n            onChange={(color) => setAttributes({ percentBgColor: color })}\n          />\n        </PanelBody>\n      </InspectorControls>,\n      <div className=\"thk-progress-bar-wrapper\">\n        <div className=\"zita-linear-progress-bar\">\n          <div\n            className=\"txt-section\"\n            style={{ fontSize: titleFs, color: titleColor }}\n          >\n            <RichText\n              value={percentTitle}\n              tagName=\"p\"\n              onChange={(e) => setAttributes({ percentTitle: e })}\n            />\n            {!titleIn && <span className=\"percent_\">{percent}%</span>}\n          </div>\n          <div\n            style={{\n              backgroundColor: percentBgColor,\n              height: progressHeight + \"px\",\n              borderRadius: borderRadius + \"px\",\n            }}\n            className=\"line_\"\n          >\n            <div\n              style={{ width: percent + \"%\", backgroundColor: percentColor }}\n              className=\"line-inner_\"\n            >\n              {titleIn && <span className=\"percent_\">{percent}%</span>}\n            </div>\n          </div>\n        </div>\n      </div>,\n    ];\n  },\n  save: ({ attributes }) => {\n    const {\n      progressHeight,\n      percent,\n      percentTitle,\n      titleIn,\n      titleFs,\n      titleFf,\n      titleColor,\n      percentColor,\n      percentBgColor,\n      borderRadius,\n      animationDelay,\n    } = attributes;\n    return (\n      <div className=\"thk-progress-bar-wrapper\">\n        <div className=\"zita-linear-progress-bar front_\" percent={percent} delay={animationDelay}>\n          <div\n            className=\"txt-section\"\n            style={{ fontSize: titleFs, color: titleColor }}\n          >\n            <RichText.Content value={percentTitle} tagName=\"p\" />\n            {!titleIn && <span className=\"percent_\"></span>}\n          </div>\n          <div\n            style={{\n              backgroundColor: percentBgColor,\n              height: progressHeight + \"px\",\n              borderRadius: borderRadius + \"px\",\n            }}\n            className=\"line_\"\n          >\n            <div\n              style={{ backgroundColor: percentColor }}\n              className=\"line-inner_\"\n            >\n              {titleIn && <span className=\"percent_\"></span>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n","// extracted by mini-css-extract-plugin","import \"./parent\";\nimport icons_ from \"../block-assets/icons\";\nimport \"./editor.scss\";\nimport fontFamily from \"../block-assets/font-family\";\n\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport {\n  RichText,\n  InspectorControls,\n  ColorPalette,\n  MediaUpload,\n} from \"@wordpress/block-editor\";\nimport { useState, useRef, useEffect } from \"@wordpress/element\";\nimport {\n  PanelBody,\n  IconButton,\n  RangeControl,\n  ToggleControl,\n  ColorPicker,\n} from \"@wordpress/components\";\n\nconst attrSave = {\n  image: {\n    type: \"string\",\n    default: \"icon\",\n  },\n  imageWidth: {\n    type: \"number\",\n    default: 30,\n  },\n  imageUrl: {\n    type: \"string\",\n    default: plugin_url.url + \"assets/img/image2.jpg\",\n  },\n  imageBorderRadius: {\n    type: \"number\",\n    default: 0,\n  },\n  imagePadding: {\n    type: \"number\",\n    default: 0,\n  },\n  title: {\n    type: \"string\",\n    default: \"Add Title\",\n  },\n  titleFontSize: {\n    type: \"number\",\n    default: \"21\",\n  },\n  titleColor: {\n    type: \"string\",\n    default: \"#ffa600\",\n  },\n  titleFF: {\n    type: \"string\",\n  },\n  description: {\n    type: \"string\",\n    default: \"Add Service Description\",\n  },\n  descriptionFontSize: {\n    type: \"number\",\n    default: \"21\",\n  },\n  descriptionColor: {\n    type: \"string\",\n  },\n  descriptionFF: {\n    type: \"string\",\n    default: \"Arimo\",\n  },\n  containerBgColor: {\n    type: \"string\",\n    default: \"#EEF6F9\",\n  },\n\n  containerBorder: {\n    type: \"boolean\",\n    default: false,\n  },\n  containerBorderWidth: {\n    type: \"number\",\n    default: 2,\n  },\n  containerBorderRadius: {\n    type: \"number\",\n    default: 3,\n  },\n  containerBorderColor: {\n    type: \"string\",\n    default: \"black\",\n  },\n  containerSpace: { type: \"number\", default: 0 },\n  //   icon\n  iconClass: {\n    type: \"string\",\n    default: \"fas fa-coffee\",\n  },\n  iconFontsize: {\n    type: \"number\",\n    default: \"40\",\n  },\n  iconColor: {\n    type: \"string\",\n    default: \"#ffa600\",\n  },\n  iconBgColor: {\n    type: \"string\",\n  },\n  iconBorder: {\n    type: \"boolean\",\n    default: true,\n  },\n  iconBorderWidth: {\n    type: \"number\",\n    default: 2,\n  },\n  iconBorderRadius: {\n    type: \"number\",\n    default: 50,\n  },\n  iconBorderColor: {\n    type: \"string\",\n    default: \"#ffa600\",\n  },\n  iconSpace: {\n    type: \"number\",\n    default: 79,\n  },\n};\nregisterBlockType(\"zita-blocks/icon-image-content\", {\n  title: \"icon Image content\",\n  icon: \"editor-insertmore\",\n  category: \"zita-category\",\n  parent: [\"zita-blocks/block-column-parent\"],\n  getEditWrapperProps(attributes) {},\n  keywords: [\"service\", \"service-section\"],\n  attributes: attrSave,\n  edit: (props) => {\n    const { attributes, setAttributes } = props;\n    const {\n      image,\n      imageWidth,\n      imageUrl,\n      imagePadding,\n      imageBorderRadius,\n      title,\n      titleFontSize,\n      titleColor,\n      titleFF,\n      description,\n      descriptionFF,\n      descriptionFontSize,\n      descriptionColor,\n      containerBgColor,\n      containerBorder,\n      containerBorderWidth,\n      containerBorderRadius,\n      containerBorderColor,\n      containerSpace,\n      //icon\n      iconFontsize,\n      iconClass,\n      iconColor,\n      iconBgColor,\n      iconBorder,\n      iconBorderWidth,\n      iconBorderRadius,\n      iconBorderColor,\n      iconSpace,\n    } = attributes;\n\n    //icon border\n    let borderStyle = iconBorder\n      ? {\n          borderWidth: iconBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: iconBorderColor,\n          borderRadius: iconBorderRadius + \"%\",\n          width: iconSpace + \"px\",\n          height: iconSpace + \"px\",\n        }\n      : {};\n    borderStyle = { ...borderStyle, ...{ backgroundColor: iconBgColor } };\n    //icon border\n\n    const imageStyle = {\n      width: imageWidth + \"%\",\n      borderRadius: imageBorderRadius + \"px\",\n      padding: imagePadding + \"px\",\n    };\n    let containerBorderStyle = containerBorder\n      ? {\n          borderWidth: containerBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: containerBorderColor,\n          borderRadius: containerBorderRadius + \"px\",\n        }\n      : {};\n    containerBorderStyle = containerBgColor\n      ? {\n          ...containerBorderStyle,\n          ...{\n            backgroundColor: containerBgColor,\n            paddingTop: containerSpace + \"px\",\n            paddingBottom: containerSpace + \"px\",\n          },\n        }\n      : containerBorderStyle;\n    const [activeIconContainer, activeIconContainerSet] = useState(false);\n    const [iconList, setIconList] = useState(icons_);\n    let iconReff = useRef();\n    useEffect(() => {\n      let handler = (event) => {\n        if (!iconReff.current.contains(event.target)) {\n          activeIconContainerSet(false);\n        }\n      };\n\n      if (activeIconContainer) document.addEventListener(\"mousedown\", handler);\n      return () => {\n        document.removeEventListener(\"mousedown\", handler);\n      };\n    });\n\n    const [activeFamilyContainer, activeFamilyDrop] = useState(false);\n    let familyRef = useRef();\n    useEffect(() => {\n      let handler = (event) => {\n        if (!familyRef.current.contains(event.target)) {\n          activeFamilyDrop(false);\n        }\n      };\n\n      if (activeFamilyContainer) document.addEventListener(\"mouseup\", handler);\n      return () => {\n        document.removeEventListener(\"mouseup\", handler);\n      };\n    });\n\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Image and Icon Setting\"} initialOpen={false}>\n          <p>\n            <strong>Choose Image Or Icon </strong>\n          </p>\n          <ToggleControl\n            label={image == \"image\" ? \"Icon\" : \"Image\"}\n            checked={image == \"image\" ? true : false}\n            onChange={(e) => {\n              setAttributes({ image: e ? \"image\" : \"icon\" });\n            }}\n          />\n          {image == \"image\" && (\n            <div className=\"service-image-setting\">\n              <MediaUpload\n                label=\"Choose Image\"\n                onSelect={(e) => {\n                  setAttributes({ imageUrl: e.sizes.full.url });\n                }}\n                value={imageUrl}\n                render={({ open }) => (\n                  <IconButton\n                    onClick={open}\n                    icon=\"upload\"\n                    className=\"service-image-uploader editor-media-placeholder__button is-button is-default is-large\"\n                  >\n                    Open Media Library\n                  </IconButton>\n                )}\n              />\n              <RangeControl\n                label={\"Width\"}\n                value={imageWidth}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ imageWidth: e })}\n              />\n              <RangeControl\n                label={\"Padding\"}\n                value={imagePadding}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ imagePadding: e })}\n              />\n              <RangeControl\n                label={\"Border Radius\"}\n                value={imageBorderRadius}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ imageBorderRadius: e })}\n              />\n            </div>\n          )}\n          {image == \"icon\" && (\n            <div className=\"service-icon-setting\">\n              <p>\n                <strong>Choose Icon</strong>\n              </p>\n\n              <div\n                ref={iconReff}\n                className={`wpgt-radio-wrap ${\n                  activeIconContainer ? \"active\" : \"\"\n                }`}\n              >\n                <div\n                  className=\"selected-icon\"\n                  onClick={(e) => {\n                    // let set__container = !activeIconContainer;\n                    activeIconContainerSet(true);\n                  }}\n                >\n                  <i className={iconClass}></i>\n                  <div className=\"search-container\">\n                    <i className=\"fas fa-search\"></i>\n                    <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        let value_ = e.target.value;\n                        if (value_ != \"\") {\n                          let newAr = icons_.filter(\n                            (checkStr) => checkStr.search(value_) != -1\n                          );\n                          if (newAr.length) {\n                            setIconList(newAr);\n                          }\n                        } else {\n                          setIconList(icons_);\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n                <div\n                  className=\"wpgt-radio-container\"\n                  onChange={(e) => {\n                    setAttributes({ iconClass: e.target.value });\n                  }}\n                >\n                  {iconList.map((iconValue) => {\n                    return (\n                      <div className=\"wpgt-radio-wrapper\">\n                        <input\n                          id={\"wpgt-Radio-\" + iconValue}\n                          type=\"radio\"\n                          name=\"wpgt-choose-icon\"\n                          className=\"radio-input\"\n                          value={iconValue}\n                        />\n                        <label htmlFor={\"wpgt-Radio-\" + iconValue}>\n                          <i className={iconValue}></i>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <p>\n                <strong>Font Size</strong>\n              </p>\n              <RangeControl\n                value={iconFontsize}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ iconFontsize: e })}\n              />\n              <p>\n                <strong>Color</strong>\n              </p>\n              <ColorPalette\n                onChange={(color) => setAttributes({ iconColor: color })}\n              />\n              <p>\n                <strong>Background Color</strong>\n              </p>\n              <ColorPicker\n                onChangeComplete={(colorBg) => {\n                  let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                  setAttributes({ iconBgColor: color });\n                }}\n              />\n              <ToggleControl\n                label={iconBorder ? \"Disable\" : \"Enable\"}\n                checked={iconBorder}\n                onChange={(e) => setAttributes({ iconBorder: e })}\n              />\n              {iconBorder && (\n                <div className=\"icon-border-setting\">\n                  <RangeControl\n                    label=\"Border Width\"\n                    value={iconBorderWidth}\n                    min={0}\n                    max={100}\n                    onChange={(e) => setAttributes({ iconBorderWidth: e })}\n                  />\n                  <RangeControl\n                    label=\"Border Radius\"\n                    value={iconBorderRadius}\n                    min={0}\n                    max={50}\n                    onChange={(e) => setAttributes({ iconBorderRadius: e })}\n                  />\n                  <p>Border Color</p>\n                  <ColorPalette\n                    onChange={(color) =>\n                      setAttributes({ iconBorderColor: color })\n                    }\n                  />\n                  <RangeControl\n                    label=\"Icon Space\"\n                    value={iconSpace}\n                    min={0}\n                    max={200}\n                    onChange={(e) => setAttributes({ iconSpace: e })}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </PanelBody>\n\n        <PanelBody title={\"Title Settings\"} initialOpen={false}>\n          <RangeControl\n            label={\"Font Size\"}\n            value={titleFontSize}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ titleFontSize: e })}\n          />\n          <p>\n            <strong>Color </strong>\n          </p>\n          <ColorPalette\n            value={titleColor}\n            onChange={(e) => setAttributes({ titleColor: e })}\n          />\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef}\n              className={`font-family-drop-down ${\n                activeFamilyContainer ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer;\n                  activeFamilyDrop(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: titleFF }}>\n                  {titleFF ? titleFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ titleFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n        </PanelBody>\n        <PanelBody title={\"Description Settings\"} initialOpen={false}>\n          <RangeControl\n            label={\"Font Size\"}\n            value={descriptionFontSize}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ descriptionFontSize: e })}\n          />\n          <p>\n            <strong>Color </strong>\n          </p>\n          <ColorPalette\n            value={descriptionColor}\n            onChange={(e) => setAttributes({ descriptionColor: e })}\n          />\n          {/* font family */}\n          <div className=\"THK-font-family-wrapper\">\n            <p>\n              <strong>Font Family</strong>\n            </p>\n            <div\n              ref={familyRef}\n              className={`font-family-drop-down ${\n                activeFamilyContainer ? \"active\" : \"\"\n              }`}\n            >\n              <div\n                onClick={() => {\n                  let applyActive = !activeFamilyContainer;\n                  activeFamilyDrop(applyActive);\n                }}\n                className=\"font-family-show\"\n              >\n                <span style={{ fontFamily: descriptionFF }}>\n                  {descriptionFF ? descriptionFF : \"Choose Family\"}\n                </span>\n              </div>\n              <div className=\"family-items\">\n                {fontFamily.map((family, key_) => {\n                  return (\n                    <span\n                      onClick={() => setAttributes({ descriptionFF: family })}\n                      style={{ fontFamily: family }}\n                    >\n                      {family}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          {/* font family */}\n        </PanelBody>\n        <PanelBody title={\"Container Settings\"} initialOpen={false}>\n          <ColorPicker\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              setAttributes({ containerBgColor: color });\n            }}\n          />\n          <RangeControl\n            label=\"Container Space\"\n            value={containerSpace}\n            min={0}\n            max={100}\n            onChange={(e) => setAttributes({ containerSpace: e })}\n          />\n          <p>\n            <strong>Border</strong>\n          </p>\n          <ToggleControl\n            label={containerBorder ? \"Disable\" : \"Enable\"}\n            checked={containerBorder}\n            onChange={(e) => setAttributes({ containerBorder: e })}\n          />\n          {containerBorder && (\n            <div className=\"icon-border-setting\">\n              <RangeControl\n                label=\"Border Width\"\n                value={containerBorderWidth}\n                min={0}\n                max={100}\n                onChange={(e) => setAttributes({ containerBorderWidth: e })}\n              />\n              <RangeControl\n                label=\"Border Radius\"\n                value={containerBorderRadius}\n                min={0}\n                max={50}\n                onChange={(e) => setAttributes({ containerBorderRadius: e })}\n              />\n              <p>Border Color</p>\n              <ColorPalette\n                onChange={(color) =>\n                  setAttributes({ containerBorderColor: color })\n                }\n              />\n            </div>\n          )}\n        </PanelBody>\n      </InspectorControls>,\n\n      <div className=\"service-section-wrapper\" style={containerBorderStyle}>\n        <div className={`service-image-icon ${image == \"icon\" ? \"icon_\" : \"\"}`}>\n          {image == \"image\" && (\n            <div className=\"service-image-section\">\n              <img style={imageStyle} src={imageUrl} />\n            </div>\n          )}\n          {image == \"icon\" && (\n            <div className=\"icon-container\" style={borderStyle}>\n              <i\n                style={{\n                  color: iconColor,\n                  fontSize: iconFontsize + \"px\",\n                }}\n                className={iconClass}\n              ></i>\n            </div>\n          )}\n        </div>\n        <div className=\"service-title-description\">\n          <div>\n            <RichText\n              key=\"editable\"\n              tagName=\"h1\"\n              placeholder=\"Service Title\"\n              value={title}\n              onChange={(e) => setAttributes({ title: e })}\n              style={{\n                color: titleColor,\n                fontSize: titleFontSize+\"px\",\n                fontFamily: titleFF,\n              }}\n            />\n            <RichText\n              key=\"editable\"\n              tagName=\"p\"\n              placeholder=\"Service Description\"\n              value={description}\n              onChange={(e) => setAttributes({ description: e })}\n              style={{\n                color: descriptionColor,\n                fontSize: descriptionFontSize+\"px\",\n                fontFamily: descriptionFF,\n              }}\n            />\n          </div>\n        </div>\n      </div>,\n    ];\n  },\n  save: (props) => {\n    const { attributes } = props;\n    const {\n      image,\n      imageWidth,\n      imageUrl,\n      imagePadding,\n      imageBorderRadius,\n      title,\n      titleFontSize,\n      titleColor,\n      description,\n      descriptionFontSize,\n      descriptionColor,\n      containerBgColor,\n      containerBorder,\n      containerBorderWidth,\n      containerBorderRadius,\n      containerBorderColor,\n      containerSpace,\n      //icon\n      iconFontsize,\n      iconClass,\n      iconColor,\n      iconBgColor,\n      iconBorder,\n      iconBorderWidth,\n      iconBorderRadius,\n      iconBorderColor,\n      iconSpace,\n    } = attributes;\n    //icon border\n    let borderStyle = iconBorder\n      ? {\n          borderWidth: iconBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: iconBorderColor,\n          borderRadius: iconBorderRadius + \"%\",\n          width: iconSpace + \"px\",\n          height: iconSpace + \"px\",\n        }\n      : {};\n    borderStyle = {\n      ...borderStyle,\n      ...{ backgroundColor: iconBgColor },\n    };\n    //icon border\n\n    const imageStyle = {\n      width: imageWidth + \"%\",\n      borderRadius: imageBorderRadius + \"px\",\n      padding: imagePadding + \"px\",\n    };\n    let containerBorderStyle = containerBorder\n      ? {\n          borderWidth: containerBorderWidth + \"px\",\n          borderStyle: \"solid\",\n          borderColor: containerBorderColor,\n          borderRadius: containerBorderRadius + \"px\",\n        }\n      : {};\n    containerBorderStyle = containerBgColor\n      ? {\n          ...containerBorderStyle,\n          ...{\n            backgroundColor: containerBgColor,\n            paddingTop: containerSpace + \"px\",\n            paddingBottom: containerSpace + \"px\",\n          },\n        }\n      : containerBorderStyle;\n\n    return (\n      <div className=\"service-section-wrapper\" style={containerBorderStyle}>\n        <div className={`service-image-icon ${image == \"icon\" ? \"icon_\" : \"\"}`}>\n          {image == \"image\" && (\n            <div className=\"service-image-section\">\n              <img style={imageStyle} src={imageUrl} />\n            </div>\n          )}\n          {image == \"icon\" && (\n            <div className=\"icon-container\" style={borderStyle}>\n              <i\n                style={{\n                  color: iconColor,\n                  fontSize: iconFontsize + \"px\",\n                }}\n                className={iconClass}\n              ></i>\n            </div>\n          )}\n        </div>\n        <div className=\"service-title-description\">\n          <div>\n            <RichText.Content\n              tagName=\"h1\"\n              value={title}\n              style={{ color: titleColor, fontSize: titleFontSize+\"px\" }}\n            />\n            <RichText.Content\n              tagName=\"p\"\n              value={description}\n              style={{ color: descriptionColor, fontSize: descriptionFontSize+\"px\" }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n","import { registerBlockType } from \"@wordpress/blocks\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl, ColorPicker } from \"@wordpress/components\";\n\nconst { useDispatch, useSelect } = wp.data;\n\nregisterBlockType(\"zita-blocks/block-column-parent\", {\n  title: \"Service Section\",\n  icon: \"grid-view\",\n  // description: \"Parent Of all Column Member\",\n  category: \"zita-category\",\n  supports: {\n    align: [\"center\", \"left\", \"right\", \"wide\", \"full\"],\n  },\n  attributes: {\n    align: {\n      type: \"string\",\n      default: \"wide\",\n    },\n    columns: {\n      type: \"number\",\n      default: 2,\n    },\n    fullWidth: {\n      type: \"string\",\n      default: \"\",\n    },\n  },\n  edit: (props) => {\n    const { className, attributes, setAttributes } = props;\n    const { columns, fullWidth } = attributes;\n    const MY_TEMPLATE = [\n      [\"zita-blocks/icon-image-content\"],\n      [\"zita-blocks/icon-image-content\"],\n    ];\n    return [\n      <InspectorControls>\n        <PanelBody>\n          <RangeControl\n            label=\"Number Of Column\"\n            value={columns}\n            onChange={(v) => setAttributes({ columns: v })}\n            min={1}\n            max={4}\n          />\n          <p>\n            <strong>Column Layout</strong>\n          </p>\n          <div className=\"column-layout-num-column\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"\"\n                name=\"column-layout\"\n                id=\"column-layout-box\"\n                onChange={() => setAttributes({ fullWidth: \"\" })}\n              />\n              <label for=\"column-layout-box\">\n                <img src={plugin_url.url + \"assets/img/box-layout.png\"} />\n              </label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"full-width\"\n                name=\"column-layout\"\n                id=\"column-layout-full\"\n                onChange={() => setAttributes({ fullWidth: \"full-width\" })}\n              />\n              <label for=\"column-layout-full\">\n                <img src={plugin_url.url + \"assets/img/100percent.png\"} />\n              </label>\n            </div>\n          </div>\n        </PanelBody>\n      </InspectorControls>,\n      <div className={`${className} ${fullWidth} column-count-${columns} `}>\n        <InnerBlocks\n          template={MY_TEMPLATE}\n          allowedBlocks={[\"zita-blocks/icon-image-content\"]}\n        />\n      </div>,\n    ];\n  },\n  save: (props) => {\n    const { attributes } = props;\n    const { columns, fullWidth } = attributes;\n    return (\n      <div className={`${fullWidth} column-count-${columns} `}>\n        <InnerBlocks.Content />\n      </div>\n    );\n  },\n});\n","import {\n  RichText,\n  InspectorControls,\n  ColorPalette,\n  MediaUpload,\n} from \"@wordpress/block-editor\";\nimport {\n  PanelBody,\n  RangeControl,\n  ColorPicker,\n  ToggleControl,\n} from \"@wordpress/components\";\nimport { Component } from \"@wordpress/element\";\nlet bgImageWrapper = plugin_url.url + \"assets/img/image2.jpg\";\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSlide: 0,\n      twoBtn: \"buttoneOne\",\n      trigger: \"linear\",\n    };\n  }\n  addSlide = () => {\n    let defaultArray = {\n      container: {\n        bgImage: bgImageWrapper,\n        overlayColor: \"\",\n        bgSize: \"cover\",\n      },\n      wrapper: {\n        bgcolor: \"\",\n        border: \"\",\n        alignment: \"left\",\n        spacing: \"2\",\n      },\n      title: {\n        text: \"This Is Title text\",\n        fontSize: 17,\n        color: \"red\",\n      },\n      text: { text: \"Add Description\", fontSize: 17, color: \"red\" },\n      buttoneOne: {\n        enable: true,\n        text: \"Button One\",\n        link: \"#\",\n        target: false,\n        fontSize: \"\",\n        color: \"\",\n        backgroundColor: \"\",\n        height: \"\",\n        width: \"\",\n        border: false,\n        borderColor: \"\",\n        borderWidth: \"\",\n        borderRadius: \"\",\n      },\n      buttoneTwo: {\n        enable: true,\n        text: \"Button Two\",\n        link: \"#\",\n        target: false,\n        fontSize: \"\",\n        color: \"\",\n        backgroundColor: \"\",\n        height: \"\",\n        width: \"\",\n        border: false,\n        borderColor: \"\",\n        borderWidth: \"\",\n        borderRadius: \"\",\n      },\n    };\n    let slides_ = this.props.attributes.slides;\n    this.props.setAttributes({ slides: [...slides_, defaultArray] });\n    this.setState({ selectedSlide: slides_.length });\n  };\n  removeSlide() {\n    let slides_ = this.props.attributes.slides;\n    let removeItem = this.state.selectedSlide;\n    let afterRemove = [\n      ...slides_.slice(0, removeItem),\n      ...slides_.slice(removeItem + 1),\n    ];\n    this.props.setAttributes({ slides: afterRemove });\n    this.setState({\n      selectedSlide: removeItem - 1 >= 0 ? removeItem - 1 : removeItem,\n    });\n  }\n\n  updateSlides = (value, for_, type) => {\n    let slides_ = this.props.attributes.slides;\n    let newSlide = [...slides_];\n    newSlide[this.state.selectedSlide][for_][type] = value;\n    this.props.setAttributes({ slides: newSlide });\n  };\n  updateGlobalSlide = (value, for_, type) => {\n    let sliderSetting = this.props.attributes.sliderSetting;\n    let newSetting = [...sliderSetting];\n    if (type) {\n      newSetting[0][for_][type] = value;\n    } else {\n      newSetting[0][for_] = value;\n    }\n    this.props.setAttributes({ sliderSetting: newSetting });\n  };\n\n  render() {\n    let { slides, sliderSetting } = this.props.attributes;\n    const thisState = this.state;\n    const stateIndex = thisState.selectedSlide;\n    const currentSlide = slides[stateIndex];\n\n    // console.log(slides);\n    // console.log(currentSlide);\n\n    const activeTwoBtnState = thisState.twoBtn;\n    let triggerActive = thisState.trigger;\n    let buttonOneStyle = {\n      fontSize: currentSlide.buttoneOne.fontSize,\n      color: currentSlide.buttoneOne.color,\n      backgroundColor: currentSlide.buttoneOne.backgroundColor,\n      paddingTop: currentSlide.buttoneOne.height,\n      paddingBottom: currentSlide.buttoneOne.height,\n      paddingLeft: currentSlide.buttoneOne.width,\n      paddingRight: currentSlide.buttoneOne.width,\n    };\n    buttonOneStyle = currentSlide.buttoneOne.border\n      ? {\n          ...{\n            borderColor: currentSlide.buttoneOne.borderColor,\n            borderWidth: currentSlide.buttoneOne.borderWidth,\n            borderRadius: currentSlide.buttoneOne.borderRadius,\n            borderStyle: \"solid\",\n          },\n          ...buttonOneStyle,\n        }\n      : buttonOneStyle;\n    let buttonTwoStyle = {\n      fontSize: currentSlide.buttoneTwo.fontSize,\n      color: currentSlide.buttoneTwo.color,\n      backgroundColor: currentSlide.buttoneTwo.backgroundColor,\n      paddingTop: currentSlide.buttoneTwo.height,\n      paddingBottom: currentSlide.buttoneTwo.height,\n      paddingLeft: currentSlide.buttoneTwo.width,\n      paddingRight: currentSlide.buttoneTwo.width,\n    };\n    buttonTwoStyle = currentSlide.buttoneTwo.border\n      ? {\n          ...{\n            borderColor: currentSlide.buttoneTwo.borderColor,\n            borderWidth: currentSlide.buttoneTwo.borderWidth,\n            borderRadius: currentSlide.buttoneTwo.borderRadius,\n            borderStyle: \"solid\",\n          },\n          ...buttonTwoStyle,\n        }\n      : buttonTwoStyle;\n    sliderSetting = sliderSetting[0];\n    let leftRightStyle = {\n      color: sliderSetting.leftRightTrigger.color,\n      backgroundColor: sliderSetting.leftRightTrigger.backgroundColor,\n      fontSize: sliderSetting.leftRightTrigger.fontSize,\n    };\n    let SlideulStyle = null;\n    if (sliderSetting.dimension.height) {\n      SlideulStyle = { minHeight: sliderSetting.dimension.custom_height };\n    }\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Slider Setting\"} initialOpen={false}>\n          <p className=\"block-inside\">Slider Dimension</p>\n          <p>\n            <strong>Width</strong>\n          </p>\n          <ToggleControl\n            label={\n              sliderSetting.dimension.width ? \"Full Width\" : \"Custom Width\"\n            }\n            checked={sliderSetting.dimension.width}\n            onChange={(e) => {\n              this.updateGlobalSlide(e, \"dimension\", \"width\");\n            }}\n          />\n          {sliderSetting.dimension.width && (\n            <RangeControl\n              label=\"Width\"\n              value={sliderSetting.dimension.custom_width}\n              min={200}\n              max={1400}\n              onChange={(e) =>\n                this.updateGlobalSlide(e, \"dimension\", \"custom_width\")\n              }\n            />\n          )}\n          <p>\n            <strong>Height</strong>\n          </p>\n          <ToggleControl\n            label={sliderSetting.dimension.width ? \"Auto\" : \"Custom Height\"}\n            checked={sliderSetting.dimension.height}\n            onChange={(e) => {\n              this.updateGlobalSlide(e, \"dimension\", \"height\");\n            }}\n          />\n          {sliderSetting.dimension.height && (\n            <RangeControl\n              label=\"Height\"\n              value={sliderSetting.dimension.custom_height}\n              min={360}\n              max={1000}\n              onChange={(e) =>\n                this.updateGlobalSlide(e, \"dimension\", \"custom_height\")\n              }\n            />\n          )}\n          <p className=\"block-inside\">Slider Effect</p>\n          <div class=\"zita-switcher-button-section\">\n            <span\n              onClick={() =>\n                this.updateGlobalSlide(\"slideEffect\", \"sliderEffect\")\n              }\n              className={\n                sliderSetting.sliderEffect == \"slideEffect\" ? \"selected\" : \"\"\n              }\n            >\n              Slide\n            </span>\n            <span\n              onClick={() =>\n                this.updateGlobalSlide(\"fadeEffect\", \"sliderEffect\")\n              }\n              className={\n                sliderSetting.sliderEffect == \"fadeEffect\" ? \"selected\" : \"\"\n              }\n            >\n              Fade\n            </span>\n          </div>\n          <p className=\"block-inside\">Trigger</p>\n          <div class=\"zita-switcher-button-section\">\n            <span\n              onClick={() => this.setState({ trigger: \"linear\" })}\n              className={triggerActive == \"linear\" ? \"selected\" : \"\"}\n            >\n              Linear\n            </span>\n            <span\n              onClick={() => this.setState({ trigger: \"left\" })}\n              className={triggerActive == \"left\" ? \"selected\" : \"\"}\n            >\n              Left Right\n            </span>\n            <span\n              onClick={() => this.setState({ trigger: \"auto\" })}\n              className={triggerActive == \"auto\" ? \"selected\" : \"\"}\n            >\n              Auto\n            </span>\n          </div>\n          {triggerActive == \"linear\" && (\n            <>\n              <ToggleControl\n                label={\n                  sliderSetting.linearTrigger.enable ? \"Disable\" : \"Enable\"\n                }\n                checked={sliderSetting.linearTrigger.enable}\n                onChange={(e) =>\n                  this.updateGlobalSlide(e, \"linearTrigger\", \"enable\")\n                }\n              />\n              {sliderSetting.linearTrigger.enable && (\n                <>\n                  <RangeControl\n                    label=\"Size\"\n                    value={sliderSetting.linearTrigger.fontSize}\n                    min={0}\n                    max={70}\n                    onChange={(e) =>\n                      this.updateGlobalSlide(e, \"linearTrigger\", \"fontSize\")\n                    }\n                  />\n                  <p>\n                    <strong>Color</strong>\n                  </p>\n                  <ColorPicker\n                    color={sliderSetting.linearTrigger.color}\n                    onChangeComplete={(colorBg) => {\n                      let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                      this.updateGlobalSlide(color, \"linearTrigger\", \"color\");\n                    }}\n                  />\n                  <p>\n                    <strong>Active Color</strong>\n                  </p>\n                  <ColorPicker\n                    color={sliderSetting.linearTrigger.activeColor}\n                    onChangeComplete={(colorBg) => {\n                      let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                      this.updateGlobalSlide(\n                        color,\n                        \"linearTrigger\",\n                        \"activeColor\"\n                      );\n                    }}\n                  />\n                </>\n              )}\n            </>\n          )}\n          {triggerActive == \"left\" && (\n            <>\n              <ToggleControl\n                label={\n                  sliderSetting.leftRightTrigger.enable ? \"Disable\" : \"Enable\"\n                }\n                checked={sliderSetting.leftRightTrigger.enable}\n                onChange={(e) =>\n                  this.updateGlobalSlide(e, \"leftRightTrigger\", \"enable\")\n                }\n              />\n              {sliderSetting.leftRightTrigger.enable && (\n                <>\n                  <RangeControl\n                    label=\"Font Size\"\n                    value={sliderSetting.leftRightTrigger.fontSize}\n                    min={0}\n                    max={70}\n                    onChange={(e) =>\n                      this.updateGlobalSlide(e, \"leftRightTrigger\", \"fontSize\")\n                    }\n                  />\n                  <p>\n                    <strong>Color</strong>\n                  </p>\n                  <ColorPalette\n                    value={sliderSetting.leftRightTrigger.color}\n                    onChange={(color) =>\n                      this.updateGlobalSlide(color, \"leftRightTrigger\", \"color\")\n                    }\n                  />\n                  <p>\n                    <strong>Background Color</strong>\n                  </p>\n                  <ColorPicker\n                    color={sliderSetting.leftRightTrigger.backgroundColor}\n                    onChangeComplete={(colorBg) => {\n                      let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                      this.updateGlobalSlide(\n                        color,\n                        \"leftRightTrigger\",\n                        \"backgroundColor\"\n                      );\n                    }}\n                  />\n                </>\n              )}\n            </>\n          )}\n          {triggerActive == \"auto\" && (\n            <>\n              <ToggleControl\n                label={sliderSetting.autoTrigger.enable ? \"Disable\" : \"Enable\"}\n                checked={sliderSetting.autoTrigger.enable}\n                onChange={(e) =>\n                  this.updateGlobalSlide(e, \"autoTrigger\", \"enable\")\n                }\n              />\n              {sliderSetting.autoTrigger.enable && (\n                <RangeControl\n                  label=\"Slide Delay\"\n                  value={sliderSetting.autoTrigger.delay}\n                  min={0}\n                  max={12}\n                  onChange={(e) =>\n                    this.updateGlobalSlide(e, \"autoTrigger\", \"delay\")\n                  }\n                />\n              )}\n            </>\n          )}\n        </PanelBody>\n        <PanelBody title={\"Slide Setting\"} initialOpen={false}>\n          <p>\n            <strong>Background image</strong>\n          </p>\n          <MediaUpload\n            allowedType=\"image\"\n            onSelect={(newImage) =>\n              this.updateSlides(newImage.sizes.full.url, \"container\", \"bgImage\")\n            }\n            value={currentSlide.container.bgImage}\n            render={({ open }) => (\n              <div onClick={open} className=\"zita-block-image-uploader\">\n                <div>\n                  <i className=\"fas fa-plus\"></i>\n                </div>\n                <img src={currentSlide.container.bgImage} />\n              </div>\n            )}\n          />\n\n          <div className=\"flex-section\">\n            <p>Background Size</p>\n            <select\n              value={currentSlide.container.bgSize}\n              onChange={(e) => {\n                this.updateSlides(e.target.value, \"container\", \"bgSize\");\n              }}\n            >\n              <option value=\"auto\">Auto</option>\n              <option value=\"cover\">Cover</option>\n              <option value=\"contain\">Contain</option>\n            </select>\n          </div>\n          <p>\n            <strong>Overlay Color</strong>\n          </p>\n          <ColorPicker\n            color={currentSlide.container.overlayColor}\n            onChangeComplete={(colorBg) => {\n              let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n              this.updateSlides(color, \"container\", \"overlayColor\");\n            }}\n          />\n          <p>\n            <strong>Content Alignment</strong>\n          </p>\n          <div className=\"zita-alignment\">\n            <div>\n              <span\n                onClick={() => {\n                  this.updateSlides(\"left\", \"wrapper\", \"alignment\");\n                }}\n                className={`dashicons dashicons-editor-alignleft ${\n                  currentSlide.wrapper.alignment == \"left\" ? \"active\" : \"\"\n                }`}\n              ></span>\n            </div>\n            <div>\n              <span\n                onClick={() => {\n                  this.updateSlides(\"center\", \"wrapper\", \"alignment\");\n                }}\n                className={`dashicons dashicons-editor-aligncenter ${\n                  currentSlide.wrapper.alignment == \"center\" ? \"active\" : \"\"\n                }`}\n              ></span>\n            </div>\n            <div>\n              <span\n                onClick={() => {\n                  this.updateSlides(\"right\", \"wrapper\", \"alignment\");\n                }}\n                className={`dashicons dashicons-editor-alignright ${\n                  currentSlide.wrapper.alignment == \"right\" ? \"active\" : \"\"\n                }`}\n              ></span>\n            </div>\n          </div>\n        </PanelBody>\n        <PanelBody title={\"Text Setting\"} initialOpen={false}>\n          <p className=\"block-inside\">Header Setting</p>\n          <p>\n            <strong>Font Size</strong>\n          </p>\n          <RangeControl\n            value={currentSlide.title.fontSize}\n            min={0}\n            max={100}\n            onChange={(e) => this.updateSlides(e, \"title\", \"fontSize\")}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={currentSlide.title.color}\n            onChange={(color) => this.updateSlides(color, \"title\", \"color\")}\n          />\n          <p className=\"block-inside\">Description Setting</p>\n          <p>\n            <strong>Font Size</strong>\n          </p>\n          <RangeControl\n            value={currentSlide.text.fontSize}\n            min={0}\n            max={100}\n            onChange={(e) => this.updateSlides(e, \"text\", \"fontSize\")}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={currentSlide.text.color}\n            onChange={(color) => this.updateSlides(color, \"text\", \"color\")}\n          />\n          <p>\n            <strong>Text Vertical Space</strong>\n          </p>\n          <RangeControl\n            value={currentSlide.wrapper.spacing}\n            min={0}\n            max={30}\n            onChange={(e) => this.updateSlides(e, \"wrapper\", \"spacing\")}\n          />\n        </PanelBody>\n        <PanelBody title={\"Button Setting\"} initialOpen={false}>\n          <div className=\"zita-switcher-button-section\">\n            <span\n              className={activeTwoBtnState == \"buttoneOne\" ? \"selected\" : \"\"}\n              onClick={() => {\n                this.setState({ twoBtn: \"buttoneOne\" });\n              }}\n            >\n              Button 1\n            </span>\n            <span\n              className={activeTwoBtnState == \"buttoneTwo\" ? \"selected\" : \"\"}\n              onClick={() => {\n                this.setState({ twoBtn: \"buttoneTwo\" });\n              }}\n            >\n              Button 2\n            </span>\n          </div>\n          <ToggleControl\n            label={\n              currentSlide[activeTwoBtnState].enable ? \"Disable\" : \"Enable\"\n            }\n            checked={currentSlide[activeTwoBtnState].enable}\n            onChange={(e) => {\n              this.updateSlides(e, activeTwoBtnState, \"enable\");\n            }}\n          />\n          {currentSlide[activeTwoBtnState].enable && (\n            <>\n              <RangeControl\n                label=\"Font Size\"\n                value={currentSlide[activeTwoBtnState].fontSize}\n                min={0}\n                max={70}\n                onChange={(e) =>\n                  this.updateSlides(e, activeTwoBtnState, \"fontSize\")\n                }\n              />\n              <p>Color</p>\n              <ColorPalette\n                value={currentSlide[activeTwoBtnState].color}\n                onChange={(color) =>\n                  this.updateSlides(color, activeTwoBtnState, \"color\")\n                }\n              />\n              <p>Background Color</p>\n              <ColorPicker\n                color={currentSlide[activeTwoBtnState].backgroundColor}\n                onChangeComplete={(colorBg) => {\n                  let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                  this.updateSlides(\n                    color,\n                    activeTwoBtnState,\n                    \"backgroundColor\"\n                  );\n                }}\n              />\n              <RangeControl\n                label=\"Height\"\n                value={currentSlide[activeTwoBtnState].height}\n                min={0}\n                max={30}\n                onChange={(e) =>\n                  this.updateSlides(e, activeTwoBtnState, \"height\")\n                }\n              />\n              <RangeControl\n                label=\"Width\"\n                value={currentSlide[activeTwoBtnState].width}\n                min={0}\n                max={30}\n                onChange={(e) =>\n                  this.updateSlides(e, activeTwoBtnState, \"width\")\n                }\n              />\n              <p>\n                <strong>Border</strong>\n              </p>\n              <ToggleControl\n                label={\n                  currentSlide[activeTwoBtnState].border ? \"Disable\" : \"Enable\"\n                }\n                checked={currentSlide[activeTwoBtnState].border}\n                onChange={(e) =>\n                  this.updateSlides(e, activeTwoBtnState, \"border\")\n                }\n              />\n              {currentSlide[activeTwoBtnState].border && (\n                <div className=\"icon-border-setting\">\n                  <RangeControl\n                    label=\"Border Width\"\n                    value={currentSlide[activeTwoBtnState].borderWidth}\n                    min={0}\n                    max={100}\n                    onChange={(e) =>\n                      this.updateSlides(e, activeTwoBtnState, \"borderWidth\")\n                    }\n                  />\n                  <RangeControl\n                    label=\"Border Radius\"\n                    value={currentSlide[activeTwoBtnState].borderRadius}\n                    min={0}\n                    max={50}\n                    onChange={(e) =>\n                      this.updateSlides(e, activeTwoBtnState, \"borderRadius\")\n                    }\n                  />\n                  <p>Border Color</p>\n                  <ColorPalette\n                    value={currentSlide[activeTwoBtnState].borderColor}\n                    onChange={(color) =>\n                      this.updateSlides(color, activeTwoBtnState, \"borderColor\")\n                    }\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </PanelBody>\n      </InspectorControls>,\n      <div className=\"zita-block-slide-wrapper\">\n        <div className=\"zita-slider-bullet\">\n          <ul className=\"zita-slider-ul-bullet\">\n            {slides.map((val, index_) => {\n              return (\n                <li\n                  key={index_}\n                  className={stateIndex == index_ ? \"selected_\" : null}\n                >\n                  <span\n                    onClick={(e) => {\n                      this.setState({ selectedSlide: index_ });\n                    }}\n                  ></span>\n                </li>\n              );\n            })}\n            {slides.length < 8 && (\n              <li className=\"add-item\">\n                <span\n                  onClick={() => {\n                    this.addSlide();\n                  }}\n                >\n                  <i className=\"fas fa-plus\"></i>\n                </span>\n              </li>\n            )}\n          </ul>\n        </div>\n        <div className=\"zita-slider-container\">\n          {/* slider trigger */}\n          {sliderSetting.linearTrigger.enable && (\n            <ul className=\"zita-slider-bullet-trigger\">\n              {slides.map((val, index_) => {\n                let trigStyle = {\n                  height: sliderSetting.linearTrigger.fontSize + \"px\",\n                  width: sliderSetting.linearTrigger.fontSize + \"px\",\n                };\n                trigStyle =\n                  index_ != stateIndex\n                    ? {\n                        ...trigStyle,\n                        ...{\n                          backgroundColor: sliderSetting.linearTrigger.color,\n                        },\n                      }\n                    : {\n                        ...trigStyle,\n                        ...{\n                          backgroundColor:\n                            sliderSetting.linearTrigger.activeColor,\n                        },\n                      };\n                return (\n                  <li className={`${index_ == stateIndex ? \"selected_\" : \"\"}`}>\n                    <span style={trigStyle}></span>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {/* next prev btn */}\n          {sliderSetting.leftRightTrigger.enable && (\n            <>\n              <div className=\"zita-slider-bullet-next-prev next\">\n                <span style={leftRightStyle}>\n                  <i class=\"fas fa-arrow-right\"></i>\n                </span>\n              </div>\n              <div className=\"zita-slider-bullet-next-prev prev\">\n                <span style={leftRightStyle}>\n                  <i class=\"fas fa-arrow-left\"></i>\n                </span>\n              </div>\n            </>\n          )}\n          {/* next prev btn */}\n          {/* slider trigger */}\n          {slides.length > 1 && (\n            <span\n              className=\"zita-remove-slide\"\n              onClick={(e) => {\n                this.removeSlide();\n              }}\n            >\n              <i className=\"fas fa-trash-alt\"></i>\n            </span>\n          )}\n          <ul className=\"zita-slider-ul-slides\" style={SlideulStyle}>\n            {slides.map((val, index_) => {\n              return (\n                <li\n                  onClick={(e) => {\n                    this.setState({ selectedSlide: index_ });\n                  }}\n                  key={index_}\n                  className={stateIndex == index_ ? \"selected_\" : null}\n                >\n                  <div className=\"zita-slider-wrapper\">\n                    <div className=\"zita-slider-container\">\n                      <div className=\"zita-slider-content-wrapper\">\n                        <div\n                          className=\"zita-slider-image-container\"\n                          style={{\n                            backgroundSize: val.container.bgSize,\n                            backgroundImage:\n                              \"url(\" + val.container.bgImage + \")\",\n                          }}\n                        ></div>\n                        <div\n                          className={`zita-slider-text ${val.wrapper.alignment}`}\n                          style={{\n                            backgroundColor: val.container.overlayColor,\n                          }}\n                        >\n                          <div\n                            style={{\n                              marginTop: val.wrapper.spacing + \"px\",\n                              marginBottom: val.wrapper.spacing + \"px\",\n                            }}\n                          >\n                            <RichText\n                              key=\"editable\"\n                              tagName=\"h1\"\n                              placeholder=\"Service Title\"\n                              value={val.title.text}\n                              onChange={(e) =>\n                                this.updateSlides(e, \"title\", \"text\")\n                              }\n                              style={{\n                                fontSize: val.title.fontSize + \"px\",\n                                color: val.title.color,\n                              }}\n                            />\n                            <RichText\n                              key=\"editable\"\n                              tagName=\"h2\"\n                              placeholder=\"Service Title\"\n                              value={val.text.text}\n                              onChange={(e) =>\n                                this.updateSlides(e, \"text\", \"text\")\n                              }\n                              style={{\n                                fontSize: val.text.fontSize + \"px\",\n                                color: val.text.color,\n                              }}\n                            />\n                            <div className=\"button-container\">\n                              {val.buttoneOne.enable && (\n                                <>\n                                  <RichText\n                                    key=\"editable\"\n                                    tagName=\"a\"\n                                    placeholder=\"Button One\"\n                                    value={val.buttoneOne.text}\n                                    onChange={(e) =>\n                                      this.updateSlides(e, \"buttoneOne\", \"text\")\n                                    }\n                                    style={buttonOneStyle}\n                                  />\n                                </>\n                              )}\n                              {val.buttoneTwo.enable && (\n                                <RichText\n                                  key=\"editable\"\n                                  tagName=\"a\"\n                                  placeholder=\"Button Two\"\n                                  value={val.buttoneTwo.text}\n                                  onChange={(e) =>\n                                    this.updateSlides(e, \"buttoneTwo\", \"text\")\n                                  }\n                                  style={buttonTwoStyle}\n                                />\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>,\n    ];\n  }\n}\nexport default Edit;\n","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nlet bgImageWrapper = plugin_url.url + \"assets/img/image2.jpg\";\nimport { RichText } from \"@wordpress/block-editor\";\nconst attrSave = {\n  sliderSetting: {\n    type: \"array\",\n    default: [\n      {\n        dimension: {\n          width: false,\n          custom_width: 580,\n          height: false,\n          custom_height: 360,\n        },\n        sliderEffect: \"fadeEffect\",\n        linearTrigger: {\n          enable: true,\n          fontSize: 20,\n          color: \"rgba(231,192,192,1)\",\n          activeColor: \"rgba(68,222,68,1)\",\n        },\n        leftRightTrigger: {\n          enable: true,\n          fontSize: 20,\n          color: \"rgba(231,192,192,1)\",\n          backgroundColor: \"rgb(128, 128, 128)\",\n        },\n        autoTrigger: {\n          enable: true,\n          delay: 4,\n        },\n      },\n    ],\n  },\n  slides: {\n    type: \"array\",\n    default: [\n      {\n        container: {\n          bgImage: bgImageWrapper,\n          overlayColor: \"\",\n          bgSize: \"cover\",\n        },\n        wrapper: {\n          bgcolor: \"\",\n          border: \"\",\n          alignment: \"left\",\n          spacing: 2,\n        },\n        title: {\n          text: \"This Is Title text\",\n          fontSize: 17,\n          color: \"red\",\n        },\n        text: { text: \"Add Description\", fontSize: 17, color: \"red\" },\n        buttoneOne: {\n          enable: true,\n          text: \"Button One\",\n          link: \"#\",\n          target: false,\n          fontSize: \"\",\n          color: \"\",\n          backgroundColor: \"\",\n          height: \"\",\n          width: \"\",\n          border: false,\n          borderColor: \"\",\n          borderWidth: \"\",\n          borderRadius: \"\",\n        },\n        buttoneTwo: {\n          enable: true,\n          text: \"Button Two\",\n          link: \"#\",\n          target: false,\n          fontSize: \"\",\n          color: \"\",\n          backgroundColor: \"\",\n          height: \"\",\n          width: \"\",\n          border: false,\n          borderColor: \"\",\n          borderWidth: \"\",\n          borderRadius: \"\",\n        },\n      },\n      {\n        container: {\n          bgImage: bgImageWrapper,\n          overlayColor: \"\",\n          bgSize: \"cover\",\n        },\n        wrapper: {\n          bgcolor: \"\",\n          border: \"\",\n          alignment: \"left\",\n          spacing: 2,\n        },\n        title: {\n          text: \"This Is Title text\",\n          fontSize: 17,\n          color: \"red\",\n        },\n        text: { text: \"Add Description\", fontSize: 17, color: \"red\" },\n        buttoneOne: {\n          enable: true,\n          text: \"Button One\",\n          link: \"#\",\n          target: false,\n          fontSize: \"\",\n          color: \"\",\n          backgroundColor: \"\",\n          height: \"\",\n          width: \"\",\n          border: false,\n          borderColor: \"\",\n          borderWidth: \"\",\n          borderRadius: \"\",\n        },\n        buttoneTwo: {\n          enable: true,\n          text: \"Button Two\",\n          link: \"#\",\n          target: false,\n          fontSize: \"\",\n          color: \"\",\n          backgroundColor: \"\",\n          height: \"\",\n          width: \"\",\n          border: false,\n          borderColor: \"\",\n          borderWidth: \"\",\n          borderRadius: \"\",\n        },\n      },\n      {\n        container: {\n          bgImage: bgImageWrapper,\n          overlayColor: \"\",\n          bgSize: \"cover\",\n        },\n        wrapper: {\n          bgcolor: \"\",\n          border: \"\",\n          alignment: \"left\",\n          spacing: 2,\n        },\n        title: {\n          text: \"This Is Title text\",\n          fontSize: 17,\n          color: \"red\",\n        },\n        text: { text: \"Add Description\", fontSize: 17, color: \"red\" },\n        buttoneOne: {\n          enable: true,\n          text: \"Button One\",\n          link: \"#\",\n          target: false,\n          fontSize: \"\",\n          color: \"\",\n          backgroundColor: \"\",\n          height: \"\",\n          width: \"\",\n          border: false,\n          borderColor: \"\",\n          borderWidth: \"\",\n          borderRadius: \"\",\n        },\n        buttoneTwo: {\n          enable: true,\n          text: \"Button Two\",\n          link: \"#\",\n          target: false,\n          fontSize: \"\",\n          color: \"\",\n          backgroundColor: \"\",\n          height: \"\",\n          width: \"\",\n          border: false,\n          borderColor: \"\",\n          borderWidth: \"\",\n          borderRadius: \"\",\n        },\n      },\n    ],\n  },\n};\nlet elementLiSlide = (val, index_, clone = false) => {\n  let buttonOneStyle = {};\n  if (val.buttoneOne.fontSize)\n    buttonOneStyle.fontSize = val.buttoneOne.fontSize;\n  if (val.buttoneOne.color) buttonOneStyle.color = val.buttoneOne.color;\n  if (val.buttoneOne.backgroundColor)\n    buttonOneStyle.backgroundColor = val.buttoneOne.backgroundColor;\n  if (val.buttoneOne.height) {\n    buttonOneStyle.paddingBottom = val.buttoneOne.height;\n    buttonOneStyle.paddingTop = val.buttoneOne.height;\n  }\n  if (val.buttoneOne.width) {\n    buttonOneStyle.paddingLeft = val.buttoneOne.width;\n    buttonOneStyle.paddingRight = val.buttoneOne.width;\n  }\n\n  buttonOneStyle = val.buttoneOne.border\n    ? {\n        ...{\n          borderColor: val.buttoneOne.borderColor,\n          borderWidth: val.buttoneOne.borderWidth,\n          borderRadius: val.buttoneOne.borderRadius,\n          borderStyle: \"solid\",\n        },\n        ...buttonOneStyle,\n      }\n    : buttonOneStyle;\n  let buttonTwoStyle = {};\n  if (val.buttoneTwo.fontSize)\n    buttonTwoStyle.fontSize = val.buttoneTwo.fontSize;\n  if (val.buttoneTwo.color) buttonTwoStyle.color = val.buttoneTwo.color;\n  if (val.buttoneTwo.backgroundColor)\n    buttonTwoStyle.backgroundColor = val.buttoneTwo.backgroundColor;\n  if (val.buttoneTwo.height) {\n    buttonTwoStyle.paddingBottom = val.buttoneTwo.height;\n    buttonTwoStyle.paddingTop = val.buttoneTwo.height;\n  }\n  if (val.buttoneTwo.width) {\n    buttonTwoStyle.paddingLeft = val.buttoneTwo.width;\n    buttonTwoStyle.paddingRight = val.buttoneTwo.width;\n  }\n\n  buttonTwoStyle = val.buttoneTwo.border\n    ? {\n        ...{\n          borderColor: val.buttoneTwo.borderColor,\n          borderWidth: val.buttoneTwo.borderWidth,\n          borderRadius: val.buttoneTwo.borderRadius,\n          borderStyle: \"solid\",\n        },\n        ...buttonTwoStyle,\n      }\n    : buttonTwoStyle;\n\n  return (\n    <li\n      key={index_}\n      className={`slides ${index_ == 0 ? \"selected_\" : \"\"} ${\n        clone ? clone : \"\"\n      }`}\n    >\n      <div className=\"zita-slider-wrapper\">\n        <div className=\"zita-slider-container\">\n          <div className=\"zita-slider-content-wrapper\">\n            <div\n              className=\"zita-slider-image-container\"\n              style={{\n                backgroundSize: \"cover\",\n                backgroundImage: \"url(\" + val.container.bgImage + \")\",\n              }}\n            ></div>\n            <div\n              className={`zita-slider-text ${val.wrapper.alignment}`}\n              style={{\n                backgroundColor: val.container.overlayColor,\n              }}\n            >\n              <div\n                style={\n                  val.wrapper.spacing && {\n                    marginTop: val.wrapper.spacing + \"px\",\n                    marginBottom: val.wrapper.spacing + \"px\",\n                  }\n                }\n              >\n                <RichText.Content\n                  tagName=\"h1\"\n                  value={val.title.text}\n                  style={{\n                    fontSize: val.title.fontSize + \"px\",\n                    color: val.title.color,\n                  }}\n                />\n                <RichText.Content\n                  tagName=\"h2\"\n                  value={val.text.text}\n                  style={{\n                    fontSize: val.text.fontSize + \"px\",\n                    color: val.text.color,\n                  }}\n                />\n\n                <div className=\"button-container\">\n                  {val.buttoneOne.enable && (\n                    <>\n                      <RichText.Content\n                        tagName=\"a\"\n                        placeholder=\"Button One\"\n                        value={val.buttoneOne.text}\n                        style={buttonOneStyle}\n                      />\n                    </>\n                  )}\n                  {val.buttoneTwo.enable && (\n                    <RichText.Content\n                      tagName=\"a\"\n                      placeholder=\"Button One\"\n                      value={val.buttoneTwo.text}\n                      style={buttonTwoStyle}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\nregisterBlockType(\"zita-blocks/slide\", {\n  title: \"Slider\",\n  icon: \"editor-code\",\n  category: \"zita-category\",\n  getEditWrapperProps(attributes) {\n    let { sliderSetting } = attributes;\n    let sliderWidth = sliderSetting[0].dimension;\n    let attr_ = { \"data-align\": \"full\" };\n    if (sliderWidth.width && sliderWidth.custom_width) {\n      attr_ = {\n        ...attr_,\n        ...{\n          style: { maxWidth: sliderWidth.custom_width + \"px\" },\n        },\n      };\n    }\n    return attr_;\n  },\n  keywords: [\"slider\", \"slider section\"],\n  attributes: attrSave,\n  edit: Edit,\n  save: (props) => {\n    let { slides, sliderSetting } = props.attributes;\n    sliderSetting = sliderSetting[0];\n    let leftRightStyle = {\n      color: sliderSetting.leftRightTrigger.color,\n      backgroundColor: sliderSetting.leftRightTrigger.backgroundColor,\n      fontSize: sliderSetting.leftRightTrigger.fontSize,\n    };\n    let trigStyle = `height: ${sliderSetting.linearTrigger.fontSize}px;width:${sliderSetting.linearTrigger.fontSize}px;background-color: ${sliderSetting.linearTrigger.color};`;\n    let trigStyleObj = {\n      height: sliderSetting.linearTrigger.fontSize + \"px\",\n      width: sliderSetting.linearTrigger.fontSize + \"px\",\n      backgroundColor: sliderSetting.linearTrigger.color,\n    };\n\n    let sliderSettingJson = {};\n    if (sliderSetting.dimension.width)\n      sliderSettingJson = {\n        ...sliderSettingJson,\n        ...{ width: sliderSetting.dimension.custom_width },\n      };\n    if (sliderSetting.dimension.height)\n      sliderSettingJson = {\n        ...sliderSettingJson,\n        ...{ height: sliderSetting.dimension.custom_height },\n      };\n    sliderSettingJson = JSON.stringify(sliderSettingJson);\n    return (\n      <div className=\"zita-block-slide-wrapper\">\n        <div\n          className=\"zita-slider-container\"\n          sliderDelay={\n            sliderSetting.autoTrigger.delay > 0 &&\n            sliderSetting.autoTrigger.enable\n              ? sliderSetting.autoTrigger.delay\n              : 0\n          }\n        >\n          {sliderSetting.linearTrigger.enable && (\n            <ul\n              className=\"zita-slider-bullet-trigger\"\n              active-color={sliderSetting.linearTrigger.activeColor}\n              childStyle={trigStyle}\n            >\n              {slides.map((val, index_) => {\n                return (\n                  <li className={`${index_ == 0 ? \"selected_\" : \"\"}`}>\n                    <span style={trigStyleObj}></span>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {/* next prev btn */}\n          {sliderSetting.leftRightTrigger.enable && (\n            <>\n              <div className=\"zita-slider-bullet-next-prev next\">\n                <span style={leftRightStyle}>\n                  <i class=\"fas fa-arrow-right\"></i>\n                </span>\n              </div>\n              <div className=\"zita-slider-bullet-next-prev prev\">\n                <span style={leftRightStyle}>\n                  <i class=\"fas fa-arrow-left\"></i>\n                </span>\n              </div>\n            </>\n          )}\n          {/* slider main slides */}\n          <ul\n            className={`zita-slider-ul-slides ${sliderSetting.sliderEffect}`}\n            sliderSetting={sliderSettingJson}\n          >\n            {/* {sliderSetting.sliderEffect == \"slideEffect\" &&\n              elementLiSlide(\n                slides[slides.length - 1],\n                slides.length - 1,\n                \"clone_ last_\"\n              )} */}\n            {slides.map((val, index_) => {\n              return elementLiSlide(val, index_);\n            })}\n            {/* {sliderSetting.sliderEffect == \"slideEffect\" &&\n              elementLiSlide(slides[0], 0, \"clone_ first_\")} */}\n          </ul>\n        </div>\n      </div>\n    );\n  },\n});\n","import {\n  RichText,\n  InspectorControls,\n  ColorPalette,\n  MediaUpload,\n} from \"@wordpress/block-editor\";\nimport {\n  PanelBody,\n  RangeControl,\n  ColorPicker,\n  ToggleControl,\n  SelectControl,\n} from \"@wordpress/components\";\nimport { Component } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport { decodeEntities } from \"@wordpress/html-entities\";\n\nlet bgImageWrapper = plugin_url.url + \"assets/img/image2.jpg\";\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { slideIndex: 0, trigger: \"linear\" };\n  }\n  dateFormate = (date) => {\n    let date_ = date.split(\"T\")[0];\n    let dateObj = new Date(date_);\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let dateArr =\n      monthNames[dateObj.getMonth()] +\n      \" \" +\n      dateObj.getDate() +\n      \", \" +\n      dateObj.getFullYear();\n    return <RichText.Content tag=\"span\" value={dateArr} />;\n  };\n  excerptWords = (words, words_) => {\n    words_ = decodeEntities(words_);\n    words_ = words_.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    words_ = words_.split(\" \");\n    words_ = words_.slice(0, words);\n    return words_.join(\" \");\n  };\n  showCateFn = (categories) => {\n    let returR = [];\n    if (\"category\" in this.props && this.props.category && categories.length) {\n      categories.forEach((cate) => {\n        this.props.category.forEach((searchCate) => {\n          if (cate == searchCate.id) {\n            returR.push(searchCate.name);\n            return;\n          }\n        });\n      });\n    }\n    if (returR.length) {\n      return returR.map((returnH) => <span>{returnH}</span>);\n    }\n  };\n  showTagsFn = (tags_) => {\n    let returR = [];\n    if (\"tags\" in this.props && this.props.tags && tags_.length) {\n      tags_.forEach((tag) => {\n        this.props.tags.forEach((searchtag) => {\n          if (tag == searchtag.id) {\n            returR.push(searchtag.name);\n            return;\n          }\n        });\n      });\n    }\n    if (returR.length) {\n      return returR.map((returnH) => <span>{returnH}</span>);\n    }\n  };\n  // autor\n  authorFn = (author) => {\n    // console.log(\"wordkinggg\");\n    let retur = {};\n    if (\"authors\" in this.props) {\n      this.props.authors.map((authorDetail) => {\n        if (authorDetail.id == author) {\n          retur = authorDetail;\n          return;\n        }\n      });\n    }\n    return retur;\n  };\n  updateObj = (parent_key, child_key, initialValue, value_) => {\n    let newNewValue = [...initialValue];\n    newNewValue[0][child_key] = value_;\n    let setAttr_ = {};\n    setAttr_[parent_key] = newNewValue;\n    this.props.setAttributes(setAttr_);\n  };\n  updateGlobalSlide = (value, for_, type) => {\n    let sliderSetting = this.props.attributes.sliderSetting;\n    let newSetting = [...sliderSetting];\n    if (type) {\n      newSetting[0][for_][type] = value;\n    } else {\n      newSetting[0][for_] = value;\n    }\n    this.props.setAttributes({ sliderSetting: newSetting });\n  };\n  render() {\n    let { attributes, setAttributes, posts, category } = this.props;\n    let { slideIndex } = this.state;\n    // console.log(\"zita slider this.props\", this.props);\n    let {\n      heading,\n      author,\n      numberOfPosts,\n      date,\n      showTag,\n      showCate,\n      excerpt,\n      postCategories,\n      meta_style,\n      title,\n      sliderSetting,\n      // overlayColor,\n    } = attributes;\n    let heading_ = heading[0];\n    let excerpt_ = excerpt[0];\n    let date_ = date[0];\n    let author_ = author[0];\n    let meta_style_ = meta_style[0];\n    let title_ = title[0];\n    let showTag_ = showTag[0];\n    let showCate_ = showCate[0];\n    let cateGory = [{ value: \"all\", label: \"All\" }];\n    if (category && category.length) {\n      category.map((catt) => {\n        cateGory.push({\n          value: catt.id,\n          label: catt.name,\n        });\n      });\n    }\n    sliderSetting = sliderSetting[0];\n    let SlideulStyle = null;\n    if (sliderSetting.dimension.height) {\n      SlideulStyle = { minHeight: sliderSetting.dimension.custom_height };\n    }\n    let leftRightStyle = {\n      color: sliderSetting.leftRightTrigger.color,\n      backgroundColor: sliderSetting.leftRightTrigger.backgroundColor,\n      fontSize: sliderSetting.leftRightTrigger.fontSize,\n    };\n    let triggerActive = this.state.trigger;\n    let trigStyle = {\n      height: sliderSetting.linearTrigger.fontSize + \"px\",\n      width: sliderSetting.linearTrigger.fontSize + \"px\",\n    };\n\n    return [\n      <InspectorControls>\n        <PanelBody title={\"Slider Setting\"} initialOpen={false}>\n          <p className=\"block-inside\">Slider Dimension</p>\n          <p>\n            <strong>Width</strong>\n          </p>\n          <ToggleControl\n            label={\n              sliderSetting.dimension.width ? \"Full Width\" : \"Custom Width\"\n            }\n            checked={sliderSetting.dimension.width}\n            onChange={(e) => {\n              this.updateGlobalSlide(e, \"dimension\", \"width\");\n            }}\n          />\n          {sliderSetting.dimension.width && (\n            <RangeControl\n              label=\"Width\"\n              value={sliderSetting.dimension.custom_width}\n              min={200}\n              max={1400}\n              onChange={(e) =>\n                this.updateGlobalSlide(e, \"dimension\", \"custom_width\")\n              }\n            />\n          )}\n          <p>\n            <strong>Height</strong>\n          </p>\n          <ToggleControl\n            label={sliderSetting.dimension.width ? \"Auto\" : \"Custom Height\"}\n            checked={sliderSetting.dimension.height}\n            onChange={(e) => {\n              this.updateGlobalSlide(e, \"dimension\", \"height\");\n            }}\n          />\n          {sliderSetting.dimension.height && (\n            <RangeControl\n              label=\"Height\"\n              value={sliderSetting.dimension.custom_height}\n              min={360}\n              max={1000}\n              onChange={(e) =>\n                this.updateGlobalSlide(e, \"dimension\", \"custom_height\")\n              }\n            />\n          )}\n          <p className=\"block-inside\">Slider Effect</p>\n          <div class=\"zita-switcher-button-section\">\n            <span\n              onClick={() =>\n                this.updateGlobalSlide(\"slideEffect\", \"sliderEffect\")\n              }\n              className={\n                sliderSetting.sliderEffect == \"slideEffect\" ? \"selected\" : \"\"\n              }\n            >\n              Slide\n            </span>\n            <span\n              onClick={() =>\n                this.updateGlobalSlide(\"fadeEffect\", \"sliderEffect\")\n              }\n              className={\n                sliderSetting.sliderEffect == \"fadeEffect\" ? \"selected\" : \"\"\n              }\n            >\n              Fade\n            </span>\n          </div>\n          <p className=\"block-inside\">Trigger</p>\n          <div class=\"zita-switcher-button-section\">\n            <span\n              onClick={() => this.setState({ trigger: \"linear\" })}\n              className={triggerActive == \"linear\" ? \"selected\" : \"\"}\n            >\n              Linear\n            </span>\n            <span\n              onClick={() => this.setState({ trigger: \"left\" })}\n              className={triggerActive == \"left\" ? \"selected\" : \"\"}\n            >\n              Left Right\n            </span>\n            <span\n              onClick={() => this.setState({ trigger: \"auto\" })}\n              className={triggerActive == \"auto\" ? \"selected\" : \"\"}\n            >\n              Auto\n            </span>\n          </div>\n          {triggerActive == \"linear\" && (\n            <>\n              <ToggleControl\n                label={\n                  sliderSetting.linearTrigger.enable ? \"Disable\" : \"Enable\"\n                }\n                checked={sliderSetting.linearTrigger.enable}\n                onChange={(e) =>\n                  this.updateGlobalSlide(e, \"linearTrigger\", \"enable\")\n                }\n              />\n              <p>\n                <strong>Position</strong>\n              </p>\n              <div class=\"zita-switcher-button-section\">\n                <span\n                  onClick={() => {\n                    this.updateGlobalSlide(\"in\", \"linearTrigger\", \"place\");\n                  }}\n                  className={\n                    sliderSetting.linearTrigger.place == \"in\" ? \"selected\" : \"\"\n                  }\n                >\n                  In\n                </span>\n                <span\n                  onClick={() => {\n                    this.updateGlobalSlide(\"out\", \"linearTrigger\", \"place\");\n                  }}\n                  className={\n                    sliderSetting.linearTrigger.place == \"out\" ? \"selected\" : \"\"\n                  }\n                >\n                  Out\n                </span>\n              </div>\n              <p>\n                <strong>Trigger Type</strong>\n              </p>\n              {sliderSetting.linearTrigger.enable && (\n                <>\n                  {/* dk */}\n                  <div class=\"zita-switcher-button-section\">\n                    <span\n                      onClick={() => {\n                        this.updateGlobalSlide(\n                          \"bullet\",\n                          \"linearTrigger\",\n                          \"trigger\"\n                        );\n                      }}\n                      className={\n                        sliderSetting.linearTrigger.trigger == \"bullet\"\n                          ? \"selected\"\n                          : \"\"\n                      }\n                    >\n                      Bullets\n                    </span>\n                    <span\n                      onClick={() => {\n                        this.updateGlobalSlide(\n                          \"thumbnail\",\n                          \"linearTrigger\",\n                          \"trigger\"\n                        );\n                      }}\n                      className={\n                        sliderSetting.linearTrigger.trigger == \"thumbnail\"\n                          ? \"selected\"\n                          : \"\"\n                      }\n                    >\n                      Thumbnail\n                    </span>\n                  </div>\n                  {/* dk */}\n                  {sliderSetting.linearTrigger.trigger == \"bullet\" ? (\n                    <>\n                      <RangeControl\n                        label=\"Size\"\n                        value={sliderSetting.linearTrigger.fontSize}\n                        min={0}\n                        max={70}\n                        onChange={(e) =>\n                          this.updateGlobalSlide(e, \"linearTrigger\", \"fontSize\")\n                        }\n                      />\n                      <p>\n                        <strong>Color</strong>\n                      </p>\n                      <ColorPicker\n                        color={sliderSetting.linearTrigger.color}\n                        onChangeComplete={(colorBg) => {\n                          let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                          this.updateGlobalSlide(\n                            color,\n                            \"linearTrigger\",\n                            \"color\"\n                          );\n                        }}\n                      />\n                      <p>\n                        <strong>Active Color</strong>\n                      </p>\n                      <ColorPicker\n                        color={sliderSetting.linearTrigger.activeColor}\n                        onChangeComplete={(colorBg) => {\n                          let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                          this.updateGlobalSlide(\n                            color,\n                            \"linearTrigger\",\n                            \"activeColor\"\n                          );\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <h1>thumbnail design</h1>\n                  )}\n                </>\n              )}\n            </>\n          )}\n          {triggerActive == \"left\" && (\n            <>\n              <ToggleControl\n                label={\n                  sliderSetting.leftRightTrigger.enable ? \"Disable\" : \"Enable\"\n                }\n                checked={sliderSetting.leftRightTrigger.enable}\n                onChange={(e) =>\n                  this.updateGlobalSlide(e, \"leftRightTrigger\", \"enable\")\n                }\n              />\n              {sliderSetting.leftRightTrigger.enable && (\n                <>\n                  <RangeControl\n                    label=\"Font Size\"\n                    value={sliderSetting.leftRightTrigger.fontSize}\n                    min={0}\n                    max={70}\n                    onChange={(e) =>\n                      this.updateGlobalSlide(e, \"leftRightTrigger\", \"fontSize\")\n                    }\n                  />\n                  <p>\n                    <strong>Color</strong>\n                  </p>\n                  <ColorPalette\n                    value={sliderSetting.leftRightTrigger.color}\n                    onChange={(color) =>\n                      this.updateGlobalSlide(color, \"leftRightTrigger\", \"color\")\n                    }\n                  />\n                  <p>\n                    <strong>Background Color</strong>\n                  </p>\n                  <ColorPicker\n                    color={sliderSetting.leftRightTrigger.backgroundColor}\n                    onChangeComplete={(colorBg) => {\n                      let color = `rgba(${colorBg.rgb.r},${colorBg.rgb.g},${colorBg.rgb.b},${colorBg.rgb.a})`;\n                      this.updateGlobalSlide(\n                        color,\n                        \"leftRightTrigger\",\n                        \"backgroundColor\"\n                      );\n                    }}\n                  />\n                </>\n              )}\n            </>\n          )}\n          {triggerActive == \"auto\" && (\n            <>\n              <ToggleControl\n                label={sliderSetting.autoTrigger.enable ? \"Disable\" : \"Enable\"}\n                checked={sliderSetting.autoTrigger.enable}\n                onChange={(e) =>\n                  this.updateGlobalSlide(e, \"autoTrigger\", \"enable\")\n                }\n              />\n              {sliderSetting.autoTrigger.enable && (\n                <RangeControl\n                  label=\"Slide Delay\"\n                  value={sliderSetting.autoTrigger.delay}\n                  min={0}\n                  max={12}\n                  onChange={(e) =>\n                    this.updateGlobalSlide(e, \"autoTrigger\", \"delay\")\n                  }\n                />\n              )}\n            </>\n          )}\n        </PanelBody>\n        <PanelBody title={\"Post Setting\"} initialOpen={false}>\n          <p>\n            <strong>No of Post Display</strong>\n          </p>\n          <RangeControl\n            value={numberOfPosts}\n            min={1}\n            max={20}\n            onChange={(e) => {\n              setAttributes({ numberOfPosts: e });\n            }}\n          />\n          <p>\n            <strong>Choose Category</strong>\n          </p>\n          <div className=\"zita-multiple-select\">\n            <SelectControl\n              multiple\n              value={postCategories.length ? postCategories : [\"all\"]}\n              onChange={(choosen) => {\n                let chooseAll = choosen.filter((choose) => {\n                  if (choose == \"all\") return true;\n                });\n                if (chooseAll.length) choosen = [];\n                setAttributes({ postCategories: choosen });\n              }}\n              options={cateGory}\n            />\n          </div>\n          {/* show author */}\n          <ToggleControl\n            label=\"Author\"\n            checked={author_.enable}\n            onChange={(e) => this.updateObj(\"author\", \"enable\", author, e)}\n          />\n          {/* show date */}\n          <ToggleControl\n            label=\"Date\"\n            checked={date_.enable}\n            onChange={(e) => this.updateObj(\"date\", \"enable\", date, e)}\n          />\n          <ToggleControl\n            label=\"Categories\"\n            checked={showCate_.enable}\n            onChange={(e) => this.updateObj(\"showCate\", \"enable\", showCate, e)}\n          />\n          {/* show last date */}\n          <ToggleControl\n            label=\"Last Modified Date\"\n            checked={date_.last_modified}\n            onChange={(e) => this.updateObj(\"date\", \"last_modified\", date, e)}\n          />\n          <ToggleControl\n            label=\"Tag\"\n            checked={showTag_.enable}\n            onChange={(e) => this.updateObj(\"showTag\", \"enable\", showTag, e)}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={\"color\" in meta_style_ ? meta_style_.color : \"\"}\n            onChange={(color) =>\n              this.updateObj(\"meta_style\", \"color\", meta_style, color)\n            }\n          />\n        </PanelBody>\n        <PanelBody title=\"Excerpt\" initialOpen={false}>\n          <ToggleControl\n            label={excerpt_.enable ? \"Hide\" : \"Show\"}\n            checked={excerpt_.enable}\n            onChange={(e) => this.updateObj(\"excerpt\", \"enable\", excerpt, e)}\n          />\n          {excerpt_.enable && (\n            <>\n              <p>\n                <strong>Number of words</strong>\n              </p>\n              <RangeControl\n                value={excerpt_.words}\n                min={1}\n                max={200}\n                onChange={(e) => this.updateObj(\"excerpt\", \"words\", excerpt, e)}\n              />\n            </>\n          )}\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={excerpt_.color}\n            onChange={(color) =>\n              this.updateObj(\"excerpt\", \"color\", excerpt, color)\n            }\n          />\n        </PanelBody>\n        <PanelBody title=\"Heading\" initialOpen={false}>\n          <p>\n            <strong>Heading Tag</strong>\n          </p>\n          <select\n            value={heading_.tag}\n            className=\"zita-block-select\"\n            onChange={(e) => {\n              let value_ = e.target.value;\n              let font_ =\n                value_ == \"h1\"\n                  ? 30\n                  : value_ == \"h2\"\n                  ? 25\n                  : value_ == \"h3\"\n                  ? 20\n                  : 17;\n              let newHeading = [...heading];\n              newHeading[0][\"tag\"] = value_;\n              newHeading[0][\"fontSize\"] = font_;\n              setAttributes({ heading: newHeading });\n            }}\n          >\n            <option value=\"h1\">H1</option>\n            <option value=\"h2\">H2</option>\n            <option value=\"h3\">H3</option>\n            <option value=\"p\">P</option>\n          </select>\n          <p>\n            <strong>Font Size</strong>\n          </p>\n          <RangeControl\n            value={heading_.fontSize}\n            min={1}\n            max={50}\n            onChange={(e) => this.updateObj(\"heading\", \"fontSize\", heading, e)}\n          />\n          <p>\n            <strong>Color</strong>\n          </p>\n          <ColorPalette\n            value={heading_.color}\n            onChange={(color) =>\n              this.updateObj(\"heading\", \"color\", heading, color)\n            }\n          />\n        </PanelBody>\n      </InspectorControls>,\n      <div className=\"zita-block-slide-wrapper\">\n        <div className=\"zita-slider-bullet\">\n          <ul className=\"zita-slider-ul-bullet\">\n            {posts &&\n              posts.length > 0 &&\n              \"getMedia_\" in posts[0] &&\n              posts.map((val, index_) => {\n                return (\n                  \"getMedia_\" in val &&\n                  val.getMedia_ &&\n                  \"guid\" in val.getMedia_ && (\n                    <li\n                      key={index_}\n                      className={slideIndex == index_ ? \"selected_\" : null}\n                    >\n                      <span\n                        onClick={(e) => {\n                          this.setState({ slideIndex: index_ });\n                        }}\n                      ></span>\n                    </li>\n                  )\n                );\n              })}\n          </ul>\n        </div>\n        <div className=\"zita-slider-container\">\n          {/* next prev btn */}\n          {sliderSetting.leftRightTrigger.enable && (\n            <>\n              <div className=\"zita-slider-bullet-next-prev next\">\n                <span style={leftRightStyle}>\n                  <i class=\"fas fa-arrow-right\"></i>\n                </span>\n              </div>\n              <div className=\"zita-slider-bullet-next-prev prev\">\n                <span style={leftRightStyle}>\n                  <i class=\"fas fa-arrow-left\"></i>\n                </span>\n              </div>\n            </>\n          )}\n          {/* next prev btn */}\n          <ul className=\"zita-slider-ul-slides\" style={SlideulStyle}>\n            {posts && posts.length > 0 && \"getMedia_\" in posts[0] ? (\n              posts.map((post, slideIndexCu) => {\n                let postAuthor =\n                  author_.enable && \"name\" in this.authorFn(post.author)\n                    ? this.authorFn(post.author).name\n                    : false;\n                return (\n                  \"getMedia_\" in post &&\n                  post.getMedia_ &&\n                  \"guid\" in post.getMedia_ && (\n                    <li\n                      key={post.id}\n                      className={slideIndex == slideIndexCu && \"selected_\"}\n                    >\n                      <div class=\"zita-slider-wrapper\">\n                        <div class=\"zita-slider-container\">\n                          <div class=\"zita-slider-content-wrapper\">\n                            <div\n                              class=\"zita-slider-image-container\"\n                              style={{\n                                backgroundImage:\n                                  \"url(\" + post.getMedia_.guid.rendered + \")\",\n                              }}\n                            ></div>\n                            <div class=\"zita-slider-text\">\n                              <div className=\"slider-post-content\">\n                                <div className=\"post-wrapper\">\n                                  <div className=\"post-content\">\n                                    <RichText.Content\n                                      className=\"post-heading\"\n                                      tagName={heading_.tag}\n                                      value={post.title.rendered}\n                                      style={{\n                                        fontSize: heading_.fontSize,\n                                        color: heading_.color,\n                                      }}\n                                    />\n                                    {showCate_.enable && (\n                                      <p className=\"post-category\">\n                                        {this.showCateFn(post.categories)}\n                                      </p>\n                                    )}\n                                    <div className=\"post-meta-all\">\n                                      {postAuthor && (\n                                        <p\n                                          style={{ color: meta_style_.color }}\n                                          className=\"post-author\"\n                                        >\n                                          {postAuthor}\n                                        </p>\n                                      )}\n                                      {date_.enable && (\n                                        <>\n                                          <span className=\"slash\">/</span>\n                                          <p\n                                            style={{ color: meta_style_.color }}\n                                            className=\"post-date\"\n                                          >\n                                            {this.dateFormate(post.date)}\n                                          </p>\n                                        </>\n                                      )}\n                                      {date_.last_modified && (\n                                        <>\n                                          <span className=\"slash\">/</span>\n                                          <p\n                                            style={{ color: meta_style_.color }}\n                                            className=\"post-date-last-modified\"\n                                          >\n                                            <span>Modified: </span>\n                                            {this.dateFormate(post.modified)}\n                                          </p>\n                                        </>\n                                      )}\n                                    </div>\n                                    {excerpt_.enable && (\n                                      <p\n                                        style={{ color: excerpt_.color }}\n                                        className=\"post-excerpt\"\n                                      >\n                                        {this.excerptWords(\n                                          excerpt_.words,\n                                          post.excerpt.rendered\n                                        )}\n                                      </p>\n                                    )}\n                                    {showTag_.enable && (\n                                      <p\n                                        style={{ color: meta_style_.color }}\n                                        className=\"post-tags\"\n                                      >\n                                        {this.showTagsFn(post.tags)}\n                                      </p>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                  )\n                );\n              })\n            ) : !posts ? (\n              <h1>No Post Found </h1>\n            ) : (\n              <h1>Loading </h1>\n            )}\n          </ul>\n          {/* slider trigger */}\n          {sliderSetting.linearTrigger.enable &&\n            posts &&\n            posts.length > 0 &&\n            \"getMedia_\" in posts[0] && (\n              <ul\n                className={`zita-slider-bullet-trigger thumbnail-image trigger_${sliderSetting.linearTrigger.place}`}\n              >\n                {posts.map((post, index_) => {\n                  trigStyle =\n                    index_ != slideIndex\n                      ? {\n                          ...trigStyle,\n                          ...{\n                            backgroundColor: sliderSetting.linearTrigger.color,\n                          },\n                        }\n                      : {\n                          ...trigStyle,\n                          ...{\n                            backgroundColor:\n                              sliderSetting.linearTrigger.activeColor,\n                          },\n                        };\n                  return (\n                    \"getMedia_\" in post &&\n                    post.getMedia_ &&\n                    \"guid\" in post.getMedia_ &&\n                    (sliderSetting.linearTrigger.trigger == \"thumbnail\" ? (\n                      <li>\n                        <div>\n                          <img src={post.getMedia_.guid.rendered} />\n                        </div>\n                      </li>\n                    ) : (\n                      <li\n                        className={`${index_ == slideIndex ? \"selected_\" : \"\"}`}\n                      >\n                        <span style={trigStyle}></span>\n                      </li>\n                    ))\n                  );\n                })}\n              </ul>\n            )}\n        </div>\n      </div>,\n    ];\n  }\n}\nexport default withSelect((select, props) => {\n  const { attributes } = props;\n  let { numberOfPosts, postCategories } = attributes;\n  const query = { per_page: numberOfPosts };\n  if (postCategories && postCategories.length) {\n    query[\"categories\"] = postCategories.join(\",\");\n  }\n  const { getMedia, getEntityRecords, getAuthors } = select(\"core\");\n  let getAllPost = getEntityRecords(\"postType\", \"post\", query);\n  let cate_ = getEntityRecords(\"taxonomy\", \"category\", { per_page: -1 });\n  let tags_ = getEntityRecords(\"taxonomy\", \"post_tag\", { per_page: -1 });\n  let arrayCatePost = { posts: true, category: cate_, tags: tags_ };\n  if (getAllPost && getAllPost.length) {\n    let returnArray = [];\n    getAllPost.map((v, index_) => {\n      if (v.featured_media) {\n        getAllPost[index_][\"getMedia_\"] = getMedia(v.featured_media);\n      } else {\n        getAllPost[index_][\"getMedia_\"] = false;\n      }\n      returnArray.push(getAllPost[index_]);\n    });\n    arrayCatePost[\"posts\"] = returnArray;\n  } else if (getAllPost instanceof Array && getAllPost.length == 0) {\n    arrayCatePost[\"posts\"] = false;\n  }\n  // autohrs\n  let authors = getAuthors();\n  if (authors && authors.length) {\n    let authors_ = [];\n    authors.map((v) => {\n      authors_.push({ id: v.id, name: v.name });\n    });\n    arrayCatePost[\"authors\"] = authors_;\n  }\n  return arrayCatePost;\n})(Edit);\n","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nconst attrSave = {};\nregisterBlockType(\"zita-blocks/zita-post-slider\", {\n  title: \"Post Slider\",\n  icon: \"format-aside\",\n  category: \"zita-category\",\n  getEditWrapperProps(attributes) {\n    let { sliderSetting } = attributes;\n    let sliderWidth = sliderSetting[0].dimension;\n    let attr_ = { \"data-align\": \"full\" };\n    if (sliderWidth.width && sliderWidth.custom_width) {\n      attr_ = {\n        ...attr_,\n        ...{\n          style: { maxWidth: sliderWidth.custom_width + \"px\" },\n        },\n      };\n    }\n    return attr_;\n  },\n  keywords: [\"post\", \"post slider\"],\n  // attributes: attrSave,\n  edit: Edit,\n  save: () => {\n    return null;\n  },\n});\n","import { Component } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport {\n  InspectorControls,\n  RichText,\n  ColorPalette,\n} from \"@wordpress/block-editor\";\nimport {\n  PanelBody,\n  RangeControl,\n  ToggleControl,\n  SelectControl,\n} from \"@wordpress/components\";\nimport { decodeEntities } from \"@wordpress/html-entities\";\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      metaChoose: \"primary\",\n      excerpt: \"primary\",\n      heading: \"primary\",\n    };\n  }\n  updateObj = (parent_key, child_key, initialValue, value_) => {\n    let newNewValue = [...initialValue];\n    newNewValue[0][child_key] = value_;\n    let setAttr_ = {};\n    setAttr_[parent_key] = newNewValue;\n    this.props.setAttributes(setAttr_);\n  };\n  dateFormate = (date) => {\n    let date_ = date.split(\"T\")[0];\n    let dateObj = new Date(date_);\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let dateArr =\n      monthNames[dateObj.getMonth()] +\n      \" \" +\n      dateObj.getDate() +\n      \", \" +\n      dateObj.getFullYear();\n    return <RichText.Content tag=\"span\" value={dateArr} />;\n  };\n  excerptWords = (words, words_) => {\n    words_ = decodeEntities(words_);\n    words_ = words_.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    words_ = words_.split(\" \");\n    words_ = words_.slice(0, words);\n    words_ = words_.join(\" \");\n    // words_ = decodeEntities(words_);\n    return words_;\n  };\n  showCateFn = (categories) => {\n    let returR = [];\n    if (\"category\" in this.props && this.props.category && categories.length) {\n      categories.forEach((cate) => {\n        this.props.category.forEach((searchCate) => {\n          if (cate == searchCate.id) {\n            returR.push(searchCate.name);\n            return;\n          }\n        });\n      });\n    }\n    if (returR.length) {\n      return returR.map((returnH) => <span>{returnH}</span>);\n    }\n  };\n  showTagsFn = (tags_) => {\n    let returR = [];\n    if (\"tags\" in this.props && this.props.tags && tags_.length) {\n      tags_.forEach((tag) => {\n        this.props.tags.forEach((searchtag) => {\n          if (tag == searchtag.id) {\n            returR.push(searchtag.name);\n            return;\n          }\n        });\n      });\n    }\n    if (returR.length) {\n      return returR.map((returnH) => <span>{returnH}</span>);\n    }\n  };\n  // autor\n  authorFn = (author) => {\n    let retur = {};\n    if (\"authors\" in this.props) {\n      this.props.authors.map((authorDetail) => {\n        if (authorDetail.id == author) {\n          retur = authorDetail;\n          return;\n        }\n      });\n    }\n    return retur;\n  };\n  returnHtml = (\n    post,\n    heading_,\n    author_,\n    date_,\n    meta_style_,\n    thumbnail_,\n    showCate_,\n    excerpt_,\n    showTag_\n  ) => {\n    let postAuthor =\n      author_ && author_.enable && \"name\" in this.authorFn(post.author)\n        ? this.authorFn(post.author).name\n        : false;\n    return (\n      <article className=\"block-post-article\" key={post.id}>\n        <div className=\"post-wrapper\">\n          {\"getMedia_\" in post &&\n            post.getMedia_ &&\n            \"guid\" in post.getMedia_ &&\n            thumbnail_.enable && (\n              <div className=\"featured-image\">\n                <img\n                  style={{\n                    borderRadius: thumbnail_.borderRadius + \"px\",\n                  }}\n                  src={post.getMedia_.guid.rendered}\n                />\n              </div>\n            )}\n          <div className=\"post-content\">\n            {showCate_ && showCate_.enable && (\n              <p className=\"post-category\">\n                {this.showCateFn(post.categories)}\n              </p>\n            )}\n            <RichText.Content\n              className=\"post-heading\"\n              tagName={heading_.tag}\n              value={post.title.rendered}\n              style={{\n                fontSize: heading_.fontSize,\n                color: heading_.color,\n              }}\n            />\n            <div className=\"post-meta-all\">\n              {postAuthor && (\n                <p style={{ color: meta_style_.color }} className=\"post-author\">\n                  {postAuthor}\n                </p>\n              )}\n              {date_.enable && (\n                <>\n                  <span className=\"slash\">/</span>\n                  <p style={{ color: meta_style_.color }} className=\"post-date\">\n                    {this.dateFormate(post.date)}\n                  </p>\n                </>\n              )}\n              {date_.last_modified && (\n                <>\n                  <span className=\"slash\">/</span>\n                  <p\n                    style={{ color: meta_style_.color }}\n                    className=\"post-date-last-modified\"\n                  >\n                    <span>Modified: </span>\n                    {this.dateFormate(post.modified)}\n                  </p>\n                </>\n              )}\n            </div>\n            {excerpt_ && excerpt_.enable && (\n              <p style={{ color: excerpt_.color }} className=\"post-excerpt\">\n                {this.excerptWords(excerpt_.words, post.excerpt.rendered)}\n                <span className=\"read-more\">...Read More</span>\n              </p>\n            )}\n            {showTag_ && showTag_.enable && (\n              <p style={{ color: meta_style_.color }} className=\"post-tags\">\n                {this.showTagsFn(post.tags)}\n              </p>\n            )}\n          </div>\n        </div>\n      </article>\n    );\n  };\n  render() {\n    const {\n      posts,\n      attributes,\n      setAttributes,\n      category,\n      totalPost,\n    } = this.props;\n    console.log(\"this.props\", this.props);\n    // return <h1>This is Two Column Block</h1>;\n    let {\n      heading,\n      author,\n      numberOfPosts,\n      thumbnail,\n      date,\n      showTag,\n      showCate,\n      excerpt,\n      heading2,\n      excerpt2,\n      author2,\n      date2,\n      showCate2,\n      postCategories,\n      meta_style,\n      title,\n    } = attributes;\n    let heading_ = heading[0];\n    let thumbnail_ = thumbnail[0];\n    let excerpt_ = excerpt[0];\n    let date_ = date[0];\n    let author_ = author[0];\n    let meta_style_ = meta_style[0];\n    let title_ = title[0];\n    let showTag_ = showTag[0];\n    let showCate_ = showCate[0];\n    // secondary\n\n    let heading2_ = heading2[0];\n    let excerpt2_ = excerpt2[0];\n    let showCate2_ = showCate2[0];\n    let date2_ = date2[0];\n    let author2_ = author2[0];\n    // category init\n    let cateGory = [{ value: \"all\", label: \"All\" }];\n    if (category && category.length) {\n      category.map((catt) => {\n        cateGory.push({\n          value: catt.id,\n          label: catt.name,\n        });\n      });\n    }\n    return (\n      <>\n        <InspectorControls>\n          <PanelBody title=\"Post Layout\" initialOpen={false}>\n            <p className=\"block-inside\">Block Title</p>\n            <ToggleControl\n              label={title_.enable ? \"Hide\" : \"Show\"}\n              checked={title_.enable}\n              onChange={(e) => this.updateObj(\"title\", \"enable\", title, e)}\n            />\n            {title_.enable && (\n              <>\n                <RangeControl\n                  label=\"Font Size\"\n                  value={title_.fontSize}\n                  min={5}\n                  max={50}\n                  onChange={(e) => {\n                    this.updateObj(\"title\", \"fontSize\", title, e);\n                  }}\n                />\n                <p>\n                  <strong>Color</strong>\n                </p>\n                <ColorPalette\n                  value={title_.color}\n                  onChange={(color) =>\n                    this.updateObj(\"title\", \"color\", title, color)\n                  }\n                />\n              </>\n            )}\n            <p>\n              <strong>No of Post Display</strong>\n            </p>\n            <RangeControl\n              value={numberOfPosts}\n              min={1}\n              max={20}\n              onChange={(e) => {\n                setAttributes({ numberOfPosts: e });\n              }}\n            />\n            {/* featured image */}\n            <p className=\"block-inside\">Featured Image</p>\n            <ToggleControl\n              label={thumbnail_.enable ? \"Hide\" : \"Show\"}\n              checked={thumbnail_.enable}\n              onChange={(e) =>\n                this.updateObj(\"thumbnail\", \"enable\", thumbnail, e)\n              }\n            />\n            {thumbnail_.enable && (\n              <>\n                <p>\n                  <strong>Border Radius</strong>\n                </p>\n                <RangeControl\n                  value={thumbnail_.borderRadius}\n                  min={0}\n                  max={80}\n                  onChange={(e) =>\n                    this.updateObj(\"thumbnail\", \"borderRadius\", thumbnail, e)\n                  }\n                />\n              </>\n            )}\n            {/* featured image */}\n          </PanelBody>\n          <PanelBody title=\"Post Meta\" initialOpen={false}>\n            {/* category */}\n            <p>\n              <strong>Choose Category</strong>\n            </p>\n            <div className=\"zita-multiple-select\">\n              <SelectControl\n                multiple\n                value={postCategories.length ? postCategories : [\"all\"]}\n                onChange={(choosen) => {\n                  let chooseAll = choosen.filter((choose) => {\n                    if (choose == \"all\") return true;\n                  });\n                  if (chooseAll.length) choosen = [];\n                  setAttributes({ postCategories: choosen });\n                }}\n                options={cateGory}\n              />\n            </div>\n            {/* category */}\n            {/* primery and secondary */}\n            <div class=\"zita-switcher-button-section\">\n              <span\n                onClick={() => this.setState({ metaChoose: \"primary\" })}\n                className={this.state.metaChoose == \"primary\" ? \"selected\" : \"\"}\n              >\n                Primary\n              </span>\n              <span\n                onClick={() => this.setState({ metaChoose: \"secondary\" })}\n                className={\n                  this.state.metaChoose == \"secondary\" ? \"selected\" : \"\"\n                }\n              >\n                Secondary\n              </span>\n            </div>\n            {/* show author */}\n            {this.state.metaChoose == \"primary\" ? (\n              <>\n                <ToggleControl\n                  label=\"Author\"\n                  checked={author_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"author\", \"enable\", author, e)\n                  }\n                />\n                {/* show date */}\n                <ToggleControl\n                  label=\"Date\"\n                  checked={date_.enable}\n                  onChange={(e) => this.updateObj(\"date\", \"enable\", date, e)}\n                />\n                <ToggleControl\n                  label=\"Categories\"\n                  checked={showCate_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"showCate\", \"enable\", showCate, e)\n                  }\n                />\n                {/* show last date */}\n                <ToggleControl\n                  label=\"Last Modified Date\"\n                  checked={date_.last_modified}\n                  onChange={(e) =>\n                    this.updateObj(\"date\", \"last_modified\", date, e)\n                  }\n                />\n                <ToggleControl\n                  label=\"Tag\"\n                  checked={showTag_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"showTag\", \"enable\", showTag, e)\n                  }\n                />\n              </>\n            ) : (\n              <>\n                {/* secondary  */}\n                {/* show author */}\n                <ToggleControl\n                  label=\"Author\"\n                  checked={author2_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"author2\", \"enable\", author2, e)\n                  }\n                />\n                {/* show date */}\n                <ToggleControl\n                  label=\"Date\"\n                  checked={date2_.enable}\n                  onChange={(e) => this.updateObj(\"date2\", \"enable\", date2, e)}\n                />\n                <ToggleControl\n                  label=\"Categories\"\n                  checked={showCate2_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"showCate2\", \"enable\", showCate2, e)\n                  }\n                />\n                {/* show last date */}\n                <ToggleControl\n                  label=\"Last Modified Date\"\n                  checked={date2_.last_modified}\n                  onChange={(e) =>\n                    this.updateObj(\"date2\", \"last_modified\", date2, e)\n                  }\n                />\n              </>\n            )}\n            {/* secondary  */}\n            <p>\n              <strong>Color</strong>\n            </p>\n            <ColorPalette\n              value={\"color\" in meta_style_ ? meta_style_.color : \"\"}\n              onChange={(color) =>\n                this.updateObj(\"meta_style\", \"color\", meta_style, color)\n              }\n            />\n          </PanelBody>\n          <PanelBody title=\"Excerpt\" initialOpen={false}>\n            <div class=\"zita-switcher-button-section\">\n              <span\n                onClick={() => this.setState({ excerpt: \"primary\" })}\n                className={this.state.excerpt == \"primary\" ? \"selected\" : \"\"}\n              >\n                Primary\n              </span>\n              <span\n                onClick={() => this.setState({ excerpt: \"secondary\" })}\n                className={this.state.excerpt == \"secondary\" ? \"selected\" : \"\"}\n              >\n                Secondary\n              </span>\n            </div>\n            {this.state.excerpt == \"primary\" ? (\n              <>\n                <ToggleControl\n                  label={excerpt_.enable ? \"Hide\" : \"Show\"}\n                  checked={excerpt_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"excerpt\", \"enable\", excerpt, e)\n                  }\n                />\n                {excerpt_.enable && (\n                  <>\n                    <p>\n                      <strong>Number of words</strong>\n                    </p>\n                    <RangeControl\n                      value={excerpt_.words}\n                      min={1}\n                      max={200}\n                      onChange={(e) =>\n                        this.updateObj(\"excerpt\", \"words\", excerpt, e)\n                      }\n                    />\n                    <p>\n                      <strong>Color</strong>\n                    </p>\n                    <ColorPalette\n                      value={excerpt_.color}\n                      onChange={(color) =>\n                        this.updateObj(\"excerpt\", \"color\", excerpt, color)\n                      }\n                    />\n                  </>\n                )}\n              </>\n            ) : (\n              <>\n                <ToggleControl\n                  label={excerpt2_.enable ? \"Hide\" : \"Show\"}\n                  checked={excerpt2_.enable}\n                  onChange={(e) =>\n                    this.updateObj(\"excerpt2\", \"enable\", excerpt2, e)\n                  }\n                />\n                {excerpt2_.enable && (\n                  <>\n                    <p>\n                      <strong>Number of words</strong>\n                    </p>\n                    <RangeControl\n                      value={excerpt2_.words}\n                      min={1}\n                      max={200}\n                      onChange={(e) =>\n                        this.updateObj(\"excerpt2\", \"words\", excerpt2, e)\n                      }\n                    />\n                    <p>\n                      <strong>Color</strong>\n                    </p>\n                    <ColorPalette\n                      value={excerpt2_.color}\n                      onChange={(color) =>\n                        this.updateObj(\"excerpt2\", \"color\", excerpt2, color)\n                      }\n                    />\n                  </>\n                )}\n              </>\n            )}\n          </PanelBody>\n          <PanelBody title=\"Heading\" initialOpen={false}>\n            <div class=\"zita-switcher-button-section\">\n              <span\n                onClick={() => this.setState({ heading: \"primary\" })}\n                className={this.state.heading == \"primary\" ? \"selected\" : \"\"}\n              >\n                Primary\n              </span>\n              <span\n                onClick={() => this.setState({ heading: \"secondary\" })}\n                className={this.state.heading == \"secondary\" ? \"selected\" : \"\"}\n              >\n                Secondary\n              </span>\n            </div>\n            {this.state.heading == \"primary\" ? (\n              <>\n                <p>\n                  <strong>Heading Tag</strong>\n                </p>\n                <select\n                  value={heading_.tag}\n                  className=\"zita-block-select\"\n                  onChange={(e) => {\n                    let value_ = e.target.value;\n                    let font_ =\n                      value_ == \"h1\"\n                        ? 30\n                        : value_ == \"h2\"\n                        ? 25\n                        : value_ == \"h3\"\n                        ? 20\n                        : 17;\n                    let newHeading = [...heading];\n                    newHeading[0][\"tag\"] = value_;\n                    newHeading[0][\"fontSize\"] = font_;\n                    setAttributes({ heading: newHeading });\n                  }}\n                >\n                  <option value=\"h1\">H1</option>\n                  <option value=\"h2\">H2</option>\n                  <option value=\"h3\">H3</option>\n                  <option value=\"p\">P</option>\n                </select>\n                <p>\n                  <strong>Font Size</strong>\n                </p>\n                <RangeControl\n                  value={heading_.fontSize}\n                  min={1}\n                  max={50}\n                  onChange={(e) =>\n                    this.updateObj(\"heading\", \"fontSize\", heading, e)\n                  }\n                />\n                <p>\n                  <strong>Color</strong>\n                </p>\n                <ColorPalette\n                  value={heading_.color}\n                  onChange={(color) =>\n                    this.updateObj(\"heading\", \"color\", heading, color)\n                  }\n                />\n              </>\n            ) : (\n              <>\n                <p>\n                  <strong>Heading Tag</strong>\n                </p>\n                <select\n                  value={heading2_.tag}\n                  className=\"zita-block-select\"\n                  onChange={(e) => {\n                    let value_ = e.target.value;\n                    let font_ =\n                      value_ == \"h1\"\n                        ? 30\n                        : value_ == \"h2\"\n                        ? 25\n                        : value_ == \"h3\"\n                        ? 20\n                        : 17;\n                    let newHeading = [...heading2];\n                    newHeading[0][\"tag\"] = value_;\n                    newHeading[0][\"fontSize\"] = font_;\n                    setAttributes({ heading2: newHeading });\n                  }}\n                >\n                  <option value=\"h1\">H1</option>\n                  <option value=\"h2\">H2</option>\n                  <option value=\"h3\">H3</option>\n                  <option value=\"p\">P</option>\n                </select>\n                <p>\n                  <strong>Font Size</strong>\n                </p>\n                <RangeControl\n                  value={heading2_.fontSize}\n                  min={1}\n                  max={50}\n                  onChange={(e) =>\n                    this.updateObj(\"heading2\", \"fontSize\", heading2, e)\n                  }\n                />\n                <p>\n                  <strong>Color</strong>\n                </p>\n                <ColorPalette\n                  value={heading2_.color}\n                  onChange={(color) =>\n                    this.updateObj(\"heading2\", \"color\", heading2, color)\n                  }\n                />\n              </>\n            )}\n          </PanelBody>\n        </InspectorControls>\n        {posts && posts.length > 0 && \"getMedia_\" in posts[0] ? (\n          <div className=\"zita-two-post-wrapper\">\n            <div className=\"zita-post-two-column\">\n              <div className=\"column-one\">\n                {this.returnHtml(\n                  posts[0],\n                  heading_,\n                  author_,\n                  date_,\n                  meta_style_,\n                  thumbnail_,\n                  showCate_,\n                  excerpt_,\n                  showTag_\n                )}\n              </div>\n              <div className=\"column-two\">\n                {posts.length > 1 &&\n                  posts.map((post, index__) => {\n                    return (\n                      index__ != 0 &&\n                      this.returnHtml(\n                        post,\n                        heading2_,\n                        author2_,\n                        date2_,\n                        meta_style_,\n                        thumbnail_,\n                        showCate2_,\n                        excerpt2_,\n                        false\n                      )\n                    );\n                  })}\n              </div>\n            </div>\n            {posts &&\n              posts.length > 0 &&\n              \"getMedia_\" in posts[0] &&\n              totalPost > posts.length && (\n                <div className=\"zita-two-post-wrapper-next-prev\">\n                  <div>\n                    <i class=\"fas fa-chevron-left\"></i>\n                  </div>\n                  <div>\n                    <i class=\"fas fa-chevron-right\"></i>\n                  </div>\n                </div>\n              )}\n          </div>\n        ) : (\n          <div>{!posts ? \"No Post Found\" : \"Loding...\"}</div>\n        )}\n      </>\n    );\n  }\n}\n// export default Edit;\nexport default withSelect((select, props) => {\n  const { attributes } = props;\n  let { numberOfPosts, postCategories } = attributes;\n  const query = { per_page: numberOfPosts };\n  const query2 = { per_page: -1 };\n  if (postCategories && postCategories.length) {\n    let cateCh = postCategories.join(\",\");\n    query[\"categories\"] = cateCh;\n    query2[\"categories\"] = cateCh;\n  }\n  const { getMedia, getEntityRecords, getAuthors } = select(\"core\");\n  let getTotalPost = getEntityRecords(\"postType\", \"post\", query2);\n  let getAllPost = getEntityRecords(\"postType\", \"post\", query);\n  let cate_ = getEntityRecords(\"taxonomy\", \"category\", { per_page: -1 });\n  let tags_ = getEntityRecords(\"taxonomy\", \"post_tag\", { per_page: -1 });\n  let arrayCatePost = { posts: true, category: cate_, tags: tags_ };\n  if (getAllPost && getAllPost.length) {\n    let returnArray = [];\n    getAllPost.map((v, index_) => {\n      if (v.featured_media) {\n        getAllPost[index_][\"getMedia_\"] = getMedia(v.featured_media);\n      } else {\n        getAllPost[index_][\"getMedia_\"] = false;\n      }\n      returnArray.push(getAllPost[index_]);\n    });\n    arrayCatePost[\"posts\"] = returnArray;\n    arrayCatePost[\"totalPost\"] = getTotalPost.length;\n  } else if (getAllPost instanceof Array && getAllPost.length == 0) {\n    arrayCatePost[\"posts\"] = false;\n  }\n  // autohrs\n  let authors = getAuthors();\n  if (authors && authors.length) {\n    let authors_ = [];\n    authors.map((v) => {\n      authors_.push({ id: v.id, name: v.name });\n    });\n    arrayCatePost[\"authors\"] = authors_;\n  }\n  return arrayCatePost;\n})(Edit);\n","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nconst attrSave = {};\nregisterBlockType(\"zita-blocks/zita-post-tc\", {\n  title: \"Post Two Section\",\n  icon: \"format-aside\",\n  category: \"zita-category\",\n  getEditWrapperProps(attributes) {\n    let attr_ = { \"data-align\": \"full\" };\n    return attr_;\n  },\n  keywords: [\"post two section\"],\n  // attributes: attrSave,\n  edit: Edit,\n  save: () => {\n    return null;\n  },\n});\n","import { Component } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport {\n  InspectorControls,\n  RichText,\n  ColorPalette,\n} from \"@wordpress/block-editor\";\nimport {\n  PanelBody,\n  RangeControl,\n  ToggleControl,\n  SelectControl,\n} from \"@wordpress/components\";\nimport {\n  SortableContainer,\n  SortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\n// import arrayMove from \"array-move\";\nimport { decodeEntities } from \"@wordpress/html-entities\";\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shortList: [\n        { name: \"Item 1\" },\n        { name: \"Item 2\" },\n        { name: \"Item 3\" },\n        { name: \"Item 4\" },\n        { name: \"Item 5\" },\n      ],\n    };\n  }\n  updateObj = (parent_key, child_key, initialValue, value_) => {\n    let newNewValue = [...initialValue];\n    newNewValue[0][child_key] = value_;\n    let setAttr_ = {};\n    setAttr_[parent_key] = newNewValue;\n    this.props.setAttributes(setAttr_);\n  };\n  dateFormate = (date) => {\n    let date_ = date.split(\"T\")[0];\n    let dateObj = new Date(date_);\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let dateArr =\n      monthNames[dateObj.getMonth()] +\n      \" \" +\n      dateObj.getDate() +\n      \", \" +\n      dateObj.getFullYear();\n    return <RichText.Content tag=\"span\" value={dateArr} />;\n  };\n  excerptWords = (words, words_) => {\n    words_ = decodeEntities(words_);\n    words_ = words_.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    words_ = words_.split(\" \");\n    words_ = words_.slice(0, words);\n    return words_.join(\" \");\n  };\n  showCateFn = (categories) => {\n    let returR = [];\n    if (\"category\" in this.props && this.props.category && categories.length) {\n      categories.forEach((cate) => {\n        this.props.category.forEach((searchCate) => {\n          if (cate == searchCate.id) {\n            returR.push(searchCate.name);\n            return;\n          }\n        });\n      });\n    }\n    if (returR.length) {\n      return returR.map((returnH) => <span>{returnH}</span>);\n    }\n  };\n  showTagsFn = (tags_) => {\n    let returR = [];\n    if (\"tags\" in this.props && this.props.tags && tags_.length) {\n      tags_.forEach((tag) => {\n        this.props.tags.forEach((searchtag) => {\n          if (tag == searchtag.id) {\n            returR.push(searchtag.name);\n            return;\n          }\n        });\n      });\n    }\n    if (returR.length) {\n      return returR.map((returnH) => <span>{returnH}</span>);\n    }\n  };\n  // autor\n  authorFn = (author) => {\n    let retur = {};\n    if (\"authors\" in this.props) {\n      this.props.authors.map((authorDetail) => {\n        if (authorDetail.id == author) {\n          retur = authorDetail;\n          return;\n        }\n      });\n    }\n    return retur;\n  };\n  render() {\n    const { posts, attributes, setAttributes, category } = this.props;\n    // console.log(\"this.props\", this.props);\n    let {\n      heading,\n      author,\n      numberOfPosts,\n      thumbnail,\n      numberOfColumn,\n      date,\n      showTag,\n      showCate,\n      excerpt,\n      postCategories,\n      meta_style,\n      title,\n    } = attributes;\n    let heading_ = heading[0];\n    let thumbnail_ = thumbnail[0];\n    let excerpt_ = excerpt[0];\n    let date_ = date[0];\n    let author_ = author[0];\n    let meta_style_ = meta_style[0];\n    let title_ = title[0];\n    let showTag_ = showTag[0];\n    let showCate_ = showCate[0];\n    // category init\n    let cateGory = [{ value: \"all\", label: \"All\" }];\n    if (category && category.length) {\n      category.map((catt) => {\n        cateGory.push({\n          value: catt.id,\n          label: catt.name,\n        });\n      });\n    }\n    // let shortList = this.state.shortList;\n    // let ShotableList = SortableContainer(() => {\n    //   return (\n    //     <ul>\n    //       {shortList.map((item, index) => {\n    //         let ShortItem = SortableElement(() => {\n    //           return (\n    //             <li key={index}>\n    //               <h1>hello {item.name}</h1>\n    //             </li>\n    //           );\n    //         });\n    //         return <ShortItem key={index} index={index} />;\n    //       })}\n    //     </ul>\n    //   );\n    // });\n    return (\n      <>\n        <InspectorControls>\n          <PanelBody title=\"Post Layout\" initialOpen={false}>\n            <p className=\"block-inside\">Block Title</p>\n            {/* <div className=\"check-shortable\">\n              <ShotableList\n                distance={10}\n                axis=\"y\"\n                helperClass={\"dragging-element\"}\n                onSortEnd={({ oldIndex, newIndex }) => {\n                  const items = this.state.shortList;\n                  let new_items = arrayMove(items, oldIndex, newIndex);\n                  this.setState({ shortList: new_items });\n                }}\n              />\n            </div> */}\n            <ToggleControl\n              label={title_.enable ? \"Hide\" : \"Show\"}\n              checked={title_.enable}\n              onChange={(e) => this.updateObj(\"title\", \"enable\", title, e)}\n            />\n            {title_.enable && (\n              <>\n                <RangeControl\n                  label=\"Font Size\"\n                  value={title_.fontSize}\n                  min={5}\n                  max={50}\n                  onChange={(e) => {\n                    this.updateObj(\"title\", \"fontSize\", title, e);\n                  }}\n                />\n                <p>\n                  <strong>Color</strong>\n                </p>\n                <ColorPalette\n                  value={title_.color}\n                  onChange={(color) =>\n                    this.updateObj(\"title\", \"color\", title, color)\n                  }\n                />\n              </>\n            )}\n            <p>\n              <strong>Layout</strong>\n            </p>\n            <select\n              value={numberOfColumn < 2 ? \"list\" : \"grid\"}\n              className=\"zita-block-select\"\n              onChange={(e) => {\n                let value_ = e.target.value == \"grid\" ? 2 : 1;\n                setAttributes({ numberOfColumn: value_ });\n              }}\n            >\n              <option value=\"list\">List</option>\n              <option value=\"grid\">Grid</option>\n            </select>\n            {numberOfColumn >= 2 && (\n              <>\n                <p>\n                  <strong>Column</strong>\n                </p>\n                <RangeControl\n                  value={numberOfColumn}\n                  min={2}\n                  max={4}\n                  onChange={(e) => {\n                    setAttributes({ numberOfColumn: e });\n                  }}\n                />\n              </>\n            )}\n\n            <p>\n              <strong>No of Post Display</strong>\n            </p>\n            <RangeControl\n              value={numberOfPosts}\n              min={1}\n              max={20}\n              onChange={(e) => {\n                setAttributes({ numberOfPosts: e });\n              }}\n            />\n            <ToggleControl\n              label=\"Left Border\"\n              checked={meta_style_.left_border}\n              onChange={(e) =>\n                this.updateObj(\"meta_style\", \"left_border\", meta_style, e)\n              }\n            />\n            {/* featured image */}\n            <p className=\"block-inside\">Featured Image</p>\n            <ToggleControl\n              label={thumbnail_.enable ? \"Hide\" : \"Show\"}\n              checked={thumbnail_.enable}\n              onChange={(e) =>\n                this.updateObj(\"thumbnail\", \"enable\", thumbnail, e)\n              }\n            />\n            {thumbnail_.enable && (\n              <>\n                <p>\n                  <strong>Border Radius</strong>\n                </p>\n                <RangeControl\n                  value={thumbnail_.borderRadius}\n                  min={0}\n                  max={80}\n                  onChange={(e) =>\n                    this.updateObj(\"thumbnail\", \"borderRadius\", thumbnail, e)\n                  }\n                />\n              </>\n            )}\n            {/* featured image */}\n          </PanelBody>\n          <PanelBody title=\"Post Meta\" initialOpen={false}>\n            {/* category */}\n            <p>\n              <strong>Choose Category</strong>\n            </p>\n            <div className=\"zita-multiple-select\">\n              <SelectControl\n                multiple\n                value={postCategories.length ? postCategories : [\"all\"]}\n                onChange={(choosen) => {\n                  let chooseAll = choosen.filter((choose) => {\n                    if (choose == \"all\") return true;\n                  });\n                  if (chooseAll.length) choosen = [];\n                  setAttributes({ postCategories: choosen });\n                }}\n                options={cateGory}\n              />\n            </div>\n            {/* category */}\n            {/* show author */}\n            <ToggleControl\n              label=\"Author\"\n              checked={author_.enable}\n              onChange={(e) => this.updateObj(\"author\", \"enable\", author, e)}\n            />\n            {/* show date */}\n            <ToggleControl\n              label=\"Date\"\n              checked={date_.enable}\n              onChange={(e) => this.updateObj(\"date\", \"enable\", date, e)}\n            />\n            <ToggleControl\n              label=\"Categories\"\n              checked={showCate_.enable}\n              onChange={(e) =>\n                this.updateObj(\"showCate\", \"enable\", showCate, e)\n              }\n            />\n            {/* show last date */}\n            <ToggleControl\n              label=\"Last Modified Date\"\n              checked={date_.last_modified}\n              onChange={(e) => this.updateObj(\"date\", \"last_modified\", date, e)}\n            />\n            <ToggleControl\n              label=\"Tag\"\n              checked={showTag_.enable}\n              onChange={(e) => this.updateObj(\"showTag\", \"enable\", showTag, e)}\n            />\n            <p>\n              <strong>Color</strong>\n            </p>\n            <ColorPalette\n              value={\"color\" in meta_style_ ? meta_style_.color : \"\"}\n              onChange={(color) =>\n                this.updateObj(\"meta_style\", \"color\", meta_style, color)\n              }\n            />\n          </PanelBody>\n          <PanelBody title=\"Excerpt\" initialOpen={false}>\n            <ToggleControl\n              label={excerpt_.enable ? \"Hide\" : \"Show\"}\n              checked={excerpt_.enable}\n              onChange={(e) => this.updateObj(\"excerpt\", \"enable\", excerpt, e)}\n            />\n            {excerpt_.enable && (\n              <>\n                <p>\n                  <strong>Number of words</strong>\n                </p>\n                <RangeControl\n                  value={excerpt_.words}\n                  min={1}\n                  max={200}\n                  onChange={(e) =>\n                    this.updateObj(\"excerpt\", \"words\", excerpt, e)\n                  }\n                />\n              </>\n            )}\n            <p>\n              <strong>Color</strong>\n            </p>\n            <ColorPalette\n              value={excerpt_.color}\n              onChange={(color) =>\n                this.updateObj(\"excerpt\", \"color\", excerpt, color)\n              }\n            />\n          </PanelBody>\n          <PanelBody title=\"Heading\" initialOpen={false}>\n            <p>\n              <strong>Heading Tag</strong>\n            </p>\n            <select\n              value={heading_.tag}\n              className=\"zita-block-select\"\n              onChange={(e) => {\n                let value_ = e.target.value;\n                let font_ =\n                  value_ == \"h1\"\n                    ? 30\n                    : value_ == \"h2\"\n                    ? 25\n                    : value_ == \"h3\"\n                    ? 20\n                    : 17;\n                let newHeading = [...heading];\n                newHeading[0][\"tag\"] = value_;\n                newHeading[0][\"fontSize\"] = font_;\n                setAttributes({ heading: newHeading });\n              }}\n            >\n              <option value=\"h1\">H1</option>\n              <option value=\"h2\">H2</option>\n              <option value=\"h3\">H3</option>\n              <option value=\"p\">P</option>\n            </select>\n            <p>\n              <strong>Font Size</strong>\n            </p>\n            <RangeControl\n              value={heading_.fontSize}\n              min={1}\n              max={50}\n              onChange={(e) =>\n                this.updateObj(\"heading\", \"fontSize\", heading, e)\n              }\n            />\n            <p>\n              <strong>Color</strong>\n            </p>\n            <ColorPalette\n              value={heading_.color}\n              onChange={(color) =>\n                this.updateObj(\"heading\", \"color\", heading, color)\n              }\n            />\n          </PanelBody>\n        </InspectorControls>\n        {posts && posts.length > 0 && \"getMedia_\" in posts[0] ? (\n          <div className=\"zita-block-post\">\n            {title_.enable && (\n              <RichText\n                className=\"zita-block-post-title\"\n                key=\"editable\"\n                tagName=\"h1\"\n                placeholder=\"My block title\"\n                value={title_.value}\n                style={{\n                  fontSize: title_.fontSize + \"px\",\n                  color: title_.color,\n                }}\n                onChange={(e) => this.updateObj(\"title\", \"value\", title, e)}\n              />\n            )}\n            <div\n              className={`column-count column-count-${numberOfColumn} ${\n                meta_style_.left_border && \"left-border\"\n              }`}\n            >\n              {posts.map((post) => {\n                let postAuthor =\n                  author_.enable && \"name\" in this.authorFn(post.author)\n                    ? this.authorFn(post.author).name\n                    : false;\n                return (\n                  <article className=\"block-post-article\" key={post.id}>\n                    <div className=\"post-wrapper\">\n                      {\"getMedia_\" in post &&\n                        post.getMedia_ &&\n                        \"guid\" in post.getMedia_ &&\n                        thumbnail_.enable && (\n                          <div className=\"featured-image\">\n                            <img\n                              style={{\n                                borderRadius: thumbnail_.borderRadius + \"px\",\n                              }}\n                              src={post.getMedia_.guid.rendered}\n                            />\n                          </div>\n                        )}\n                      <div className=\"post-content\">\n                        {showCate_.enable && (\n                          <p className=\"post-category\">\n                            {this.showCateFn(post.categories)}\n                          </p>\n                        )}\n                        <RichText.Content\n                          className=\"post-heading\"\n                          tagName={heading_.tag}\n                          value={post.title.rendered}\n                          style={{\n                            fontSize: heading_.fontSize,\n                            color: heading_.color,\n                          }}\n                        />\n                        <div className=\"post-meta-all\">\n                          {postAuthor && (\n                            <p\n                              style={{ color: meta_style_.color }}\n                              className=\"post-author\"\n                            >\n                              {postAuthor}\n                            </p>\n                          )}\n                          {date_.enable && (\n                            <>\n                              <span className=\"slash\">/</span>\n                              <p\n                                style={{ color: meta_style_.color }}\n                                className=\"post-date\"\n                              >\n                                {this.dateFormate(post.date)}\n                              </p>\n                            </>\n                          )}\n                          {date_.last_modified && (\n                            <>\n                              <span className=\"slash\">/</span>\n                              <p\n                                style={{ color: meta_style_.color }}\n                                className=\"post-date-last-modified\"\n                              >\n                                <span>Modified: </span>\n                                {this.dateFormate(post.modified)}\n                              </p>\n                            </>\n                          )}\n                        </div>\n                        {excerpt_.enable && (\n                          <p\n                            style={{ color: excerpt_.color }}\n                            className=\"post-excerpt\"\n                          >\n                            {this.excerptWords(\n                              excerpt_.words,\n                              post.excerpt.rendered\n                            )}\n                          </p>\n                        )}\n                        {showTag_.enable && (\n                          <p\n                            style={{ color: meta_style_.color }}\n                            className=\"post-tags\"\n                          >\n                            {this.showTagsFn(post.tags)}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </article>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div>{!posts ? \"No Post Found\" : \"Loding...\"}</div>\n        )}\n      </>\n    );\n  }\n}\n// export default Edit;\nexport default withSelect((select, props) => {\n  const { attributes } = props;\n  let { numberOfPosts, postCategories } = attributes;\n  const query = { per_page: numberOfPosts };\n  if (postCategories && postCategories.length) {\n    query[\"categories\"] = postCategories.join(\",\");\n  }\n  const { getMedia, getEntityRecords, getAuthors } = select(\"core\");\n  let getAllPost = getEntityRecords(\"postType\", \"post\", query);\n  let cate_ = getEntityRecords(\"taxonomy\", \"category\", { per_page: -1 });\n  let tags_ = getEntityRecords(\"taxonomy\", \"post_tag\", { per_page: -1 });\n  let arrayCatePost = { posts: true, category: cate_, tags: tags_ };\n  if (getAllPost && getAllPost.length) {\n    let returnArray = [];\n    getAllPost.map((v, index_) => {\n      if (v.featured_media) {\n        getAllPost[index_][\"getMedia_\"] = getMedia(v.featured_media);\n      } else {\n        getAllPost[index_][\"getMedia_\"] = false;\n      }\n      returnArray.push(getAllPost[index_]);\n    });\n    arrayCatePost[\"posts\"] = returnArray;\n  } else if (getAllPost instanceof Array && getAllPost.length == 0) {\n    arrayCatePost[\"posts\"] = false;\n  }\n  // autohrs\n  let authors = getAuthors();\n  if (authors && authors.length) {\n    let authors_ = [];\n    authors.map((v) => {\n      authors_.push({ id: v.id, name: v.name });\n    });\n    arrayCatePost[\"authors\"] = authors_;\n  }\n  return arrayCatePost;\n})(Edit);\n","// extracted by mini-css-extract-plugin","import \"./editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nconst attrSave = {};\nregisterBlockType(\"zita-blocks/zita-post\", {\n  title: \"Post\",\n  icon: \"format-aside\",\n  category: \"zita-category\",\n  getEditWrapperProps(attributes) {\n    let attr_ = { \"data-align\": \"full\" };\n    return attr_;\n  },\n  keywords: [\"post\"],\n  // attributes: attrSave,\n  edit: Edit,\n  save: () => {\n    return null;\n  },\n});\n","import \"./blocks/icon-block\";\n// import './blocks/test-block';\nimport \"./blocks/service-section\";\nimport \"./blocks/pricing-table\";\nimport \"./blocks/progress-bar\";\nimport \"./blocks/progress-bar-pie\";\nimport \"./blocks/zita-block-slider\";\nimport \"./blocks/zita-post\";\nimport \"./blocks/zita-post-slider\";\nimport \"./blocks/zita-post-tc\";\n","module.exports = wp[\"blockEditor\"];","module.exports = wp[\"blocks\"];","module.exports = wp[\"components\"];","module.exports = wp[\"data\"];","module.exports = wp[\"element\"];","module.exports = wp[\"htmlEntities\"];"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzrkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAIA;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAKA;AACA;AACA;;;;;;;;;;;;;ACrpLA;AACA;AACA,aiv3DA;AACA;AACA,aAEA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAyNA;;;;;;;;;;;;ACzNA;AAAA;AA08CA;;;;;;;;;;;AC18CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAOA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAvFA;AA4FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AA7BA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AAAA;AAAA;AAAA;AACA;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAmBA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAIA;AAOA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAhBA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAMA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAUA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAYA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AANA;AAUA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AANA;AAsBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAUA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAkBA;AAhlBA;;;;;;;;;;;ACnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjLA;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AAIA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAGA;AACA;AAFA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAGA;AACA;AACA;AACA;AAJA;AACA;AAnIA;AAAA;AAAA;AAAA;AACA;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3JA;AAAA;AAAA;AAAA;AACA;AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAyeA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAMA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AASA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAVA;AAcA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AATA;AAaA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAhBA;AAoBA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AADA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAPA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AAIA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAGA;AACA;AAFA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AAWA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AADA;AAWA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAWA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAXA;AAeA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AADA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAaA;AA5rCA;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAcA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;AACA;AACA;AAHA;AASA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAYA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAFA;AAMA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAIA;AAvGA;;;;;;;;;;;ACJA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAfA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAPA;AAcA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAWA;AACA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAaA;AAlRA;;;;;;;;;;;AC5BA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AANA;AASA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AANA;AASA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAMA;AApKA;;;;;;;;;;;ACrBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAQA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAzGA;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkCA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAIA;AACA;AACA;AAHA;AACA;AAjEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtFA;AAAA;AAAA;AAAA;AACA;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AANA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AAAA;AAMA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAmBA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAIA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AACA;AAAA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAaA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AACA;AAAA;AADA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AANA;AAaA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AANA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA+BA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAIA;AACA;AACA;AAHA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AAUA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AASA;AA7lBA;;;;;;;;;;;;ACnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAIA;AAtFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAMA;AAMA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAjCA;AAiDA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9DA;AA4EA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjFA;AAkFA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAzFA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAsDA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AADA;AAGA;;;AAmBA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAGA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAGA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAcA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAJA;AAWA;AAAA;AAAA;AAGA;AAJA;AAWA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAUA;AAGA;AACA;AAAA;AAAA;AALA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AACA;AACA;AACA;AAAA;AACA;AALA;AAWA;AACA;AACA;AACA;AAAA;AAKA;AATA;AAkBA;AAGA;AACA;AAAA;AAAA;AALA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AACA;AAAA;AAAA;AAFA;AAUA;AACA;AACA;AACA;AAAA;AAKA;AATA;AAkBA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AALA;AANA;AAgBA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AACA;AALA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AAJA;AAWA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAUA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAUA;AACA;AAAA;AAAA;AAFA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAOA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAUA;AAGA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAFA;AAQA;AACA;AACA;AACA;AAAA;AAKA;AATA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AAGA;AACA;AAAA;AAAA;AALA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAFA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAMA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AAKA;AADA;AAOA;AADA;AAKA;AACA;AAAA;AACA;AAAA;AAGA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AASA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AARA;AAcA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AARA;AAaA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AARA;AAcA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AARA;AAmBA;AAKA;;;;AAjyBA;AACA;AAkyBA;;;;;;;;;;;ACjzBA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AApBA;AAHA;AA8BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAjCA;AAkDA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAjCA;AAkDA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAjCA;AArGA;AA/BA;AACA;AAuLA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AAEA;AACA;AAFA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AADA;AAFA;AAOA;AAEA;AACA;AAFA;AAFA;AASA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAeA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAGA;AAAA;AAEA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAWA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AAGA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AACA;AAFA;AAWA;AACA;AAOA;AA7GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/TA;AAMA;AAOA;AACA;AACA;AAEA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AAcA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AA7BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAqCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApDA;AAqDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApEA;AAsEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlFA;AAmFA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAzFA;AA0FA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjGA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;;;AA+FA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AACA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAcA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAJA;AAWA;AAAA;AAAA;AAGA;AAJA;AAWA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAUA;AAGA;AACA;AAAA;AAAA;AALA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AAJA;AAiBA;AAAA;AAEA;AACA;AAKA;AACA;AARA;AAiBA;AACA;AAKA;AACA;AARA;AAqBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AACA;AACA;AACA;AAAA;AAKA;AATA;AAeA;AACA;AACA;AACA;AAAA;AAKA;AATA;AAsBA;AAGA;AACA;AAAA;AAAA;AALA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AACA;AAAA;AAAA;AAFA;AAUA;AACA;AACA;AACA;AAAA;AAKA;AATA;AAkBA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAaA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;AAeA;AACA;AACA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AAmBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAUA;AACA;AAAA;AAAA;AAFA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAKA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAHA;AAQA;AAGA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAGA;AAIA;AAKA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAUA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AACA;AAFA;AASA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAUA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AAFA;AAiBA;AAaA;AADA;AAIA;AAKA;AADA;AAOA;AADA;AAKA;AAOA;AAAA;AAKA;AADA;AAGA;AAAA;AAIA;AAMA;;;;AAlxBA;AACA;AAmxBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AC10BA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAKA;AAMA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAfA;AAgBA;AACA;AACA;AAcA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAxCA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA;AAkDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjEA;AAkEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjFA;AAmFA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA9FA;AAyGA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AADA;AAGA;AAJA;AAQA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AArLA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AA+KA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;AACA;AAAA;AAAA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;AAeA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAaA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAcA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAUA;AACA;AACA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AACA;AAAA;AAAA;AAFA;AAYA;AACA;AACA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AACA;AAAA;AAAA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AAmBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AACA;AAAA;AAAA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AAmBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AACA;AAAA;AAAA;AAFA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAaA;AAAA;AAGA;AAcA;AAOA;AAAA;AAEA;AAAA;AAGA;AAAA;AAUA;;;;AA9qBA;AACA;AACA;AA+qBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;ACzuBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAKA;AAMA;AACA;AAKA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAnBA;AAoBA;AACA;AACA;AAcA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AA5CA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AAoDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnEA;AAoEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnFA;AAqFA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA9FA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AANA;AAFA;AAWA;AACA;;;AAoFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;AACA;AAAA;AAAA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;AAgBA;AACA;AACA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAcA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AAmBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAYA;AACA;AAAA;AAAA;AAFA;AASA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAVA;AAcA;AADA;AAMA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AADA;AAGA;AAJA;AAQA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AAAA;AAGA;AAAA;AAAA;AACA;AAFA;AASA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAUA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AAFA;AAWA;AAQA;;;;AAlhBA;AACA;AACA;AAmhBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AC9kBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}